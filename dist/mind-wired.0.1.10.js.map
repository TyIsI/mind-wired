{"version":3,"file":"mind-wired.0.1.10.js","mappings":"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","sources":["webpack://mindwired/webpack/universalModuleDefinition","webpack://mindwired/webpack/bootstrap","webpack://mindwired/webpack/runtime/define property getters","webpack://mindwired/webpack/runtime/global","webpack://mindwired/webpack/runtime/hasOwnProperty shorthand","webpack://mindwired/webpack/runtime/make namespace object","webpack://mindwired/webpack/runtime/publicPath","webpack://mindwired/./src/service/dom.js","webpack://mindwired/./src/service/clone.js","webpack://mindwired/./src/service/event-bus.js","webpack://mindwired/./src/service/dnd.js","webpack://mindwired/./src/components/dnd/viewport-dnd.js","webpack://mindwired/./src/service/geom.js","webpack://mindwired/./src/components/canvas-ui.js","webpack://mindwired/./src/components/edge/edge-style.js","webpack://mindwired/./src/components/edge/mustache-lr-renderer.js","webpack://mindwired/./src/components/edge/mustache-tb-renderer.js","webpack://mindwired/./src/components/edge-ui.js","webpack://mindwired/./src/components/edge/line-edge-renderer.js","webpack://mindwired/./src/components/edge/natural-curve-renderer.js","webpack://mindwired/./src/components/node-ui.js","webpack://mindwired/./src/components/layout/node/default-layout.js","webpack://mindwired/./src/components/layout/node/axis-x-layout.js","webpack://mindwired/./src/components/layout/node/axis-y-layout.js","webpack://mindwired/./src/components/layout/node/axis-xy-layout.js","webpack://mindwired/./src/components/layout/index.js","webpack://mindwired/./src/components/direction.js","webpack://mindwired/./src/components/selection/node-selection-model.js","webpack://mindwired/./src/components/selection/index.js","webpack://mindwired/./src/components/editing/node-editing.js","webpack://mindwired/./src/components/node/renderer/plain-text-renderer.js","webpack://mindwired/./src/components/node/renderer/icon-badge-renderer.js","webpack://mindwired/./src/components/node/renderer/thumbnail-renderer.js","webpack://mindwired/./src/components/node/node-rendering-context.js","webpack://mindwired/./src/components/node/index.js","webpack://mindwired/./src/service/index.js","webpack://mindwired/./src/components/alignment/alignment-ui.js","webpack://mindwired/./src/components/datasource/tree-ds.js","webpack://mindwired/./src/components/mind-wired.js","webpack://mindwired/./src/components/dnd/change-parent-node.js","webpack://mindwired/./src/components/dnd/node-dnd.js","webpack://mindwired/./src/components/config.js","webpack://mindwired/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mindwired\"] = factory();\n\telse\n\t\troot[\"mindwired\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","/* eslint-disable max-classes-per-file */\nclass Attr {\n  constructor(attrExpression) {\n    this.expression = attrExpression;\n  }\n\n  get isClass() {\n    return this.expression.charAt(0) === \".\";\n  }\n\n  get isId() {\n    return this.expression.charAt(0) === \"#\";\n  }\n\n  get value() {\n    return this.expression.substring(1);\n  }\n\n  setAttribute(el) {\n    if (this.isId) {\n      el.setAttribute(\"id\", this.value);\n    } else if (this.isClass) {\n      el.classList.add(this.value);\n    } else {\n      throw new Error(`neither id nor class : [${this.expression}]`);\n    }\n  }\n}\nconst closest = (elem, selector) => {\n  if (elem.nodeType === 1) {\n    return elem.closest(selector);\n  }\n  if (elem.nodeType === 3) {\n    return elem.parentElement.closest(selector);\n  }\n  throw new Error(`node type ${elem.nodeTye}, tag(${elem.nodeName})`);\n};\n\nconst parseAttr = (expression) => {\n  const attr = expression || \"\";\n  return attr\n    .split(\" \")\n    .map((val) => val.trim())\n    .filter((val) => val.length > 0);\n};\nconst createEl = (tagName, attributes) => {\n  const tag = document.createElement(tagName);\n  attributes.forEach((value) => {\n    const attr = new Attr(value);\n    attr.setAttribute(tag);\n  });\n  return tag;\n};\nconst tag = {\n  span: (attr, content) => {\n    const span = createEl(\"span\", parseAttr(attr));\n    if (content) {\n      span.innerHTML = content;\n    }\n    return span;\n  },\n  iconButton: (attrs, content) => {\n    const button = createEl(\"BUTTON\", parseAttr(attrs));\n    button.innerHTML = content;\n    return button;\n  },\n  img: (imgUrl) => {\n    const img = document.createElement(\"img\");\n    return new Promise((resolve, reject) => {\n      img.onload = () => {\n        resolve({ img, width: img.naturalWidth, height: img.naturalHeight });\n      };\n      img.onerror = () => {\n        console.log(\"ERROR\");\n        reject(\"NOT_ALLOWED\");\n      };\n      img.crossOrigin = \"Anonymous\";\n      img.src = imgUrl;\n    });\n  },\n  div: (attr) => createEl(\"DIV\", parseAttr(attr)),\n  canvas: (attr) => createEl(\"CANVAS\", parseAttr(attr)),\n};\nconst attr = (el, attrName, attrValue, always) => {\n  const v = el.getAttribute(attrName);\n  if (always || !v) {\n    el.setAttribute(attrName, attrValue);\n  }\n};\nconst clazz = {\n  add: (el, className) => el.classList.add(className),\n  remove: (el, className) => el.classList.remove(className),\n};\nconst imageSize = (imgUrl) => {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"HEAD\", imgUrl, true);\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState === xhr.DONE) {\n      console.log(xhr.getResponseHeader(\"Content-Length\"));\n    }\n  };\n  xhr.send();\n};\n\nconst fileToImage = (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve) => {\n    reader.addEventListener(\"load\", () => {\n      const img = document.createElement(\"img\");\n      img.src = reader.result;\n      resolve({ file, img });\n    });\n    reader.readAsDataURL(file);\n  });\n};\n\nconst registerEvent = (target, eventName, callback, options) => {\n  const el = target || window;\n  el.addEventListener(eventName, callback, options || false);\n};\n\nconst registerKeyEvent = (target, eventName, callback, option) => {\n  target.addEventListener(eventName, (e) => {\n    const code = e.code.toLowerCase();\n    const { keys } = option;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const { ctrlKey, shiftKey, altKey, metaKey } = e;\n      if (\n        key.code === \"*\" ||\n        (key.code === code &&\n          key.alt === altKey &&\n          key.meta === metaKey &&\n          key.shift === shiftKey &&\n          key.ctrl === ctrlKey)\n      ) {\n        callback(e);\n        break;\n      }\n    }\n  });\n};\n/**\n * 'enter'\n * 'space'\n * 'ctrl@enter'\n * 'alt+shift@space'\n * @param {string} keyFormat\n */\nconst parseKeyOption = (keyFormat) => {\n  let [metaKeys, code] = keyFormat.split(\"@\");\n  if (!code) {\n    // 'enter', 'space'\n    code = metaKeys;\n    metaKeys = \"\";\n  }\n  const metas = metaKeys.split(\"+\");\n  return {\n    ctrl: metas.includes(\"ctrl\"),\n    shift: metas.includes(\"shift\"),\n    alt: metas.includes(\"alt\"),\n    meta: metas.includes(\"meta\"),\n    code,\n  };\n};\nconst data = {\n  int: (el, attrList) => {\n    const d = {};\n    attrList.forEach((key) => {\n      const v = el.dataset[key];\n      d[key] = parseInt(v, 10);\n    });\n    return d;\n  },\n};\nconst stopPropagation = (e) => e.stopPropagation();\nconst event = {\n  createEventBus: () => new EventBus(),\n  consume: (target, eventName) => {\n    target.addEventListener(eventName, stopPropagation);\n  },\n  focus: (target, callback, options) =>\n    registerEvent(target, \"focus\", callback, options),\n  mousedown: (callback, target, options) => {\n    registerEvent(target, \"mousedown\", callback, options);\n  },\n  mousemove: (callback, target, options) => {\n    registerEvent(target, \"mousemove\", callback, options);\n  },\n  mouseup: (callback, target, options) => {\n    registerEvent(target, \"mouseup\", callback, options);\n  },\n  touchstart: (callback, target, options) => {\n    registerEvent(target, \"touchstart\", callback, options);\n  },\n  touchmove: (callback, target, options) => {\n    registerEvent(target, \"touchmove\", callback, options);\n  },\n  touchend: (callback, target, options) => {\n    registerEvent(target, \"touchend\", callback, options);\n  },\n  click: (target, callback, options) => {\n    registerEvent(target, \"click\", callback, options);\n  },\n  keydown: (target, callback, options) => {\n    options = options || \"*\";\n    const keys = options\n      .split(\" \")\n      .filter((key) => key.trim().length > 0)\n      .map((key) => parseKeyOption(key));\n    registerKeyEvent(target, \"keydown\", callback, { keys });\n  },\n  keyup: (target, callback, options) => {\n    options = options || \"*\";\n    const keys = options\n      .split(\" \")\n      .filter((key) => key.trim().length > 0)\n      .map((key) => parseKeyOption(key));\n    registerKeyEvent(target, \"keyup\", callback, {\n      keys,\n    });\n    // registerEvent(target, \"keyup\", callback, options);\n  },\n  resize: (target, callback) => {},\n};\nconst converters = {\n  width: (val) => {\n    const type = typeof val;\n    return type === \"number\" ? `${val}px` : val;\n  },\n};\n\"top,left,height,minWidth,minHeight\".split(\",\").forEach((prop) => {\n  converters[prop] = converters.width;\n});\n\nconst css = (el, styles) => {\n  Object.keys(styles).forEach((key) => {\n    const fn = converters[key] || ((val) => val);\n    const value = fn(styles[key]);\n    el.style[key] = value;\n  });\n};\nconst parseTemplate = (template, params) => {\n  let t = template;\n  Object.keys(params || {}).forEach((key) => {\n    const text = \"@\" + key;\n    const value = params[key];\n    t = t.replaceAll(text, value);\n  });\n  const virtualElem = document.createElement(\"template\");\n  virtualElem.innerHTML = t;\n  return virtualElem.content.firstElementChild;\n  // return virtualDiv.firstElementChild;\n};\nconst findOne = (el, cssSelector) => el.querySelector(cssSelector);\nconst is = (el, cssSelector, searchParent = true) => {\n  const found = el.matches(cssSelector);\n  if (found) {\n    return found;\n  }\n  if (searchParent) {\n    const elem = closest(el, cssSelector);\n    return !!elem;\n  } else {\n    return false;\n  }\n};\nconst domRect = (el) => el.getBoundingClientRect();\n\nconst types = {\n  method: (obj) => typeof obj === \"function\",\n};\nconst valid = {\n  path: (value) =>\n    new Promise((yes, no) => {\n      const v = value && value.trim();\n      if (v.length > 0) {\n        yes(v);\n      } else {\n        no(value);\n      }\n    }),\n  number: (value) =>\n    new Promise((yes, no) => {\n      const n = parseFloat(value);\n      if (Number.isNaN(n)) {\n        no(value);\n      } else {\n        yes(n);\n      }\n    }),\n  string: (value) => typeof value === \"string\" && value.trim().length > 0,\n};\nexport default {\n  tag,\n  attr,\n  clazz,\n  closest,\n  imageSize,\n  fileToImage,\n  event,\n  css,\n  parseTemplate,\n  findOne,\n  is,\n  data,\n  domRect,\n  types,\n  valid,\n};\n","const isPrimitive = (o) => {\n  const type = typeof o;\n  if (\"number,string,boolean,undefined\".includes(type)) return true;\n};\nconst isFunction = (o) => typeof o === \"function\";\nconst deepCopy = (src) => {\n  if (\n    src === undefined ||\n    src === null ||\n    isPrimitive(src) ||\n    isFunction(src)\n  ) {\n    return src;\n  }\n  const dst = Array.isArray(src) ? [] : {};\n  Object.keys(src).forEach((prop) => {\n    const value = deepCopy(src[prop]);\n    dst[prop] = value;\n  });\n  return dst;\n};\n/**\n * merge existing leaf value of src into target\n *\n *```javascript\n * src: {padding: {left: 8, right: 8}}\n * target: {color: '#aaa', padding: {top: 16} }\n *\n * merged: {color: '#aaa', padding: {top: 16, left:8, right: 8}}\n * ```\n * @param {object} src\n * @param {object} target\n */\nconst mergeLeaf = (src, target) => {\n  Object.keys(src).forEach((prop) => {\n    if (target[prop] === null || target[prop] === undefined) {\n      target[prop] = deepCopy(src[prop]);\n    } else if (isPrimitive(src[prop])) {\n      target[prop] = src[prop];\n    } else {\n      mergeLeaf(src[prop], target[prop]);\n    }\n  });\n  return target;\n};\nexport default {\n  deepCopy,\n  mergeLeaf,\n};\n","const EVENT = {\n  DRAG: {\n    VIEWPORT: { name: \"viewport dragged\", desc: \"\" },\n    NODE: { name: \"node dragged\", desc: \"\" },\n  },\n  SELECTION: {\n    NODE: {\n      name: \"node selected\",\n      desc: \"\",\n    },\n  },\n  EDIT: {\n    NODE: {\n      name: \"editing state of a node\",\n      desc: \"\",\n    },\n  },\n  NODE: {\n    CREATED: {\n      name: \"node.created\",\n      desc: \"\",\n    },\n    DELETED: {\n      name: \"node.deleted\",\n      desc: \"node has been deleted\",\n    },\n    UPDATED: {\n      name: \"node.updated\",\n      desc: \"content of node updated\",\n    },\n    EDITING: {\n      name: \"node.editing\",\n      desc: \"node's editing state\",\n    },\n    FOLDED: {\n      name: \"node.folded\",\n      desc: \"node is folded or unfolded\",\n    },\n  },\n  VIEWPORT: {\n    RESIZED: {\n      name: \"viewport.resized\",\n      desc: \"viewport size chaged\",\n    },\n    CLICKED: {\n      name: \"viewport.clicked\",\n      desc: \"viewport has been clicked\",\n    },\n  },\n};\nconst parseEvent = (eventName) => {\n  const pathes = eventName.toUpperCase().split(\".\");\n  let obj = EVENT;\n  for (let i = 0; i < pathes.length; i++) {\n    obj = obj[pathes[i]];\n    if (!obj) {\n      throw new Error(`invalid event name: [${eventName}]`);\n    }\n  }\n  if (obj.name !== eventName) {\n    throw new Error(`event name mismatch: [${eventName}]`);\n  }\n  return obj;\n};\nconst EMPTY_SET = new Set();\nclass EventBus {\n  constructor() {\n    this.callbacks = new Map();\n  }\n\n  on(eventName, callback) {\n    let callbackList = this.callbacks.get(eventName);\n    if (!callbackList) {\n      callbackList = new Set();\n      this.callbacks.set(eventName, callbackList);\n    }\n    callbackList.add(callback);\n  }\n  off(eventObj, callback) {\n    const callbackList = this.callbacks.get(eventObj);\n    if (!callbackList) {\n      return;\n    }\n    const idx = callbackList.findIndex((cb) => cb === callback);\n    callbackList.splice(idx, 1);\n  }\n  /**\n   * used to register client-side callback\n   * @param {string} eventName like \"valid.event.path\" format\n   * @param {function} callback\n   */\n  listen(eventName, callback) {\n    const event = parseEvent(eventName);\n    this.on(event, callback);\n  }\n  emit(eventName, payload) {\n    const callbackList = this.callbacks.get(eventName) || EMPTY_SET;\n    callbackList.forEach((cb) => {\n      try {\n        cb(payload);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }\n}\n\nexport { EventBus, EVENT };\n","/**\n * dummy dnd handlers\n */\nconst beforeDrag = () => {};\nconst dragging = beforeDrag;\nconst afterDrag = beforeDrag;\n\nconst convToMouseEvent = (te) => {\n  let touch = te.touches[0];\n  if (te.type === \"touchend\") {\n    touch = te.changedTouches[0];\n  }\n  te.clientX = touch.clientX;\n  te.clientY = touch.clientY;\n  te.layerX = 0;\n  te.layerY = 0;\n  te.offsetX = 0;\n  te.offsetY = 0;\n  te.pageX = touch.pageX;\n  te.pageY = touch.pageY;\n  te.screenX = touch.screenX;\n  te.screenY = touch.screenY;\n};\nconst clearTouchTimer = (ctx) => {\n  clearTimeout(ctx.touchTimer);\n  ctx.touchTimer = null;\n};\nconst mousedown = (ctx, e) => {\n  const { handler } = ctx;\n  if (!handler.accept(e.target)) {\n    return;\n  }\n  ctx.dragging = {\n    originalEvent: e,\n    sx: e.pageX,\n    sy: e.pageY,\n    dx: 0,\n    dy: 0,\n    ghost: null,\n    once: null,\n  };\n  handler.beforeDrag(ctx.dragging);\n};\n\nconst mousemove = (ctx, e) => {\n  if (ctx.dragging) {\n    e.preventDefault();\n    if (ctx.dragging.once) {\n      ctx.dragging.once();\n      ctx.dragging.once = null;\n    }\n    ctx.originalEvent = e;\n    ctx.originalEvent = e;\n    ctx.dragging.dx = e.pageX - ctx.dragging.sx;\n    ctx.dragging.dy = e.pageY - ctx.dragging.sy;\n    ctx.handler.dragging(ctx.dragging);\n  }\n};\nconst mouseup = (ctx, e) => {\n  ctx.originalEvent = e;\n  document.querySelector(\"body\").style.cursor = \"\";\n  try {\n    // ghost.clear();\n    if (ctx.dragging) {\n      // console.log('[M-UP]', e.target)\n      ctx.handler.afterDrag(ctx.dragging);\n    }\n  } catch (e) {\n    console.log(\"[DND error]\", e);\n  } finally {\n    ctx.data.clear();\n    ctx.dragging = null;\n  }\n};\nconst touchstart = (ctx, e) => {\n  ctx.touchTimer = setTimeout(() => {\n    convToMouseEvent(e);\n    mousedown(ctx, e);\n  }, 10);\n};\nconst touchmove = (ctx, e) => {\n  clearTouchTimer(ctx);\n  convToMouseEvent(e);\n  mousemove(ctx, e);\n};\nconst touchend = (ctx, e) => {\n  clearTouchTimer(ctx);\n  convToMouseEvent(e);\n  mouseup(ctx, e);\n};\n\nconst install = (ctx) => {\n  const { handler } = ctx;\n  handler.beforeDrag = handler.beforeDrag || beforeDrag;\n  handler.dragging = handler.dragging || dragging;\n  handler.afterDrag = handler.afterDrag || afterDrag;\n\n  window.addEventListener(\"mousedown\", (e) => mousedown(ctx, e), false);\n  window.addEventListener(\"mousemove\", (e) => mousemove(ctx, e), {\n    passive: false,\n  });\n  window.addEventListener(\"mouseup\", (e) => mouseup(ctx, e), false);\n  window.addEventListener(\"touchstart\", (e) => touchstart(ctx, e), false);\n  window.addEventListener(\"touchmove\", (e) => touchmove(ctx, e), {\n    passive: false,\n  });\n  window.addEventListener(\"toucend\", (e) => touchend(ctx, e), false);\n};\nclass DndContext {\n  constructor(handler) {\n    this.touchTimer = null;\n    this.dragging = null;\n    this.handler = handler;\n    this.data = new Map();\n    install(this);\n  }\n  capture(name, value) {\n    this.data.set(name, value);\n  }\n  getData(name) {\n    return this.data.get(name);\n  }\n}\n\nexport { DndContext };\n","import { EVENT } from \"../../service/event-bus\";\n/**\n * handles viewport dragging\n */\n\nconst viewportDndHandler = (canvasUI) => ({\n  beforeDrag: (e) => {\n    canvasUI.dndContext.capture(\"offset\", canvasUI.config.getOffset());\n  },\n  dragging: (e) => {\n    const { dx, dy } = e;\n    canvasUI.dndContext.capture(\"dragged\", true);\n    const offset = canvasUI.dndContext.getData(\"offset\");\n    canvasUI.config.emit(EVENT.DRAG.VIEWPORT, {\n      x: offset.x + dx,\n      y: offset.y + dy,\n    });\n  },\n  afterDrag: (e) => {\n    // console.log(\"[DND AFTER]\", e);\n    const { dx, dy } = e;\n    // canvasUI.shiftBy(dx, dy);\n    const offset = canvasUI.dndContext.getData(\"offset\");\n    canvasUI.config.emit(EVENT.DRAG.VIEWPORT, {\n      x: offset.x + dx,\n      y: offset.y + dy,\n    });\n    const dragged = canvasUI.dndContext.getData(\"dragged\");\n    if (!dragged) {\n      canvasUI.config.emit(EVENT.VIEWPORT.CLICKED);\n    }\n  },\n});\n\nexport default viewportDndHandler;\n","/**\n * move dst to dst'\n *\n *   |\n *   |             + dst'\n *   |\n *   |                + dst\n *   |  by deg\n *   +-------------------------->\n *  base\n *\n * @param {Point} base\n * @param {Point} dst\n * @param {number} degree - [0~360]\n */\nconst rotate = (base, dst, degree, { scale = 1 }) => {\n  const dx = (dst.x - base.x) * scale;\n  const dy = (dst.y - base.y) * scale;\n  const rad = (degree * Math.PI) / 180;\n  const cos = Math.cos(rad);\n  const sin = Math.sin(rad);\n\n  return {\n    x: dx * cos - dy * sin + base.x,\n    y: dx * sin + dy * cos + base.y,\n  };\n};\n\nexport default {\n  rotate,\n};\n","import { dom } from \"../service\";\nimport { DndContext } from \"../service/dnd\";\nimport viewportDndHandler from \"./dnd/viewport-dnd\";\nimport nodeDndHandler from \"./dnd/node-dnd\";\nimport changeParentDndHandler from \"./dnd/change-parent-node\";\nimport { EVENT } from \"../service/event-bus\";\nimport iconSetPara from \"../assets/icon-chng-parent.svg\";\nimport iconfolding from \"../assets/icon-folded.svg\";\nimport geom from \"../service/geom\";\n\nconst pixelRatio = window.devicePixelRatio;\nconst template = {\n  viewport: `<div data-mind-wired-viewport>\n    <canvas></canvas>\n    <div class=\"mwd-selection-area\"><div class=\"ctrl-icon\" data-cmd=\"set-para\" style=\"display:none; background-image: url(${iconSetPara});\"></div></div>\n    <div class=\"mwd-nodes\"></div>\n  </div>`,\n  node: `<div class=\"mwd-node\">\n    <div class=\"mwd-body\" tabIndex=\"0\"></div>\n    <div class=\"mwd-subs\"></div>\n    <div class=\"mwd-node-ctrl\"></div>\n  </div>`,\n  foldingControl: `<div class=\"ctrl-icon\" data-cmd=\"unfolding\" style=\"background-image: url(${iconfolding});\"></div>`,\n};\n\nclass NodeRect {\n  constructor(node, scale) {\n    const offset = node.offset();\n    offset.x *= scale;\n    offset.y *= scale;\n    const rect = dom.domRect(node.$bodyEl);\n    const { width, height } = rect;\n    this.top = offset.y - height / 2;\n    this.right = offset.x + width / 2;\n    this.bottom = offset.y + height / 2;\n    this.left = offset.x - width / 2;\n    this.width = width;\n    this.height = height;\n    this.cx = offset.x;\n    this.cy = offset.y;\n    this.icon = null;\n  }\n  merge(other) {\n    this.top = Math.min(this.top, other.top);\n    this.right = Math.max(this.right, other.right);\n    this.bottom = Math.max(this.bottom, other.bottom);\n    this.left = Math.min(this.left, other.left);\n    this.width = this.right - this.left;\n    this.height = this.bottom - this.top;\n    this.cx = this.width / 2;\n    this.cy = this.height / 2;\n    return this;\n  }\n  draw(canvas) {\n    const { selection } = canvas.config.ui;\n    const offset = canvas.getHolderOffset();\n\n    const el = dom.findOne(canvas.$viewport, \".mwd-selection-area\");\n    dom.css(el, {\n      left: offset.x + this.left - selection.padding,\n      top: offset.y + this.top - selection.padding,\n      width: this.width + 2 * selection.padding,\n      height: this.height + 2 * selection.padding,\n    });\n    const ctrl = dom.findOne(el, \"div\");\n    dom.css(ctrl, {\n      display: \"\",\n      width: 24 / Math.max(canvas.scale, 1),\n      height: 24 / Math.max(canvas.scale, 1),\n    });\n  }\n  clear(canvas) {\n    const el = dom.findOne(canvas.$viewport, \".mwd-selection-area\");\n    dom.css(el, { top: -1, left: -1, width: 0, height: 0 });\n    const ctrl = dom.findOne(el, \"div\");\n    dom.css(ctrl, { display: \"none\" });\n  }\n}\nconst installCanvasElem = (canvasUI) => {\n  const { el, ui } = canvasUI.config;\n  const width = ui.width || 600;\n  const height = ui.height || 600;\n  let viewport = dom.findOne(el, \"[data-mind-wired-viewport]\");\n  if (!viewport) {\n    viewport = dom.parseTemplate(template.viewport, {});\n    el.append(viewport);\n  }\n  dom.attr(viewport, \"tabIndex\", \"0\");\n  dom.css(viewport, { width, height });\n\n  return viewport;\n};\nconst captureContext2D = (canvasUI) => {\n  const { config, $viewport, $canvas } = canvasUI;\n  const { offsetWidth, offsetHeight } = $viewport;\n  dom.css($canvas, { width: offsetWidth, height: offsetHeight });\n  dom.attr($canvas, \"width\", pixelRatio * offsetWidth, true);\n  dom.attr($canvas, \"height\", pixelRatio * offsetHeight, true);\n  const ctx = $canvas.getContext(\"2d\", { alpha: false });\n\n  canvasUI.$ctx = ctx;\n  canvasUI.$ctx.scale(pixelRatio, pixelRatio);\n  config.emit(EVENT.VIEWPORT.RESIZED);\n};\nconst registerElement = (canvasUI, nodeUI) => {\n  if (nodeUI.$el) {\n    throw new Error(`[MINDWIRED][ERROR] already installed. (${nodeUI.uid})`);\n  }\n  const $el = (nodeUI.$el = dom.parseTemplate(template.node));\n  const renderingContext = canvasUI.config.getNodeRenderer();\n  const { model } = nodeUI;\n  const nodeRenderer = renderingContext.getRenderer(model.type);\n  nodeRenderer.install(nodeUI);\n\n  const placeHolder = canvasUI.elemOf(\".mwd-nodes\");\n  if (nodeUI.isRoot()) {\n    placeHolder.append($el);\n  } else {\n    const $subs = dom.findOne(nodeUI.parent.$el, \".mwd-subs\");\n    $subs.append($el);\n  }\n  // apply uuid for node instance\n  $el.dataset.uid = nodeUI.uid;\n  return nodeUI.$el;\n};\nconst unregisterElement = (canvasUI, nodeUI) => {\n  if (!nodeUI.$el) {\n    throw new Error(`[MINDWIRED][ERROR] not registered node. (${nodeUI.uid})`);\n  }\n  nodeUI.$el.remove();\n  delete nodeUI.$el;\n};\nconst installDnd = (canvasUI) => {\n  return new DndContext({\n    accept: (el) => {\n      const mwd = canvasUI.config.mindWired();\n      if (dom.closest(el, \"[data-editor-element]\")) {\n        return false;\n      }\n      if (dom.is(el, `[data-cmd=\"set-para\"]`)) {\n        canvasUI.dndContext.capture(\n          \"handler\",\n          changeParentDndHandler(canvasUI)\n        );\n        return true;\n      } else if (dom.closest(el, \"[data-cmd]\")) {\n        return false;\n      } else if (dom.is(el, \"canvas\")) {\n        canvasUI.dndContext.capture(\"handler\", viewportDndHandler(canvasUI));\n        return true;\n      } else if (dom.is(el, \".mwd-node\")) {\n        const nodeId = el.dataset.uid;\n        canvasUI.dndContext.capture(\"handler\", nodeDndHandler(canvasUI));\n        canvasUI.dndContext.capture(\"nodeId\", nodeId);\n        canvasUI.dndContext.capture(\"editing\", mwd.isEditing());\n        return true;\n      } else {\n        return false;\n      }\n    },\n    beforeDrag: (e) => {\n      const handler = canvasUI.dndContext.getData(\"handler\");\n      handler.beforeDrag(e);\n    },\n    dragging: (e) => {\n      const editing = canvasUI.dndContext.getData(\"editing\");\n      if (!editing) {\n        const handler = canvasUI.dndContext.getData(\"handler\");\n        handler.dragging(e);\n      }\n    },\n    afterDrag: (e) => {\n      const editing = canvasUI.dndContext.getData(\"editing\");\n      if (!editing) {\n        const handler = canvasUI.dndContext.getData(\"handler\");\n        handler.afterDrag(e);\n      }\n    },\n  });\n};\nconst updateFolding = (node, display) => {\n  dom.css(node.$el, { display });\n  if (node.isFolded()) {\n    return;\n  }\n  node.subs.forEach((child) => {\n    updateFolding(child, display);\n  });\n};\nconst installFocusHandler = (canvasUI) => {\n  /*\n  dom.event.focus(\n    canvasUI.$viewport,\n    (e) => {\n      if (dom.is(e.target, \"[data-editor-element]\", true)) {\n        // prevents focus to propaga to root elem\n        // it breaks editing process\n      } else if (dom.is(e.target, \".mwd-node\")) {\n        const uid = e.target.parentNode.dataset.uid;\n        const mwd = canvasUI.config.mindWired();\n        const node = mwd.findNode((node) => node.uid === uid);\n        canvasUI.config.emit(EVENT.SELECTION.NODE, { node });\n      }\n    },\n    true\n  );\n  */\n};\nclass CanvasUI {\n  constructor(config) {\n    this.config = config;\n    this.$viewport = installCanvasElem(this);\n    captureContext2D(this);\n    installFocusHandler(this);\n    this.dndContext = installDnd(this);\n    let timer = null;\n    const resizer = () => {\n      clearTimeout(timer);\n      timer = setTimeout(captureContext2D, 150, this);\n    };\n    this.resizeObserver = new ResizeObserver(resizer);\n    this.resizeObserver.observe(this.$viewport);\n    this.selectionArea = null;\n  }\n  get $canvas() {\n    return this.$viewport.querySelector(\"canvas\");\n  }\n  get $holder() {\n    return this.$viewport.querySelector(\".mwd-nodes\");\n  }\n  get scale() {\n    return this.config.scale;\n  }\n  getContext() {\n    return this.$ctx;\n  }\n  getHolderOffset() {\n    const el = this.$holder;\n    // const baseOffset = this.config.getOffset();\n    return { x: el.offsetLeft, y: el.offsetTop };\n  }\n  getDimension() {\n    const el = this.$canvas;\n    return { width: el.offsetWidth, height: el.offsetHeight };\n  }\n  elemOf(cssSelector) {\n    return this.$viewport.querySelector(cssSelector);\n  }\n  shiftBy(dx, dy) {\n    const offset = this.config.getOffset();\n    offset.x += dx;\n    offset.y += dy;\n    this.config.setOffset(offset);\n    this.repaintNodeHolder();\n  }\n  findNodeAt(x, y) {\n    const nodeBodies = this.$holder.querySelectorAll(\".mwd-body\");\n    let found = null;\n    for (let i = 0; i < nodeBodies.length; i++) {\n      const rect = dom.domRect(nodeBodies[i]);\n      if (\n        rect.left <= x &&\n        rect.right >= x &&\n        rect.top <= y &&\n        rect.bottom >= y\n      ) {\n        found = nodeBodies[i];\n        break;\n      }\n    }\n    if (!found) {\n      return null;\n    }\n    const mwd = this.config.mindWired();\n    const nodeEl = dom.closest(found, \".mwd-node\");\n    const node = mwd.findNode((node) => node.uid === nodeEl.dataset.uid);\n    return node;\n  }\n  drawPath(points, options) {\n    const ctx = this.getContext();\n    Object.keys(options || {}).forEach((key) => {\n      const val = options[key];\n      ctx[key] = val;\n    });\n    let s = points[0];\n    points = points.slice(1);\n\n    const offset = this.getHolderOffset();\n    ctx.beginPath();\n    ctx.moveTo(offset.x + s.x, offset.y + s.y);\n    points.forEach((e) => {\n      ctx.lineTo(offset.x + e.x, offset.y + e.y);\n    });\n    ctx.stroke();\n  }\n  drawCurve(s, e, option) {\n    const lenSE = Math.sqrt(\n      (s.x - e.x) * (s.x - e.x) + (s.y - e.y) * (s.y - e.y)\n    );\n    const degree = option.degree;\n    const length = lenSE * option.ratio;\n    const scale = length / lenSE;\n    const cp1 = geom.rotate(s, e, degree, { scale });\n    const cp2 = geom.rotate(e, s, degree, { scale });\n    const offset = this.getHolderOffset();\n    const ctx = this.getContext();\n    Object.keys(option.props || {}).forEach((key) => {\n      const val = option.props[key];\n      ctx[key] = val;\n    });\n    ctx.beginPath();\n    ctx.moveTo(offset.x + s.x, offset.y + s.y);\n    ctx.bezierCurveTo(\n      offset.x + cp1.x,\n      offset.y + cp1.y,\n      offset.x + cp2.x,\n      offset.y + cp2.y,\n      offset.x + e.x,\n      offset.y + e.y\n    );\n    ctx.stroke();\n  }\n  drawBeizeCurve(s, e, option) {\n    const ctx = this.getContext();\n    Object.keys(option.props || {}).forEach((key) => {\n      const val = option.props[key];\n      ctx[key] = val;\n    });\n    const [cp1, cp2] = option.cpoints;\n    const offset = this.getHolderOffset();\n    ctx.beginPath();\n    ctx.moveTo(offset.x + s.x, offset.y + s.y);\n    ctx.bezierCurveTo(\n      offset.x + cp1.x,\n      offset.y + cp1.y,\n      offset.x + cp2.x,\n      offset.y + cp2.y,\n      offset.x + e.x,\n      offset.y + e.y\n    );\n    ctx.stroke();\n  }\n  drawVLines(xPoints, option) {\n    const H = this.$viewport.offsetHeight;\n    const ctx = this.getContext();\n    ctx.save();\n    if (typeof option === \"function\") {\n      option(ctx);\n    }\n    ctx.beginPath();\n    const offset = this.getHolderOffset();\n    xPoints.forEach((x) => {\n      ctx.moveTo(offset.x + x, 0);\n      ctx.lineTo(offset.x + x, H);\n    });\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n  drawHLines(yPoints, option) {\n    const W = this.$viewport.offsetWidth;\n    const ctx = this.getContext();\n    ctx.save();\n    if (typeof option === \"function\") {\n      option(ctx);\n    }\n    ctx.beginPath();\n    const offset = this.getHolderOffset();\n    yPoints.forEach((y) => {\n      ctx.moveTo(0, offset.y + y);\n      ctx.lineTo(W, offset.y + y);\n    });\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n  clear() {\n    const dim = this.getDimension();\n    const ctx = this.getContext();\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, dim.width, dim.height);\n\n    // drawGrid(ctx, dim);\n  }\n\n  repaintNodeHolder() {\n    const baseOffset = this.config.getOffset();\n    const { scale } = this.config;\n    dom.css(this.$holder, {\n      top: `calc(50% + ${baseOffset.y}px)`,\n      left: `calc(50% + ${baseOffset.x}px)`,\n      transform: `scale(${scale})`,\n    });\n    if (this.selectionArea) {\n      this.selectionArea.draw(this);\n    }\n  }\n  moveNode(nodeUI) {\n    // moveNode\n    const { parent } = nodeUI;\n    const $subs = dom.findOne(parent.$el, \".mwd-subs\");\n    $subs.append(nodeUI.$el);\n  }\n  drawSelection(nodes) {\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n    this.hideSelection();\n    const rects = nodes.map((n) => new NodeRect(n, this.scale));\n    this.selectionArea = rects.reduce((acc, rect) => acc.merge(rect), rects[0]);\n    this.selectionArea.draw(this);\n  }\n  hideSelection() {\n    if (this.selectionArea) {\n      this.selectionArea.clear(this);\n      this.selectionArea = null;\n    }\n  }\n  drawNode(nodeUI) {\n    if (!nodeUI.$el) {\n      registerElement(this, nodeUI);\n    }\n    const { uid } = nodeUI;\n    const nodeEl = dom.findOne(this.$holder, `[data-uid=\"${uid}\"]`);\n    const renderingContext = this.config.getNodeRenderer();\n\n    const { model } = nodeUI;\n    const type = model.type || \"text\";\n    const nodeRenderer = renderingContext.getRenderer(type);\n    nodeRenderer.render(nodeUI);\n  }\n  showNodeEditor(nodeUI, $editorEl) {\n    const { uid } = nodeUI;\n    const nodeEl = this.$holder.querySelector(`[data-uid=${uid}]`);\n    nodeEl.append($editorEl);\n    // mark editor element for focus management\n    // see installFocusHandler();\n    $editorEl.dataset.editorElement = \"\";\n    return new Promise((ok) => {\n      setTimeout(ok);\n    });\n  }\n  hideNodeEditor(nodeUI) {\n    const { uid } = nodeUI;\n    const nodeEl = this.$holder.querySelector(`[data-uid=${uid}]`);\n    const editBox = dom.findOne(nodeEl, \"[data-editor-element]\");\n    if (editBox) {\n      editBox.remove();\n    }\n    dom.findOne(nodeEl, \".mwd-body\").focus();\n  }\n  regsiterNode(nodeUI) {\n    registerElement(this, nodeUI);\n    // nodeUI.repaint();\n  }\n  unregisterNode(nodeUI) {\n    unregisterElement(this, nodeUI);\n    this.hideSelection();\n  }\n  updateFoldingNodes(nodeUI) {\n    const display = nodeUI.isFolded() ? \"none\" : \"\";\n    nodeUI.subs.forEach((childNode) => {\n      updateFolding(childNode, display);\n    });\n    const nodeEl = dom.findOne(this.$holder, `[data-uid=\"${nodeUI.uid}\"]`);\n    if (nodeUI.isFolded()) {\n      const rect = dom.domRect(nodeUI.$bodyEl);\n      const foldingEl = dom.parseTemplate(template.foldingControl, {});\n      dom.css(foldingEl, {\n        width: 20,\n        height: 20,\n        transform: `translate(${rect.width / 2}px, -50%)`,\n        zIndex: 0,\n      });\n      nodeEl.append(foldingEl);\n      dom.event.click(foldingEl, (e) => {\n        e.stopPropagation();\n        nodeUI.setFolding(false);\n      });\n    } else {\n      dom.findOne(nodeEl, ':scope > [data-cmd=\"unfolding\"]').remove();\n    }\n  }\n  getNodeBody(nodeUI) {\n    let nodeEl = nodeUI.$el;\n    // let bodyEl = this.$holder.querySelector(`[data-uid=${nodeUI.uid}] .mwd-body`);\n    if (!nodeEl) {\n      nodeEl = registerElement(this, nodeUI);\n    }\n    return nodeEl.querySelector(`.mwd-body`);\n  }\n}\nexport default CanvasUI;\n","/**\n * edge style calculator\n *\n * supported style\n * - name:string\n * - option:object(edge dependant)\n * - color:string(name of color, #aaccss, etc)\n * - width:number(line width)\n */\nconst DEFAULT_EDGE_STYLE = {\n  name: \"line\",\n  option: {},\n  color: \"#000000\",\n  width: 1,\n};\nconst findProp = (node, prop) => {\n  let nodeRef = node;\n  let style = nodeRef.getStyle(\"edge\");\n  while (!style[prop] && !nodeRef.isRoot()) {\n    nodeRef = nodeRef.parent;\n    style = nodeRef.getStyle(\"edge\");\n  }\n  return style[prop] || DEFAULT_EDGE_STYLE[prop];\n};\nclass EdgeStyle {\n  constructor(nodeUI) {\n    this.nodeUI = nodeUI;\n  }\n  get name() {\n    return findProp(this.nodeUI, \"name\");\n  }\n  get option() {\n    return findProp(this.nodeUI, \"option\");\n  }\n  get color() {\n    return findProp(this.nodeUI, \"color\");\n  }\n  get width() {\n    return findProp(this.nodeUI, \"width\");\n  }\n}\n\nexport default EdgeStyle;\n","import { dom } from \"../../service\";\n\nconst widthOf = (node) => {\n  const { width } = node.$style;\n  return typeof width === \"function\" ? width(node) : width;\n};\nconst valignOf = (node) => {\n  const { option } = node.$style;\n  const valign = option && option.valign;\n  return valign || \"center\";\n};\nconst renderUnderline = (canvas, node, rect, padding) => {\n  const width = widthOf(node);\n  // const { scale } = canvas;\n  canvas.drawPath(\n    [\n      { x: rect.left - padding.hor, y: rect.bottom + padding.ver },\n      { x: rect.right + padding.hor, y: rect.bottom + padding.ver },\n    ],\n    { lineWidth: width, strokeStyle: node.$style.color }\n  );\n};\nconst renderCurve = (canvas, srcNode, s, dstNode, e, dx) => {\n  // const { scale } = canvas;\n  const srcWidth = widthOf(srcNode);\n  const dstWidth = widthOf(dstNode);\n  const width = Math.min(srcWidth, dstWidth);\n  const offset = Math.abs(srcWidth - dstWidth);\n  s.y -= offset / 2;\n  const props = { lineWidth: width, strokeStyle: dstNode.$style.color };\n  canvas.drawBeizeCurve(s, e, {\n    cpoints: [\n      { x: s.x + dx / 2, y: s.y },\n      { x: e.x - dx / 2, y: e.y },\n    ],\n    props,\n  });\n  if (offset > 0) {\n    s.y += offset;\n    canvas.drawBeizeCurve(s, e, {\n      cpoints: [\n        { x: s.x + dx / 2, y: s.y },\n        { x: e.x - dx / 2, y: e.y },\n      ],\n      props,\n    });\n  }\n};\nconst renderByMustache = (canvas, srcNode, dstNode) => {\n  const { scale } = canvas;\n  const [s, e] = [srcNode, dstNode].map((node) => {\n    const offset = node.offset(); // pure logical value\n    offset.x *= scale;\n    offset.y *= scale;\n    const rect = dom.domRect(node.$bodyEl);\n    const { width, height } = rect; // with scale applied\n    offset.left = offset.x - width / 2;\n    offset.right = offset.x + width / 2;\n    offset.top = offset.y - height / 2;\n    offset.bottom = offset.y + height / 2;\n    offset.width = width;\n    offset.height = height;\n    return offset;\n  });\n  const padding = { hor: 0, ver: 0 };\n\n  if (valignOf(srcNode) === \"bottom\") {\n    padding.ver = 5;\n  }\n\n  let min, max;\n  if (s.x <= e.x) {\n    min = s;\n    max = e;\n  } else {\n    min = e;\n    max = s;\n  }\n\n  min.x = min.right + padding.hor;\n  max.x = max.left - padding.hor;\n  if (padding.ver > 0) {\n    min.y = min.bottom + padding.ver;\n    max.y = max.bottom + padding.ver;\n  }\n  const dx = max.x - min.x;\n  const dy = max.y - min.y;\n  const w = widthOf(srcNode);\n  if (padding.ver > 0 && srcNode.isRoot() && srcNode.firstChild() === dstNode) {\n    renderUnderline(canvas, srcNode, s, padding);\n  }\n  renderCurve(canvas, srcNode, s, dstNode, e, s === min ? dx : -dx);\n  if (padding.ver > 0) {\n    renderUnderline(canvas, dstNode, e, padding);\n  }\n  // renderUnderline(canvas, dstNode, e, padding);\n  // if (dstNode.isLeaf() && padding.ver > 0) {\n  // }\n};\n\nexport default renderByMustache;\n","import { dom } from \"../../service\";\n\nconst widthOf = (node) => {\n  const { width } = node.$style;\n  return typeof width === \"function\" ? width(node) : width;\n};\nconst valignOf = (node) => {\n  const { option } = node.$style;\n  const valign = option && option.valign;\n  return valign || \"center\";\n};\nconst renderCurve = (canvas, srcNode, s, dstNode, e, dy) => {\n  const { scale } = canvas;\n  const srcWidth = widthOf(srcNode);\n  const dstWidth = widthOf(dstNode);\n  const width = Math.min(srcWidth, dstWidth);\n  const offset = Math.abs(srcWidth - dstWidth);\n  s.x -= offset / 2;\n  const props = { lineWidth: width * scale, strokeStyle: dstNode.$style.color };\n  canvas.drawBeizeCurve(s, e, {\n    cpoints: [\n      { x: s.x, y: s.y + dy / 2 },\n      { x: e.x, y: e.y - dy / 2 },\n    ],\n    props,\n  });\n  if (offset > 0) {\n    s.y += offset;\n    canvas.drawBeizeCurve(s, e, {\n      cpoints: [\n        { x: s.x, y: s.y + dy / 2 },\n        { x: e.x, y: e.y - dy / 2 },\n      ],\n      props,\n    });\n  }\n};\nconst renderByMustache = (canvas, srcNode, dstNode) => {\n  const { scale } = canvas;\n  const [s, e] = [srcNode, dstNode].map((node) => {\n    const offset = node.offset(scale);\n    const rect = dom.domRect(node.$bodyEl);\n    const { width, height } = rect;\n    offset.left = offset.x - width / 2;\n    offset.right = offset.x + width / 2;\n    offset.top = offset.y - height / 2;\n    offset.bottom = offset.y + height / 2;\n    offset.width = width;\n    offset.height = height;\n    return offset;\n  });\n  const padding = { hor: 0, ver: 5 };\n\n  let min, max;\n  if (s.y <= e.y) {\n    min = s;\n    max = e;\n  } else {\n    min = e;\n    max = s;\n  }\n\n  min.y = min.bottom + padding.ver;\n  max.y = max.top - padding.ver;\n\n  // const dx = max.x - min.x;\n  const dy = max.y - min.y;\n  // const w = widthOf(srcNode);\n  renderCurve(canvas, srcNode, s, dstNode, e, s === min ? dy : -dy);\n};\n\nexport default renderByMustache;\n","import { EVENT } from \"../service/event-bus\";\nimport EdgeStyle from \"./edge/edge-style\";\nimport line_edge from \"./edge/line-edge-renderer\";\nimport curve_edge from \"./edge/natural-curve-renderer\";\nimport mustache_edge_lr from \"./edge/mustache-lr-renderer\";\nimport mustache_edge_tb from \"./edge/mustache-tb-renderer\";\n\nconst rendering = {\n  LINE: line_edge,\n  NATURAL_CURVE: curve_edge,\n  MUSTACHE_LR: mustache_edge_lr,\n  MUSTACHE_TB: mustache_edge_tb,\n};\nconst createEdges = (srcNode, edges) => {\n  srcNode.children((child) => {\n    const e = new Edge(srcNode, child);\n    edges.push(e);\n    createEdges(child, edges);\n  });\n};\nconst filterIndex = (edges, callback) => {\n  const pos = [];\n  edges.forEach((e, index) => {\n    if (callback(e)) {\n      pos.push(index);\n    }\n  });\n  return pos;\n};\nconst updateHiddenState = (edgeUI, edge, folded) => {\n  const childEdges = edgeUI.filterEdges(\n    (e) => e.src === edge.dst && !e.src.isFolded()\n  );\n  childEdges.forEach((edge) => {\n    edge.hidden = folded;\n    updateHiddenState(edgeUI, edge, folded);\n  });\n};\nclass Edge {\n  constructor(srcNode, dstNode) {\n    this.srcNode = srcNode;\n    this.dstNode = dstNode;\n    this.hidden = false;\n  }\n  get src() {\n    return this.srcNode;\n  }\n  get dst() {\n    return this.dstNode;\n  }\n  matched(node) {\n    return this.srcNode === node || this.dstNode === node;\n  }\n  matchedDst(node) {\n    return this.dstNode === node;\n  }\n}\nclass EdgeUI {\n  constructor(config, rootNode, canvas) {\n    this.config = config;\n    this.canvas = canvas;\n    this.edges = [];\n    createEdges(rootNode, this.edges);\n    this.config\n      .listen(EVENT.NODE.CREATED, (nodes) => {\n        nodes.forEach((nodeUI) => {\n          const e = new Edge(nodeUI.parent, nodeUI);\n          this.edges.push(e);\n        });\n        this.repaint();\n      })\n      .listen(EVENT.VIEWPORT.RESIZED, () => {\n        this.repaint();\n      })\n      .listen(EVENT.NODE.DELETED, (node) => {\n        const pos = filterIndex(this.edges, (e) => e.matched(node));\n        if (pos.length === 0) {\n          // MEMO invalid state: the deleted node does not exist.\n        } else {\n          pos.reverse().forEach((index) => this.edges.splice(index, 1));\n          // this.edges.splice(pos, 1);\n          this.repaint();\n        }\n      })\n      .listen(EVENT.NODE.MOVED, ({ node, prevParent }) => {\n        const pos = filterIndex(\n          this.edges,\n          (e) => e.src === prevParent && e.dst === node\n        );\n        if (pos.length > 0) {\n          pos.reverse().forEach((index) => this.edges.splice(index, 1));\n        }\n        const e = new Edge(node.parent, node);\n        this.edges.push(e);\n        this.repaint();\n      })\n      .listen(EVENT.NODE.FOLDED, ({ node }) => {\n        const edges = this.edges.filter((edge) => edge.src === node);\n        const folded = node.isFolded();\n        edges.forEach((edge) => {\n          edge.hidden = folded;\n          updateHiddenState(this, edge, folded);\n        });\n\n        this.repaint();\n      });\n  }\n  filterEdges(predicate) {\n    return this.edges.filter(predicate);\n  }\n  repaint(clearCanvas = true) {\n    if (clearCanvas) {\n      this.canvas.clear();\n    }\n    this.edges.forEach((e) => {\n      const { src, dst } = e;\n      const style = dst.$cachedStyle || new EdgeStyle(dst);\n      dst.$cachedStyle = style;\n      if (!e.hidden) {\n        rendering[style.name.toUpperCase()](this.canvas, src, dst);\n      }\n    });\n  }\n}\n\nexport default EdgeUI;\n","import { dom } from \"../../service\";\n/**\n * @param {CanvasUI} canvas\n * @param {NodeUI} srcNode\n * @param {NodeUI} dstNode\n */\nconst renderByLine = (canvas, srcNode, dstNode) => {\n  const { scale } = canvas;\n  const [s, e] = [srcNode, dstNode].map((node) => {\n    const offset = node.offset(); // pure logical value\n    offset.x *= scale;\n    offset.y *= scale;\n    const rect = dom.domRect(node.$bodyEl);\n    const { width, height } = rect; // with scale applied\n    offset.left = offset.x - width / 2;\n    offset.right = offset.x + width / 2;\n    offset.top = offset.y - height / 2;\n    offset.bottom = offset.y + height / 2;\n    offset.width = width;\n    offset.height = height;\n    return offset;\n  });\n  const style = dstNode.$style;\n  canvas.drawPath([s, e], {\n    lineWidth: style.width * scale,\n    strokeStyle: style.color,\n  });\n};\n\nexport default renderByLine;\n","/**\n * natural curve\n */\n/**\n * @param {CanvasUI} canvas\n * @param {NodeUI} srcNode\n * @param {NodeUI} dstNode\n */\nconst renderByCurve = (canvas, srcNode, dstNode) => {\n  const { scale } = canvas;\n  const [s, e] = [srcNode, dstNode].map((node) => node.offset(scale));\n  const style = srcNode.$style;\n  canvas.drawCurve(s, e, {\n    degree: style.option.deg || 20,\n    ratio: style.option.ratio || 0.4,\n    props: {\n      lineWidth: style.width * scale,\n      strokeStyle: style.color,\n    },\n  });\n};\n\nexport default renderByCurve;\n","import { dom } from \"../service\";\nimport { EVENT } from \"../service/event-bus\";\nimport EdgeStyle from \"./edge/edge-style\";\n\nconst parseSubs = (nodeUi) => {\n  const { subs } = nodeUi.config;\n  if (!subs || subs.length === 0) {\n    return [];\n  }\n  return subs.map((elem) => {\n    const node = new NodeUI(elem, nodeUi.sharedConfig);\n    node.parent = nodeUi;\n    return node;\n  });\n};\nlet uid = 100;\nlet zIndex = 1;\nclass NodeUI {\n  constructor(config, sharedConfig, parentNode) {\n    this.config = config;\n    this.sharedConfig = sharedConfig;\n    this.$el = null;\n    this.selected = false;\n    this.editing = false;\n    this.uid = `uuid-${uid++}`;\n    this.zIndex = 0;\n    this.subs = parseSubs(this);\n    this.parent = parentNode;\n    this.$style = new EdgeStyle(this);\n    this.folding = false;\n    this.$dim = null;\n  }\n  get model() {\n    return { ...this.config.model };\n  }\n  get $bodyEl() {\n    const canvas = this.sharedConfig.getCanvas();\n    return canvas.getNodeBody(this);\n  }\n  get x() {\n    return this.config.view.x;\n  }\n  get y() {\n    return this.config.view.y;\n  }\n  get layout() {\n    let { layout } = this.config.view;\n    if (layout) {\n      return { ...layout };\n    } else return this.parent && this.parent.layout;\n  }\n  get active() {\n    return !!this.$el;\n  }\n  get childNodes() {\n    return [...this.subs];\n  }\n  dimension() {\n    const scale = this.sharedConfig.scale;\n    const el = this.$bodyEl;\n    const offset = this.offset();\n    offset.x *= scale;\n    offset.y *= scale;\n    const w = (el.offsetWidth * scale) / 2;\n    const h = (el.offsetHeight * scale) / 2;\n    return (this.$dim = {\n      x: offset.x - w,\n      y: offset.y - h,\n      width: 2 * w,\n      height: 2 * h,\n      cx: offset.x,\n      cy: offset.y,\n      r: offset.x + w,\n      b: offset.y + h,\n    });\n  }\n  level() {\n    return this.isRoot() ? 0 : this.parent.level() + 1;\n  }\n  getStyle(type) {\n    // type: 'edge', 'node'\n    return Object.assign({}, this.config.view[type]);\n  }\n  isSelected() {\n    return this.selected;\n  }\n  setSelected(selected) {\n    this.selected = selected;\n    this.zIndex = ++zIndex;\n    if (this.active) {\n      this.repaint();\n    }\n  }\n  isDescendantOf(dstNode) {\n    let ref = this;\n    while (ref) {\n      if (ref === dstNode) {\n        return true;\n      } else {\n        ref = ref.parent;\n      }\n    }\n    return false;\n  }\n  updateModel(callback) {\n    const { model } = this.config;\n    if (callback(model)) {\n      this.$dim = null;\n      this.repaint();\n      this.sharedConfig.emit(EVENT.NODE.UPDATED, [this]);\n    }\n  }\n  offset() {\n    let ref = this;\n    const p = { x: 0, y: 0 };\n    while (ref) {\n      const dir = 1; // ref.isRoot() ? -1 : 1;\n      p.x += dir * ref.x;\n      p.y += dir * ref.y;\n      ref = ref.parent;\n    }\n    return p;\n  }\n  setOffset({ x, y }) {\n    if (this.isRoot()) {\n      return;\n    }\n    const poff = this.parent.offset();\n    this.setPos(x - poff.x, y - poff.y);\n  }\n  /**\n   * relative pos from the direct parent\n   * @returns (x, y) from the direct parent\n   */\n  getPos() {\n    const dir = 1;\n    // this.isRoot() ? -1 : 1;\n    return { x: dir * this.x, y: dir * this.y };\n  }\n  setPos(x, y, update = true) {\n    this.config.view.x = x;\n    this.config.view.y = y;\n    if (update) {\n      this.repaint();\n    }\n  }\n  isEditingState() {\n    return this.editing;\n  }\n  setEditingState(editing) {\n    this.editing = editing;\n    this.repaint();\n  }\n  isRoot() {\n    return this.config.root;\n  }\n  isLeaf() {\n    return this.subs.length === 0;\n  }\n  children(callback) {\n    this.subs.forEach((child) => callback(child, this));\n  }\n  find(predicate) {\n    let found = predicate(this);\n    if (found) {\n      return this;\n    }\n    for (let i = 0; i < this.subs.length; i++) {\n      found = this.subs[i].find(predicate);\n      if (found) {\n        break;\n      }\n    }\n    return found;\n  }\n  /**\n   *\n   * @param {NodeUI} childUI\n   * @returns prev parentUI\n   */\n  addChild(childUI) {\n    const prevParent = childUI.parent;\n    if (prevParent && prevParent !== this) {\n      prevParent.removeChild(childUI);\n    }\n    childUI.parent = this;\n    this.subs.push(childUI);\n    const canvasUI = this.sharedConfig.getCanvas();\n    canvasUI.moveNode(childUI);\n    return prevParent;\n  }\n  removeChild(childUI) {\n    if (childUI.parent !== this) {\n      // not a child node\n      return null;\n    }\n    const pos = this.subs.findIndex((node) => node.uid === childUI.uid);\n    if (pos === -1) {\n      // not a child node\n      return null;\n    }\n    const deletedNodes = this.subs.splice(pos, 1);\n    deletedNodes.forEach((node) => (node.parent = null)); // clear ref to parent(this)\n    return deletedNodes[0];\n  }\n  firstChild() {\n    return this.subs[0];\n  }\n  lastChild() {\n    if (this.subs.length === 0) {\n      return null;\n    }\n    return this.subs[this.subs.length - 1];\n  }\n  setFolding(folding) {\n    if (this.folding === folding) {\n      return;\n    }\n    this.folding = folding;\n    this.repaint();\n    this.sharedConfig.emit(EVENT.NODE.FOLDED, {\n      node: this,\n      folded: this.folding,\n    });\n  }\n  isFolded() {\n    return this.folding;\n  }\n  repaint() {\n    const canvasUI = this.sharedConfig.getCanvas();\n    canvasUI.drawNode(this);\n    const { $el } = this;\n    const body = $el.querySelector(\".mwd-body\");\n\n    const pos = this.getPos();\n    dom.css($el, { top: pos.y, left: pos.x, zIndex: this.zIndex });\n\n    const methodName = this.isSelected() ? \"add\" : \"remove\";\n    const className = this.sharedConfig.activeClassName(\"node\");\n    dom.clazz[methodName](body, className);\n\n    const levelClassName = this.sharedConfig.nodeLevelClassName(this);\n    dom.clazz.add(body, levelClassName);\n  }\n}\n\nNodeUI.build = (elem, config) => {\n  elem.root = true;\n  return new NodeUI(elem, config);\n};\nexport default NodeUI;\n","/**\n * Default layout manager\n * It does nothing, keeping all nodes in their position.\n */\n\nconst doLayout = (nodeUI) => {};\nconst setPosition = () => {};\nexport default { doLayout, setPosition };\n","/**\n * reflective layout manager relative to parent\n *\n */\nconst reverseXPos = (node, context) => {\n  const { x, y } = node;\n  node.setPos(-x, y);\n  const manager = context.layoutManager.getLayoutManager(node.layout);\n  manager.doLayout(node, context);\n};\nconst doLayout = (nodeUI, context) => {\n  const { dir } = context;\n  if (!dir) {\n    return;\n  }\n  if (dir.updated(\"LR\") || dir.updated(\"RL\")) {\n    nodeUI.children((childUI) => {\n      reverseXPos(childUI, context);\n    });\n  }\n};\nconst setPosition = (nodeUI, context) => {\n  const { baseNode, rect } = context;\n  const x = baseNode.x;\n  const y = baseNode.y + rect.height + 10;\n  nodeUI.setPos(x, y);\n};\nexport default { doLayout, setPosition };\n","/**\n * reflective layout manager relative to parent\n *\n */\nconst reverseYPos = (node, context) => {\n  const { x, y } = node;\n  node.setPos(x, -y);\n  const manager = context.layoutManager.getLayoutManager(node.layout);\n  manager.doLayout(node, context);\n};\nconst doLayout = (nodeUI, context) => {\n  const { dir } = context;\n  if (!dir) {\n    return;\n  }\n  if (dir.updated(\"TB\") || dir.updated(\"BT\")) {\n    nodeUI.children((childUI) => {\n      reverseYPos(childUI, context);\n    });\n  }\n};\nconst setPosition = (nodeUI, context) => {\n  const { baseNode, rect } = context;\n  const x = baseNode.x + rect.width + 10;\n  const y = baseNode.y;\n  nodeUI.setPos(x, y);\n};\nexport default { doLayout, setPosition };\n","import xLayout from \"./axis-x-layout\";\nimport yLayout from \"./axis-y-layout\";\n\nconst doLayout = (nodeUI, context) => {\n  const { dir } = context;\n  if (!dir) {\n    return;\n  }\n  xLayout.doLayout(nodeUI, context);\n  yLayout.doLayout(nodeUI, context);\n};\nconst setPosition = (nodeUI, context) => {\n  xLayout.setPosition(nodeUI, context);\n};\nexport default {\n  doLayout,\n  setPosition,\n};\n","/**\n * list of layout managers to assign the positions\n */\nimport defaultLayout from \"./node/default-layout\";\nimport xAxisLayout from \"./node/axis-x-layout\";\nimport yAxisLayout from \"./node/axis-y-layout\";\nimport xyAxisLayout from \"./node/axis-xy-layout\";\n\nconst layoutMap = new Map();\nlayoutMap.set(\"DEFAULT\", defaultLayout);\nlayoutMap.set(\"X-AXIS\", xAxisLayout);\nlayoutMap.set(\"Y-AXIS\", yAxisLayout);\nlayoutMap.set(\"XY-AXIS\", xyAxisLayout);\n\nconst getLayoutManager = (layout) => {\n  let fn = layout ? layoutMap.get(layout.type) : defaultLayout;\n  return fn;\n};\nconst setPosition = (nodeUI, context) => {\n  const { layout } = nodeUI;\n  const manager = getLayoutManager(layout);\n  manager.setPosition(nodeUI, context);\n};\nconst layout = (nodeUI, context) => {\n  const { layout } = nodeUI;\n  const manager = getLayoutManager(layout);\n  manager.doLayout(nodeUI, context);\n};\nexport default {\n  getLayoutManager,\n  setPosition,\n  layout,\n};\n","/**\n * direction relative to parent node\n */\n\nconst resolve = (format) => {\n  if (\"LR\" === format) {\n    return { dir: \"horizontal\", pos: [-1, 1] };\n  } else if (\"RL\" === format) {\n    return { dir: \"horizontal\", pos: [1, -1] };\n  } else if (\"TB\" === format) {\n    return { dir: \"vertical\", pos: [-1, 1] };\n  } else if (\"BT\" === format) {\n    return { dir: \"vertical\", pos: [1, -1] };\n  }\n};\nclass Direction {\n  constructor(nodeUI) {\n    this.node = nodeUI;\n    this.prev = null;\n    this.capture();\n  }\n  get horizontal() {\n    const { x } = this.node;\n    return x <= 0 ? -1 : 1;\n  }\n  get vertical() {\n    const { y } = this.node;\n    return y <= 0 ? -1 : 1;\n  }\n  updated(format) {\n    const { dir, pos } = resolve(format);\n    const cur = this[dir];\n    return this.prev[dir] === pos[0] && cur === pos[1];\n  }\n  capture() {\n    const { x, y } = this.node;\n    this.prev = {\n      horizontal: x <= 0 ? -1 : 1,\n      vertical: y <= 0 ? -1 : 1,\n    };\n  }\n}\n\nexport default Direction;\n","/**\n *\n */\nimport { dom } from \"../../service\";\nimport { EVENT } from \"../../service/event-bus\";\nconst clearSelection = (nodeMap) => {\n  for (let [_, nodeUI] of nodeMap) {\n    nodeUI.setSelected(false);\n  }\n  nodeMap.clear();\n};\nconst skipStateForInsert = (nodes) => {\n  if (nodes.length !== 1) {\n    return true;\n  }\n  if (nodes[0].isEditingState()) {\n    return true;\n  }\n  return false;\n};\nconst skipStateForDelete = (nodes) => {\n  if (nodes.length === 0) {\n    return true;\n  }\n  // root node cannot be deleted\n  const rootNode = nodes.find((node) => node.root);\n  return !!rootNode;\n};\nconst appendNode = (selectionModel, parent, sibling) => {\n  const mwd = selectionModel.config.mindWired();\n  mwd.addNode(parent, {\n    model: { text: \"TITLE\" },\n    siblingNode: sibling,\n  });\n};\nconst deleteNodes = (selectionModel, nodesToDel) => {\n  const mwd = selectionModel.config.mindWired();\n  mwd.deleteNodes(nodesToDel);\n};\nclass NodeSelectionModel {\n  /**\n   *\n   * @param {Configuration} config (see config.js)\n   */\n  constructor(config) {\n    this.config = config;\n    this.nodeMap = new Map(); // [uid:strng, NodeUI]\n\n    const canvasUI = this.config.getCanvas();\n    this.config.listen(EVENT.SELECTION.NODE, ({ node, append }) => {\n      const selected = this.nodeMap.has(node.uid);\n      if (append) {\n        this.nodeMap.set(node.uid, node);\n        node.setSelected(true);\n      } else if (!selected) {\n        clearSelection(this.nodeMap);\n        this.nodeMap.set(node.uid, node);\n        node.setSelected(true); // toggling\n      } else {\n      }\n    });\n    this.config.listen(EVENT.VIEWPORT.CLICKED, () => {\n      clearSelection(this.nodeMap);\n      canvasUI.hideSelection();\n    });\n\n    dom.event.keyup(canvasUI.$viewport, (e) => {\n      if (this.isEmpty()) {\n        return;\n      }\n      const { code } = e;\n      const [nodeUI] = [...this.nodeMap.values()];\n      const editing = nodeUI.isEditingState();\n      if (\"Space\" === code && !editing) {\n        e.stopPropagation();\n        this.config.emit(EVENT.NODE.EDITING, { editing: true, nodeUI });\n      } else if (\"Escape\" === code) {\n        this.config.emit(EVENT.NODE.EDITING, { editing: false, nodeUI });\n      }\n    });\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForInsert(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        appendNode(this, nodes[0].parent, nodes[0]);\n      },\n      \"enter\"\n    );\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForInsert(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        appendNode(this, nodes[0], nodes[0].lastChild());\n      },\n      \"shift@enter\"\n    );\n\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForDelete(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        deleteNodes(this, nodes);\n        clearSelection(this.nodeMap);\n      },\n      \"delete\"\n    );\n  }\n  isEmpty() {\n    return this.nodeMap.size === 0;\n  }\n  getNodes() {\n    return [...this.nodeMap.values()];\n  }\n}\nexport default NodeSelectionModel;\n","import NodeSelectionModel from \"./node-selection-model\";\nconst createSelectionModel = (type, configuration) => {\n  return new NodeSelectionModel(configuration);\n};\nexport default {\n  createSelectionModel,\n};\n","import { EVENT } from \"../../service/event-bus\";\n\nexport default class NodeEditing {\n  constructor(config) {\n    this.config = config;\n    this.node = null;\n    this.config.listen(EVENT.VIEWPORT.CLICKED, () => {\n      this.close();\n    });\n    this.config.listen(EVENT.SELECTION.NODE, ({ node }) => {\n      if (this.node !== node) {\n        this.close(this.node);\n      }\n    });\n  }\n  isEditing() {\n    return !!this.node;\n  }\n  edit(nodeUI) {\n    if (this.node) {\n      this.close();\n      this.node = null;\n    }\n    const renderingContext = this.config.getNodeRenderer();\n    const nodeRenderer = renderingContext.getRenderer(nodeUI.model.type);\n    nodeRenderer.editor(nodeUI);\n    this.node = nodeUI;\n    this.node.setEditingState(true);\n  }\n  close() {\n    if (this.node) {\n      this.node.setEditingState(false);\n      const canvasUI = this.config.getCanvas();\n      canvasUI.hideNodeEditor(this.node);\n    }\n    this.node = null;\n  }\n}\n","const template = {\n  text: '<span class=\"mwd-node-text\"></span>',\n  editor: `<div class=\"mwd-node-editor plain-text-editbox\">\n    <textarea value=\"\"></textarea>\n    <button data-cmd=\"save\">SAVE</button>\n  </div>`,\n};\nclass PlainTextRenderer {\n  constructor(renderingContext) {\n    this.ctx = renderingContext;\n  }\n  install(nodeUI) {\n    const bodyEl = this.ctx.getNodeBody(nodeUI);\n    const $titleEl = this.ctx.parse(template.text);\n    bodyEl.append($titleEl);\n  }\n  render(nodeUI) {\n    const $titleEl = this.ctx.select(nodeUI, \".mwd-node-text\");\n    const { model } = nodeUI;\n    const lines = model.text\n      .split(\"\\n\")\n      .map((text) => `<p>${text}</p>`)\n      .join(\"\");\n    $titleEl.innerHTML = lines;\n  }\n  editor(nodeUI) {\n    const $editorEl = this.ctx.parse(template.editor, true);\n\n    const textArea = this.ctx.query($editorEl, \"textarea\");\n\n    const { model } = nodeUI;\n    textArea.value = model.text;\n    this.ctx.css(textArea, { width: 120, height: 40 });\n    this.ctx.event.click($editorEl, (e) => {\n      if (e.target.dataset.cmd === \"save\") {\n        nodeUI.updateModel((model) => {\n          model.text = textArea.value.trim();\n          return true;\n        });\n        this.ctx.endEditing();\n      }\n    });\n    this.ctx.installEditor(nodeUI, $editorEl).then(() => {\n      textArea.focus();\n    });\n    return $editorEl;\n  }\n  get name() {\n    return \"text\";\n  }\n}\nexport default PlainTextRenderer;\n","const template = {\n  viewer: `<div class=\"icon-badge-node\">\n    <img>\n    <span class=\"mwd-node-text\"></span>\n  </div>`,\n  editor: `<div class=\"\"></div>`,\n};\n/**\n *  ```\n *  icon-badge renderer\n *  +------+--------------+\n *  | IMG  |    T E X T   |\n *  +------+--------------+\n *\n *  [configuration]\n *  node: {\n *    model: {\n *      type: 'icon-badge',\n *      'icon-badge': {\n *        icon: 'https://image.url.value',\n *        text: 'text value'\n *      }\n *    },\n *    view: { ... }\n *  }\n * ```\n *\n */\nclass IconBadgeRenderer {\n  constructor(renderingContext) {\n    this.ctx = renderingContext;\n  }\n  get name() {\n    return \"icon-badge\";\n  }\n  install(nodeUI) {\n    const bodyEl = this.ctx.getNodeBody(nodeUI);\n    const $iconBadgeEl = this.ctx.parse(template.viewer);\n    bodyEl.append($iconBadgeEl);\n  }\n  render(nodeUI) {\n    const { model } = nodeUI;\n    const { icon, text } = model[\"icon-badge\"];\n    const $img = this.ctx.select(nodeUI, \"img\");\n    $img.src = icon;\n    const $span = this.ctx.select(nodeUI, \".mwd-node-text\");\n    $span.innerText = text;\n  }\n  startEditing(nodeUI) {\n    console.log(nodeUI);\n  }\n}\nexport default IconBadgeRenderer;\n","const template = {\n  viewer: `<div class=\"mwd-thumbnail-node\"><img draggable=\"false\"></div>`,\n  editor: `\n  <div class=\"mwd-node-editor thumnail-editor\">\n    <div class=\"inline-mwd-form\">\n      <input type=\"text\" data-form-size>\n    </div>\n    <div class=\"preview\">\n      <img class=\"img\"></img>\n    </div>\n    <div class=\"path-form\">\n        <textarea></textarea>\n      </div>\n  </div>`,\n};\n/**\n * ```\n * [configuration]\n * node: {\n *   model: {\n *     type: 'thumnail',\n *     thunmail: {\n *       path: 'https://image.url.value',\n *       size: 40,\n *     }\n *   }\n * }\n * ```\n */\nconst renderThumnail = (el, ctx, model) => {\n  const { path, size } = model;\n  ctx.css(el, {\n    width: size,\n    height: size,\n    backgroundImage: `url(${path})`,\n  });\n};\nclass ThumbnailRenderer {\n  constructor(renderingContext) {\n    this.ctx = renderingContext;\n  }\n  get name() {\n    return \"thumbnail\";\n  }\n  install(nodeUI) {\n    const bodyEl = this.ctx.getNodeBody(nodeUI);\n    const $thumnailEl = this.ctx.parse(template.viewer);\n    bodyEl.append($thumnailEl);\n  }\n  render(nodeUI) {\n    const { model } = nodeUI;\n    // const { path, size } = model[\"thumbnail\"];\n    const $div = this.ctx.select(nodeUI, \".mwd-thumbnail-node img\");\n    // renderThumnail($div, this.ctx, model.thumbnail);\n    this.ctx.css($div, { width: model.thumbnail.size, height: \"auto\" });\n    $div.src = model.thumbnail.path;\n  }\n  editor(nodeUI) {\n    const { model } = nodeUI;\n    if (model.type !== \"thumbnail\") {\n      throw new Error(\"EDITOR_ERROR:not a thumbnail node\");\n    }\n    const { path, size } = model.thumbnail;\n\n    const $editorEl = this.ctx.parse(template.editor, true);\n    const $inputEl = this.ctx.query($editorEl, \"input\");\n    $inputEl.value = size;\n    this.ctx.event.keyup(\n      $inputEl,\n      (e) => {\n        const value = e.target.value.trim();\n        this.ctx.valid.number(value).then((num) => {\n          nodeUI.updateModel((model) => {\n            model.thumbnail.size = num;\n            this.ctx.css($imgEl, { width: num });\n            return true;\n          });\n        });\n      },\n      \"enter\"\n    );\n    const $textArea = this.ctx.query($editorEl, \"textarea\");\n    this.ctx.event.keydown(\n      $textArea,\n      (e) => {\n        const url = e.target.value.trim();\n        this.ctx.valid.path(url).then((url) => {\n          nodeUI.updateModel((model) => {\n            model.thumbnail.path = url;\n            $imgEl.src = url;\n            return true;\n          });\n        });\n      },\n      \"enter\"\n    );\n    const $imgEl = this.ctx.query($editorEl, \".preview .img\");\n    this.ctx.css($imgEl, {\n      width: size,\n      height: \"auto\",\n    });\n    $imgEl.src = path;\n    let visible = false;\n    this.ctx.event.click($imgEl, (e) => {\n      visible = !visible;\n      const display = visible ? \"flex\" : \"none\";\n      const pathForm = this.ctx.query($editorEl, \".path-form\");\n      this.ctx.css(pathForm, { display });\n      if (visible) {\n        $textArea.value = model.thumbnail.path;\n      }\n    });\n    // renderThumnail($imgEl, this.ctx, model.thumbnail);\n    this.ctx.installEditor(nodeUI, $editorEl).then(() => {\n      console.log(\"done\");\n    });\n  }\n}\nexport default ThumbnailRenderer;\n","import { dom, uuid } from \"../../service\";\nimport { EVENT } from \"../../service/event-bus\";\n\nconst renderings = new Map();\n\nclass NodeRenderingContext {\n  constructor(canvasUI) {\n    this.canvas = canvasUI;\n    this.uid = `node-rctx-${uuid()}`;\n    renderings.set(this.uid, new Map());\n  }\n  get event() {\n    return dom.event;\n  }\n  get valid() {\n    return dom.valid;\n  }\n  parse(htmlTemplate, fitToCenter) {\n    const $el = dom.parseTemplate(htmlTemplate);\n    if (fitToCenter) {\n      dom.css($el, {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      });\n    }\n    return $el;\n  }\n  register(renderer) {\n    renderings.get(this.uid).set(renderer.name, renderer);\n  }\n  getNodeBody(nodeUI) {\n    return this.canvas.getNodeBody(nodeUI);\n  }\n  getRenderer(type) {\n    const renderer = renderings.get(this.uid).get(type || \"text\");\n    if (!renderer) {\n      throw new Error(`[No Renderer] no such renderer, (type:${type})`);\n    }\n    return renderer;\n  }\n  select(nodeUI, cssSelector) {\n    return nodeUI.$bodyEl.querySelector(cssSelector);\n  }\n  installEditor(nodeUI, $editorEl) {\n    return this.canvas.showNodeEditor(nodeUI, $editorEl);\n  }\n  css(el, styles) {\n    dom.css(el, styles);\n  }\n  query(el, cssSelector) {\n    return dom.findOne(el, cssSelector);\n  }\n  endEditing() {\n    this.canvas.config.emit(EVENT.VIEWPORT.CLICKED);\n  }\n}\nexport default NodeRenderingContext;\n","import PlainTextRenderer from \"./renderer/plain-text-renderer\";\nimport IconBadgeRenderer from \"./renderer/icon-badge-renderer\";\nimport ThumbnailRenderer from \"./renderer/thumbnail-renderer\";\nimport NodeRenderingContext from \"./node-rendering-context\";\nconst createRenderingContext = (canvasUI) => new NodeRenderingContext(canvasUI);\n\nconst getRenderer = (type) => {\n  return renderings.get(type);\n};\n\nconst install = (canvasUI) => {\n  const ctx = createRenderingContext(canvasUI);\n  const plainTextRenderer = new PlainTextRenderer(ctx);\n  ctx.register(plainTextRenderer);\n  const iconBadgeRenderer = new IconBadgeRenderer(ctx);\n  ctx.register(iconBadgeRenderer);\n  const thumnailRenderer = new ThumbnailRenderer(ctx);\n  ctx.register(thumnailRenderer);\n  return ctx;\n};\nexport default {\n  install,\n  getRenderer,\n};\n","import dom from \"./dom\";\nimport clone from \"./clone\";\nconst uuid = (len) => {\n  len = len || 16;\n  let id = \"\";\n  while (id.length < len) {\n    id += Math.random().toString(36).substring(2);\n  }\n  return id.substring(0, len);\n};\nexport { dom, clone, uuid };\nexport default {\n  dom,\n  clone,\n  uuid,\n};\n","const captureSnapLines = (nodes, node, hSnaps, vSnaps) => {\n  if (nodes.includes(node)) {\n    return;\n  }\n  const dim = node.dimension();\n  // top, center, bottom\n  hSnaps.add(dim.y);\n  hSnaps.add(dim.cy);\n  hSnaps.add(dim.b);\n  // left, center, right\n  vSnaps.add(dim.x);\n  vSnaps.add(dim.cx);\n  vSnaps.add(dim.r);\n  if (node.isFolded()) {\n    return;\n  }\n  node.subs.forEach((child) => {\n    captureSnapLines(nodes, child, hSnaps, vSnaps);\n  });\n};\nconst abs = (a) => Math.abs(a);\nconst adj = (points, dim, dir) => {\n  return points.reduce((adj, p) => {\n    const a = dim[dir] - adj;\n    const b = dim[dir] - p;\n    return abs(a) <= abs(b) ? adj : p;\n  }, points[0]);\n};\nconst minGapIndex = (gaps) =>\n  gaps.reduce(\n    (minIdx, gap, idx) => (abs(gap) < abs(gaps[minIdx]) ? idx : minIdx),\n    0\n  );\nconst lineStyling = (ctx, ui, dir) => {\n  ctx.strokeStyle = ui.snap.color[dir];\n  ctx.lineWidth = ui.snap.width || 0.4;\n  if (ui.snap.dash) {\n    ctx.setLineDash(ui.snap.dash);\n  }\n};\nexport default class AligmentUI {\n  /**\n   *\n   * @param {Configuration} config (see config.js)\n   */\n  constructor(config) {\n    this.config = config;\n  }\n  turnOn(rootNode, nodes) {\n    if (!nodes || nodes.length === 0 || !this.config.snapEnabled) {\n      return;\n    }\n    const vLines = new Set(); // [x in (x,0), (x,H)]\n    const hLines = new Set(); // [y in (0,y), (W,y)]\n    this.activeNodes = [...nodes];\n    captureSnapLines(nodes, rootNode, hLines, vLines, this.config.scale);\n    this.snaps = { hLines, vLines };\n  }\n  turnOff() {\n    this.callback = null;\n    this.snaps = null;\n    this.node = null;\n  }\n  doAlign() {\n    if (!this.snaps || this.snaps.length === 0) {\n      return;\n    }\n    const { ui } = this.config;\n    const node = this.activeNodes[0];\n    const limit = ui.snap.limit;\n    const snap = ui.snap.limit;\n    const canvas = this.config.getCanvas();\n    canvas.clear();\n\n    const dim = node.dimension();\n    const vLines = [...this.snaps.vLines.values()].filter(\n      (x) =>\n        Math.abs(dim.x - x) <= limit ||\n        Math.abs(dim.r - x) <= limit ||\n        abs(dim.cx - x) <= limit\n    );\n    const hLines = [...this.snaps.hLines.values()].filter(\n      (y) =>\n        Math.abs(dim.y - y) <= limit ||\n        Math.abs(dim.b - y) <= limit ||\n        Math.abs(dim.cy - y) <= limit\n    );\n\n    const delta = { x: 0, y: 0 };\n    if (vLines.length > 0) {\n      const adjL = adj(vLines, dim, \"x\");\n      const adjC = adj(vLines, dim, \"cx\");\n      const adjR = adj(vLines, dim, \"r\");\n      const gaps = [adjC - dim.cx, adjL - dim.x, adjR - dim.r];\n      const idx = minGapIndex(gaps);\n      if (abs(gaps[idx]) <= snap) {\n        delta.x = gaps[idx];\n      }\n      if (this.config.snapEnabled) {\n        canvas.drawVLines([adjL, adjC, adjR], (ctx) =>\n          lineStyling(ctx, ui, \"vertical\")\n        );\n      }\n    }\n\n    if (hLines.length > 0) {\n      const adjT = adj(hLines, dim, \"y\");\n      const adjC = adj(hLines, dim, \"cy\");\n      const adjB = adj(hLines, dim, \"b\");\n\n      const gaps = [adjC - dim.cy, adjT - dim.y, adjB - dim.b];\n      const idx = minGapIndex(gaps);\n      if (abs(gaps[idx]) <= snap) {\n        delta.y = gaps[idx];\n      }\n      if (this.config.snapEnabled) {\n        canvas.drawHLines([adjT, adjC, adjB], (ctx) =>\n          lineStyling(ctx, ui, \"horizontal\")\n        );\n      }\n    }\n\n    this.activeNodes.forEach((each) => {\n      const off = each.offset();\n      off.x += delta.x;\n      off.y += delta.y;\n      each.setOffset(off);\n    });\n    // node.setOffset(pos);\n  }\n}\n","import { clone } from \"../../service\";\n\nconst NO_OP = (_) => _;\nconst buildTree = (dataSource, dataSet, parentSet) => {\n  const nodeConfigs = dataSet.toNodeConfigs(parentSet, dataSource);\n  const childSets = dataSource.childSetOf(dataSet.name);\n  childSets.forEach((childSet) => {\n    buildTree(dataSource, childSet, dataSet);\n  });\n  return nodeConfigs;\n};\n/**\n * datasource for tree structure\n */\nclass DataSet {\n  constructor(name, userDataList, parentType, callbacks) {\n    this.name = name;\n    this.userDataList = userDataList;\n    this.parentType = parentType;\n    this.callbacks = callbacks;\n  }\n  toNodeConfigs(parentSet, dataSource) {\n    let relation = parentSet ? this.callbacks.relation : null;\n    return this.userDataList.map((userData, index) => {\n      const config = { userData, subs: [] };\n      const { model } = this.callbacks;\n      config.model =\n        typeof model === \"function\" ? model(userData) : clone.deepCopy(model);\n\n      if (relation) {\n        const parent = relation(userData, parentSet.userDataList);\n        const parentConfig = dataSource.$ref.get(parent);\n        config.idx = parentConfig.subs.length;\n        parentConfig.subs.push(config);\n      }\n      const { view } = this.callbacks;\n      if (typeof view === \"function\") {\n        config.view = view(userData, config.idx);\n      } else if (typeof view === \"object\") {\n        config.view = clone.deepCopy(view);\n      } else {\n        config.view = { x: 0, y: 0 };\n      }\n      // config.view =\n      //   typeof view === \"function\"\n      //     ? view(userData, config.idx)\n      //     : { x: 0, y: 0 };\n      // how to determine config.view = {x, y}\n      // config.view = {x:0, y:0}\n      dataSource.$ref.set(userData, config);\n      return config;\n    });\n  }\n}\nexport default class TreeDataSource {\n  constructor() {\n    this.dataSets = new Map();\n    this.rootType = null;\n    this.$ref = new Map(); // [{userData, nodeConfig}]\n  }\n  root(dataType, userData, option) {\n    const dataList = [];\n    if (!option) {\n      option = userData;\n      dataList.push({});\n    } else {\n      dataList.push(userData);\n    }\n    const virtualRoot = !option.virtual;\n    this.rootType = dataType;\n    option.relation = NO_OP;\n    return this.dataSet(dataType, dataList, option);\n  }\n  childSetOf(parentType) {\n    return [...this.dataSets.values()].filter(\n      (dset) => dset.parentType === parentType\n    );\n  }\n  dataSet(dataType, userDataList, option) {\n    const callbacks = {};\n    callbacks.relation = option.relation || NO_OP;\n    callbacks.model = option.model || NO_OP;\n    callbacks.view = option.view;\n    const type = dataType.trim();\n    if (this.dataSets.has(type)) {\n      throw new Error(`[MIND WIRED] existing data type: [${dataType}]`);\n    }\n    const dataSet = new DataSet(type, userDataList, option.parent, callbacks);\n    this.dataSets.set(type, dataSet);\n    return this;\n  }\n  build() {\n    const rootSet = this.dataSets.get(this.rootType);\n    const rootDataSet = buildTree(this, rootSet);\n    return rootDataSet[0];\n  }\n}\n","import { EVENT } from \"../service/event-bus\";\nimport CanvasUI from \"./canvas-ui\";\nimport EdgeUI from \"./edge-ui\";\nimport NodeUI from \"./node-ui\";\nimport layoutManager from \"./layout\";\nimport Direction from \"./direction\";\nimport selection from \"./selection\";\nimport { NodeEditing } from \"./editing\";\nimport nodeRenderer from \"./node\";\nimport AlignmentUI from \"./alignment/alignment-ui\";\nimport { dom } from \"../service\";\nimport TreeDataSource from \"./datasource/tree-ds\";\n\nconst exportTree = (config, nodeUI) => {\n  const v = nodeUI.config.view;\n  const view = {\n    x: v.x,\n    y: v.y,\n  };\n  if (nodeUI.isRoot()) {\n    view.x = config.ui.offset.x;\n    view.y = config.ui.offset.y;\n  }\n  if (v.layout) {\n    view.layout = v.layout;\n  }\n  if (v.edge) {\n    view.edge = v.edge;\n  }\n  const subs = [];\n  nodeUI.subs.forEach((childUI) => {\n    subs.push(exportTree(config, childUI));\n  });\n  return {\n    model: nodeUI.model,\n    view,\n    subs,\n  };\n};\nconst repaintTree = (mwd, node, propagate = true) => {\n  node.repaint();\n  if (propagate) {\n    node.subs.forEach((childNode) => {\n      repaintTree(mwd, childNode);\n    });\n  }\n};\nconst updateLevelClass = (nodeUI, method, config) => {\n  const className = config.nodeLevelClassName(nodeUI);\n  dom.clazz[method](nodeUI.$bodyEl, className);\n  nodeUI.subs.forEach((childUI) => updateLevelClass(childUI, method, config));\n};\n/**\n * captures current pos(x,y) and direction for each nodes\n * @param {[NodeUI]} nodes\n */\nconst capatureDragData = (nodes) =>\n  nodes\n    .filter((node) => !node.isRoot())\n    .map((node) => {\n      return {\n        node,\n        pos: { x: node.x, y: node.y },\n        dir: new Direction(node),\n      };\n    });\n\nclass MindWired {\n  /**\n   *\n   * @param {Configuration} configuration (config.js)\n   */\n  constructor(config) {\n    this.config = config;\n    config.mindWired = () => this;\n\n    this.canvas = new CanvasUI(config);\n    config.getCanvas = () => this.canvas;\n\n    this.nodeRenderingContext = nodeRenderer.install(this.canvas);\n    config.getNodeRenderer = () => this.nodeRenderingContext;\n\n    this.nodeSelectionModel = selection.createSelectionModel(\"node\", config);\n    this.nodeEditor = new NodeEditing(config);\n    this.alignmentUI = new AlignmentUI(config);\n\n    this.config.listen(EVENT.DRAG.VIEWPORT, (baseOffset) => {\n      this.config.setOffset(baseOffset);\n      // this.repaint();\n      this.canvas.repaintNodeHolder();\n      this.edgeUI.repaint();\n    });\n    this.draggingNodes = null;\n    this.config.listen(EVENT.DRAG.NODE, (e) => {\n      if (e.state === \"READY\") {\n        const nodes = this.nodeSelectionModel.getNodes();\n        /*\n         * shift@click on nodes redirects dragging to their children\n         */\n        const dragTargets =\n          e.target === \"all\" ? nodes : nodes.flatMap((node) => node.subs);\n        this.draggingNodes = capatureDragData(dragTargets);\n        this.alignmentUI.turnOn(this.rootUI, dragTargets);\n        this.canvas.drawSelection(nodes);\n      } else if (e.state === \"DRAG\") {\n        const acceleration = e.target === \"all\" ? 1 : 2.5;\n        this.draggingNodes.forEach((dragging) => {\n          const { node, dir, pos } = dragging;\n          dir.capture();\n          node.setPos(\n            acceleration * e.x + pos.x,\n            acceleration * e.y + pos.y,\n            !this.config.snapEnabled\n          );\n        });\n        this.alignmentUI.doAlign();\n        this.draggingNodes.forEach((dragging) => {\n          const { node, dir } = dragging;\n          layoutManager.layout(node, { dir, layoutManager });\n        });\n        this.canvas.drawSelection(this.nodeSelectionModel.getNodes());\n        this.edgeUI.repaint(!this.config.snapEnabled, false);\n      } else if (e.state === \"DONE\") {\n        this.alignmentUI.turnOff();\n        this.edgeUI.repaint(true);\n      }\n    });\n    this.config.listen(EVENT.NODE.EDITING, ({ editing, nodeUI }) => {\n      // console.log(\"[edit]\", nodeUI);\n      if (editing) {\n        this.nodeEditor.edit(nodeUI);\n      } else {\n        this.nodeEditor.close();\n      }\n    });\n    this.config.listen(EVENT.NODE.FOLDED, ({ node }) => {\n      this.canvas.updateFoldingNodes(node);\n    });\n  }\n  isEditing() {\n    return this.nodeEditor.isEditing();\n  }\n  nodes(elems) {\n    if (elems instanceof TreeDataSource) {\n      const root = elems.build();\n      this.rootUI = NodeUI.build(root, this.config);\n    } else {\n      this.rootUI = NodeUI.build(elems, this.config);\n    }\n    this.edgeUI = new EdgeUI(this.config, this.rootUI, this.canvas);\n    this.config.ui.offset.x = this.rootUI.config.view.x;\n    this.config.ui.offset.y = this.rootUI.config.view.y;\n    this.rootUI.config.view.x = 0;\n    this.rootUI.config.view.y = 0;\n\n    this.repaint();\n    return this;\n  }\n  findNode(predicate) {\n    return this.rootUI.find(predicate);\n  }\n  addNode(parentNode, nodeData, option) {\n    const data = {\n      model: nodeData.model,\n      view: nodeData.view,\n    };\n    if (!data.view) {\n      data.view = {\n        x: 100,\n        y: 0,\n      };\n    }\n    const nodeUI = new NodeUI(data, this.config, parentNode);\n    this.canvas.regsiterNode(nodeUI);\n    parentNode.addChild(nodeUI);\n    if (nodeData.siblingNode) {\n      const rect = dom.domRect(nodeData.siblingNode.$bodyEl);\n      layoutManager.setPosition(nodeUI, {\n        baseNode: nodeData.siblingNode,\n        rect,\n      });\n    }\n    nodeUI.repaint();\n    // this.canvas.repaint(nodeUI);\n\n    this.config.emit(EVENT.NODE.CREATED, [nodeUI]);\n    if (option && (option.editing || option.select)) {\n      this.config.emit(EVENT.SELECTION.NODE, { node: nodeUI });\n    }\n    if (option && option.editing) {\n      this.nodeEditor.edit(nodeUI);\n    }\n  }\n  moveNodes(parentNode, nodes) {\n    const childNodes = nodes.filter((node) => node.parent !== parentNode);\n    childNodes.forEach((child) => {\n      updateLevelClass(child, \"remove\", this.config);\n      const prevParent = parentNode.addChild(child);\n      updateLevelClass(child, \"add\", this.config);\n\n      this.config.emit(EVENT.NODE.MOVED, { node: child, prevParent });\n    });\n    parentNode.setFolding(false);\n    repaintTree(this, parentNode);\n    this.canvas.drawSelection(nodes);\n  }\n  deleteNodes(nodes) {\n    nodes.forEach((node) => {\n      const { parent, childNodes } = node;\n      if (childNodes.length > 0) {\n        // 1. move grand-children to parent\n        childNodes.forEach((child) => {\n          // keep position\n          child.setPos(child.x + node.x, child.y + node.y);\n        });\n        this.moveNodes(parent, childNodes);\n      }\n      // 2. delete node(which has no children)\n      const deletedChild = node.parent.removeChild(node);\n      if (deletedChild) {\n        this.canvas.unregistcerNode(deletedChild);\n        this.config.emit(EVENT.NODE.DELETED, deletedChild);\n      }\n    });\n  }\n  getSelectedNodes() {\n    return this.nodeSelectionModel.getNodes();\n  }\n  setLayout(layoutSpec, nodeUI) {\n    const targetNode = nodeUI || this.rootUI;\n    targetNode.config.view.layout = layoutSpec;\n    this.repaint();\n  }\n  setEdge(edgeSpec, nodeUI) {\n    const targetNode = nodeUI || this.rootUI;\n    targetNode.config.view.edge = edgeSpec;\n    this.repaint(nodeUI);\n  }\n  setScale(scale) {\n    this.config.ui.scale = scale;\n    console.log(this.config.ui.scale);\n    this.repaint();\n  }\n  repaint(nodeUI) {\n    nodeUI = nodeUI || this.rootUI;\n    repaintTree(this, nodeUI);\n    this.canvas.repaintNodeHolder();\n    layoutManager.layout(nodeUI, { dir: null });\n    this.edgeUI.repaint();\n\n    this.canvas.hideSelection();\n    this.canvas.drawSelection(this.getSelectedNodes());\n  }\n  listen(event, callback) {\n    this.config.ebus.listen(event, callback);\n    return this;\n  }\n  export(type) {\n    const node = exportTree(this.config, this.rootUI);\n    return Promise.resolve(JSON.stringify(node));\n  }\n}\n\nexport { MindWired };\n","import { dom } from \"../../service\";\n\nconst changeParentDndHandler = (canvasUI) => ({\n  beforeDrag: (e) => {\n    const { target } = e.originalEvent;\n    const iconEl = target;\n    const mrd = canvasUI.config.mindWired();\n    const { scale } = canvasUI.config;\n    canvasUI.dndContext.capture(\"iconEl\", iconEl);\n  },\n  dragging: (e) => {\n    const { dx, dy } = e;\n    const iconEl = canvasUI.dndContext.getData(\"iconEl\");\n    dom.css(iconEl, {\n      transform: `translate(calc(-50% + ${dx}px), ${dy}px)`,\n    });\n  },\n  afterDrag: () => {\n    const iconEl = canvasUI.dndContext.getData(\"iconEl\");\n    const rect = dom.domRect(iconEl);\n    const cx = rect.x + rect.width / 2;\n    const cy = rect.y + rect.height / 2;\n    dom.css(iconEl, {\n      transform: `translate(-50%, 0)`,\n    });\n    const newParentNode = canvasUI.findNodeAt(cx, cy);\n    if (newParentNode) {\n      const mrd = canvasUI.config.mindWired();\n      const nodes = mrd.getSelectedNodes();\n      if (\n        nodes.filter((child) => newParentNode.isDescendantOf(child)).length > 0\n      ) {\n        // dropping parent on child\n      } else {\n        const mwd = canvasUI.config.mindWired();\n        mwd.moveNodes(newParentNode, nodes);\n      }\n    }\n  },\n});\nexport default changeParentDndHandler;\n","import { dom } from \"../../service\";\nimport { EVENT } from \"../../service/event-bus\";\n/**\n * handles viewport dragging\n */\n\nconst nodeDndHandler = (canvasUI) => ({\n  beforeDrag: (e) => {\n    const { target } = e.originalEvent;\n    const nodeEl = dom.closest(target, \".mwd-node\");\n    const nodeId = nodeEl.dataset.uid;\n    canvasUI.dndContext.capture(\"nodeId\", nodeId);\n    const mrd = canvasUI.config.mindWired();\n    const node = mrd.findNode((node) => node.uid === nodeId);\n    canvasUI.config.emit(EVENT.SELECTION.NODE, {\n      node,\n      append: e.originalEvent.shiftKey,\n    });\n    canvasUI.config.emit(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"READY\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: 0,\n      y: 0,\n    });\n  },\n  dragging: (e) => {\n    const { dx, dy } = e;\n    const nodeId = canvasUI.dndContext.getData(\"nodeId\");\n    const { scale } = canvasUI.config;\n    // const scale = 1;\n    canvasUI.config.emit(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"DRAG\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: dx / scale,\n      y: dy / scale,\n    });\n  },\n  afterDrag: (e) => {\n    // console.log(\"[DND AFTER]\", e);\n    const { dx, dy } = e;\n    // canvasUI.shiftBy(dx, dy);\n    const nodeId = canvasUI.dndContext.getData(\"nodeId\");\n    const { scale } = canvasUI.config;\n    // const scale = 1;\n    canvasUI.config.emit(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"DONE\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: dx / scale,\n      y: dy / scale,\n    });\n  },\n});\n\nexport default nodeDndHandler;\n","import { dom, clone } from \"../service\";\nimport { EventBus } from \"../service/event-bus\";\n\nconst DEFAULT_UI_CONFIG = {\n  width: 600,\n  height: 600,\n  scale: 1.0,\n  clazz: {\n    node: \"active-node\",\n    edge: \"active-edge\",\n    level: (level) => `level-${level}`,\n  },\n  offset: { x: 0, y: 0 },\n  snap: {\n    limit: 4,\n    width: 0.4,\n    dash: [6, 2],\n    color: { horizontal: \"orange\", vertical: \"#2bc490\" },\n  },\n  selection: {\n    padding: 5,\n    \"background-color\": \"#b3ddff6b\",\n    \"border-radius\": \"4px\",\n  },\n};\nclass Configuration {\n  constructor({ el, ui }) {\n    this.el = el;\n    this.ui = ui;\n    this.ebus = new EventBus();\n  }\n  get width() {\n    return this.ui.width;\n  }\n  get height() {\n    return this.ui.height;\n  }\n  get scale() {\n    return this.ui.scale;\n  }\n  get snapEnabled() {\n    return this.ui.snap.enabled;\n  }\n  getOffset() {\n    const offset = this.ui.offset;\n    return { ...offset };\n  }\n  setOffset(offset) {\n    this.ui.offset = { ...offset };\n  }\n  relativeOffset(offset) {\n    const baseOffset = this.ui.offset;\n    return { x: baseOffset.x + offset.x, y: baseOffset.y + offset.y };\n  }\n  activeClassName(type) {\n    const className = this.ui.clazz[type];\n    if (!className) {\n      throw new Error(`[MINDWIRED][ERROR] no classname of type : \"${type}\"`);\n    }\n    return className;\n  }\n  nodeLevelClassName(node) {\n    const method = this.ui.clazz.level;\n    if (!dom.types.method(method)) {\n      throw new Error(\n        `clazz.level should be function, but ${typeof method}. (level, node) => {} `\n      );\n    }\n    const className = method\n      ? method(node.level(), node)\n      : `level-${node.level()}`;\n\n    return className;\n  }\n  listen(eventName, callback) {\n    this.ebus.on(eventName, callback);\n    return this;\n  }\n  off(eventName, callback) {\n    this.ebus.off(eventName, callback);\n  }\n  emit(eventName, args) {\n    this.ebus.emit(eventName, args);\n    return this;\n  }\n}\n\nconst normalizeSnap = (ui) => {\n  const { snap } = ui;\n  if (snap === false) {\n    ui.snap = clone.deepCopy(DEFAULT_UI_CONFIG.snap);\n    ui.snap.enabled = false;\n  } else {\n    if (dom.valid.string(snap.color)) {\n      snap.color = {\n        horizontal: snap.color.trim(),\n        vertical: snap.color.trim(),\n      };\n    }\n    snap.limit = snap.limit || DEFAULT_UI_CONFIG.snap.limit;\n    snap.width = snap.width || DEFAULT_UI_CONFIG.snap.width;\n    if (snap.dash !== false) {\n      snap.dash = snap.dash || DEFAULT_UI_CONFIG.snap.dash;\n    }\n    snap.enabled = true;\n  }\n};\nConfiguration.parse = (config) => {\n  const cssSelector = config.el;\n  const ui = clone.mergeLeaf(\n    config.ui || {},\n    clone.deepCopy(DEFAULT_UI_CONFIG)\n  );\n\n  normalizeSnap(ui);\n\n  const el =\n    typeof config.el === \"string\"\n      ? document.querySelector(config.el)\n      : config.el;\n  return new Configuration({ el, ui });\n};\nexport default Configuration;\n","import { dom } from \"./service\";\nimport { MindWired } from \"./components/mind-wired\";\nimport Configuration from \"./components/config\";\nimport \"./assets/mind-wired.scss\";\nimport \"./assets/extra/mind-wired-editor.scss\";\nimport TreeDataSource from \"./components/datasource/tree-ds\";\n\nconst injectCanvas = (el) => {\n  const canvas = dom.tag.canvas();\n  el.append(canvas);\n};\nconst autoInstallation = () => {\n  const el = document.querySelector(\"[mind-wired-holder]\");\n  if (el) {\n    let canvasEl = dom.findOne(el, \"canvas\");\n    if (!canvasEl) {\n      canvasEl = injectCanvas(el);\n    }\n  }\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", (event) => {\n  autoInstallation();\n});\n\nconst init = (config) => {\n  const { el } = config;\n  return new Promise((success, failure) => {\n    if (el) {\n      const configObj = Configuration.parse(config);\n      const mrd = new MindWired(configObj);\n      success(mrd);\n    } else {\n      failure({ cause: \"no_css_selector\" });\n    }\n  });\n};\n\nconst createDataSource = () => new TreeDataSource();\n\nexport { init, createDataSource };\n\nexport default { init, createDataSource };\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","Attr","constructor","attrExpression","expression","isClass","charAt","isId","substring","setAttribute","el","classList","add","closest","elem","selector","nodeType","parentElement","nodeTye","nodeName","parseAttr","split","map","val","trim","filter","createEl","tagName","attributes","tag","createElement","forEach","span","attr","content","innerHTML","iconButton","attrs","button","img","imgUrl","Promise","resolve","reject","onload","width","naturalWidth","height","naturalHeight","onerror","console","log","crossOrigin","div","canvas","registerEvent","target","eventName","callback","options","addEventListener","registerKeyEvent","option","code","toLowerCase","keys","i","ctrlKey","shiftKey","altKey","metaKey","alt","meta","shift","ctrl","parseKeyOption","keyFormat","metaKeys","metas","includes","data","int","attrList","d","v","dataset","parseInt","stopPropagation","createEventBus","EventBus","consume","focus","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","click","keydown","keyup","resize","converters","attrName","attrValue","always","getAttribute","clazz","className","remove","imageSize","xhr","XMLHttpRequest","open","onreadystatechange","readyState","DONE","getResponseHeader","send","fileToImage","file","reader","FileReader","result","readAsDataURL","event","css","styles","style","parseTemplate","template","params","t","text","replaceAll","virtualElem","firstElementChild","findOne","cssSelector","querySelector","is","searchParent","found","matches","domRect","getBoundingClientRect","types","method","valid","path","yes","no","number","n","parseFloat","Number","isNaN","string","isPrimitive","deepCopy","dst","Array","isArray","mergeLeaf","undefined","EVENT","DRAG","VIEWPORT","name","desc","NODE","SELECTION","EDIT","CREATED","DELETED","UPDATED","EDITING","FOLDED","RESIZED","CLICKED","EMPTY_SET","Set","callbacks","Map","on","callbackList","set","off","eventObj","idx","findIndex","cb","splice","listen","pathes","toUpperCase","parseEvent","emit","payload","beforeDrag","dragging","afterDrag","convToMouseEvent","te","touch","touches","type","changedTouches","clientX","clientY","layerX","layerY","offsetX","offsetY","pageX","pageY","screenX","screenY","clearTouchTimer","ctx","clearTimeout","touchTimer","handler","accept","originalEvent","sx","sy","dx","dy","ghost","once","preventDefault","cursor","clear","DndContext","passive","setTimeout","install","capture","getData","base","degree","scale","x","y","rad","Math","PI","cos","sin","pixelRatio","devicePixelRatio","viewport","node","foldingControl","NodeRect","offset","rect","dom","$bodyEl","top","right","bottom","left","cx","cy","icon","merge","other","min","max","draw","selection","config","ui","getHolderOffset","$viewport","padding","display","captureContext2D","canvasUI","$canvas","offsetWidth","offsetHeight","getContext","alpha","$ctx","registerElement","nodeUI","$el","uid","renderingContext","getNodeRenderer","model","getRenderer","placeHolder","elemOf","isRoot","append","parent","updateFolding","isFolded","subs","child","DEFAULT_EDGE_STYLE","color","findProp","nodeRef","getStyle","widthOf","$style","renderUnderline","drawPath","hor","ver","lineWidth","strokeStyle","rendering","LINE","srcNode","dstNode","s","NATURAL_CURVE","drawCurve","deg","ratio","props","MUSTACHE_LR","valign","valignOf","firstChild","srcWidth","dstWidth","abs","drawBeizeCurve","cpoints","renderCurve","MUSTACHE_TB","createEdges","edges","children","Edge","push","filterIndex","pos","index","updateHiddenState","edgeUI","edge","folded","filterEdges","hidden","matched","matchedDst","zIndex","NodeUI","sharedConfig","parentNode","selected","editing","nodeUi","parseSubs","folding","$dim","getCanvas","getNodeBody","view","layout","active","childNodes","dimension","w","h","b","level","assign","isSelected","setSelected","repaint","isDescendantOf","ref","updateModel","dir","setOffset","poff","setPos","getPos","update","isEditingState","setEditingState","isLeaf","find","predicate","addChild","childUI","prevParent","removeChild","moveNode","deletedNodes","lastChild","setFolding","drawNode","body","methodName","activeClassName","levelClassName","nodeLevelClassName","build","doLayout","setPosition","context","updated","layoutManager","getLayoutManager","reverseXPos","baseNode","reverseYPos","layoutMap","prev","horizontal","vertical","format","cur","clearSelection","nodeMap","_","skipStateForInsert","nodes","appendNode","selectionModel","sibling","mindWired","addNode","siblingNode","configuration","has","hideSelection","isEmpty","values","getNodes","stopImmediatePropagation","nodesToDel","skipStateForDelete","deleteNodes","size","NodeEditing","close","isEditing","edit","editor","hideNodeEditor","len","id","random","toString","uuid","parse","htmlTemplate","fitToCenter","position","transform","register","renderer","select","installEditor","$editorEl","showNodeEditor","query","endEditing","createRenderingContext","plainTextRenderer","bodyEl","$titleEl","render","lines","join","textArea","cmd","then","iconBadgeRenderer","$iconBadgeEl","innerText","startEditing","thumnailRenderer","$thumnailEl","$div","thumbnail","$inputEl","num","$imgEl","$textArea","url","visible","pathForm","captureSnapLines","hSnaps","vSnaps","dim","a","adj","points","reduce","minGapIndex","gaps","minIdx","gap","lineStyling","snap","dash","setLineDash","AligmentUI","turnOn","rootNode","snapEnabled","vLines","hLines","activeNodes","snaps","turnOff","doAlign","limit","delta","adjL","adjC","adjR","drawVLines","adjT","adjB","drawHLines","each","NO_OP","buildTree","dataSource","dataSet","parentSet","nodeConfigs","toNodeConfigs","childSetOf","childSet","DataSet","userDataList","parentType","relation","userData","clone","parentConfig","$ref","TreeDataSource","dataSets","rootType","dataType","dataList","virtual","dset","rootSet","exportTree","repaintTree","mwd","propagate","childNode","updateLevelClass","MindWired","installCanvasElem","dndContext","iconEl","newParentNode","findNodeAt","getSelectedNodes","moveNodes","getOffset","nodeId","findNode","state","timer","resizeObserver","ResizeObserver","observe","selectionArea","$holder","offsetLeft","offsetTop","getDimension","shiftBy","repaintNodeHolder","nodeBodies","querySelectorAll","nodeEl","slice","beginPath","moveTo","lineTo","stroke","lenSE","sqrt","cp1","geom","cp2","bezierCurveTo","xPoints","H","save","closePath","restore","yPoints","W","fillStyle","fillRect","baseOffset","drawSelection","rects","acc","editorElement","ok","editBox","regsiterNode","unregisterNode","unregisterElement","updateFoldingNodes","foldingEl","nodeRenderingContext","nodeSelectionModel","nodeEditor","alignmentUI","draggingNodes","dragTargets","flatMap","capatureDragData","rootUI","acceleration","elems","reverse","MOVED","clearCanvas","$cachedStyle","nodeData","deletedChild","unregistcerNode","setLayout","layoutSpec","setEdge","edgeSpec","setScale","ebus","export","JSON","stringify","DEFAULT_UI_CONFIG","Configuration","enabled","relativeOffset","args","normalizeSnap","canvasEl","injectCanvas","autoInstallation","init","success","failure","configObj","cause","createDataSource"],"sourceRoot":""}