{"version":3,"file":"mind-wired.0.1.12-alpha.0.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAmB,UAAID,IAEvBD,EAAgB,UAAIC,IARtB,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,OCJ3EF,EAAoBQ,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,GCAxBb,EAAoBG,EAAI,CAACW,EAAKC,IAAUX,OAAOY,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAoBmB,EAAKxB,IACH,oBAAXyB,QAA0BA,OAAOC,aAC1CjB,OAAOC,eAAeV,EAASyB,OAAOC,YAAa,CAAEC,MAAO,WAE7DlB,OAAOC,eAAeV,EAAS,aAAc,CAAE2B,OAAO,K,MCLvD,IAAIC,EACAvB,EAAoBQ,EAAEgB,gBAAeD,EAAYvB,EAAoBQ,EAAEiB,SAAW,IACtF,IAAIC,EAAW1B,EAAoBQ,EAAEkB,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,KAK7D,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjC,EAAoBkC,EAAIX,G,+ECdxB,MAAMY,EACJC,YAAYC,GACV3B,KAAK4B,WAAaD,EAGhBE,cACF,MAAqC,MAA9B7B,KAAK4B,WAAWE,OAAO,GAG5BC,WACF,MAAqC,MAA9B/B,KAAK4B,WAAWE,OAAO,GAG5BlB,YACF,OAAOZ,KAAK4B,WAAWI,UAAU,GAGnCC,aAAaC,GACX,GAAIlC,KAAK+B,KACPG,EAAGD,aAAa,KAAMjC,KAAKY,WACtB,KAAIZ,KAAK6B,QAGd,MAAM,IAAIP,MAAM,2BAA2BtB,KAAK4B,eAFhDM,EAAGC,UAAUC,IAAIpC,KAAKY,SAM5B,MAAMyB,EAAU,CAACC,EAAMC,KACrB,GAAsB,IAAlBD,EAAKE,SACP,OAAOF,EAAKD,QAAQE,GAEtB,GAAsB,IAAlBD,EAAKE,SACP,OAAOF,EAAKG,cAAcJ,QAAQE,GAEpC,MAAM,IAAIjB,MAAM,aAAagB,EAAKI,gBAAgBJ,EAAKK,cAGnDC,EAAahB,IACJA,GAAc,IAExBiB,MAAM,KACNC,KAAKC,GAAQA,EAAIC,SACjBC,QAAQF,GAAQA,EAAI1B,OAAS,IAE5B6B,EAAW,CAACC,EAASC,KACzB,MAAMC,EAAMrC,SAASsC,cAAcH,GAKnC,OAJAC,EAAWG,SAAS3C,IACL,IAAIa,EAAKb,GACjBqB,aAAaoB,MAEbA,GAEHA,EAAM,CACVG,KAAM,CAACC,EAAMC,KACX,MAAMF,EAAON,EAAS,OAAQN,EAAUa,IAIxC,OAHIC,IACFF,EAAKG,UAAYD,GAEZF,GAETI,WAAY,CAACC,EAAOH,KAClB,MAAMI,EAASZ,EAAS,SAAUN,EAAUiB,IAE5C,OADAC,EAAOH,UAAYD,EACZI,GAETC,IAAMC,IACJ,MAAMD,EAAM/C,SAASsC,cAAc,OACnC,OAAO,IAAIW,SAAQ,CAACC,EAASC,KAC3BJ,EAAIK,OAAS,KACXF,EAAQ,CAAEH,IAAAA,EAAKM,MAAON,EAAIO,aAAcC,OAAQR,EAAIS,iBAEtDT,EAAIU,QAAU,KACZC,QAAQC,IAAI,SACZR,EAAO,gBAETJ,EAAIa,YAAc,YAClBb,EAAI7C,IAAM8C,MAGda,IAAMpB,GAASP,EAAS,MAAON,EAAUa,IACzCqB,OAASrB,GAASP,EAAS,SAAUN,EAAUa,KAmC3CsB,EAAgB,CAACC,EAAQC,EAAWC,EAAUC,MACvCH,GAAU7E,QAClBiF,iBAAiBH,EAAWC,EAAUC,IAAW,IAGhDE,EAAmB,CAACL,EAAQC,EAAWC,EAAUI,KACrDN,EAAOI,iBAAiBH,GAAY/E,IAClC,MAAMqF,EAAOrF,EAAEqF,KAAKC,eACd,KAAEC,GAASH,EACjB,IAAK,IAAII,EAAI,EAAGA,EAAID,EAAKpE,OAAQqE,IAAK,CACpC,MAAMlG,EAAMiG,EAAKC,IACX,QAAEC,EAAO,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,GAAY5F,EAC/C,GACe,MAAbV,EAAI+F,MACH/F,EAAI+F,OAASA,GACZ/F,EAAIuG,MAAQF,GACZrG,EAAIwG,OAASF,GACbtG,EAAIyG,QAAUL,GACdpG,EAAI0G,OAASP,EACf,CACAT,EAAShF,GACT,YAYFiG,EAAkBC,IACtB,IAAKC,EAAUd,GAAQa,EAAUvD,MAAM,KAClC0C,IAEHA,EAAOc,EACPA,EAAW,IAEb,MAAMC,EAAQD,EAASxD,MAAM,KAC7B,MAAO,CACLqD,KAAMI,EAAMC,SAAS,QACrBN,MAAOK,EAAMC,SAAS,SACtBR,IAAKO,EAAMC,SAAS,OACpBP,KAAMM,EAAMC,SAAS,QACrBhB,KAAAA,IAGEiB,EAAO,CACXC,IAAK,CAACvE,EAAIwE,KACR,MAAMC,EAAI,GAKV,OAJAD,EAASnD,SAAS/D,IAChB,MAAMoH,EAAI1E,EAAG2E,QAAQrH,GACrBmH,EAAEnH,GAAOsH,SAASF,EAAG,OAEhBD,IAGLI,EAAmB7G,GAAMA,EAAE6G,kBAC3B,EAAQ,CACZC,eAAgB,IAAM,IAAIC,SAC1BC,QAAS,CAAClC,EAAQC,KAChBD,EAAOI,iBAAiBH,EAAW8B,IAErCI,MAAO,CAACnC,EAAQE,EAAUC,IACxBJ,EAAcC,EAAQ,QAASE,EAAUC,GAC3CiC,UAAW,CAAClC,EAAUF,EAAQG,KAC5BJ,EAAcC,EAAQ,YAAaE,EAAUC,IAE/CkC,UAAW,CAACnC,EAAUF,EAAQG,KAC5BJ,EAAcC,EAAQ,YAAaE,EAAUC,IAE/CmC,QAAS,CAACpC,EAAUF,EAAQG,KAC1BJ,EAAcC,EAAQ,UAAWE,EAAUC,IAE7CoC,WAAY,CAACrC,EAAUF,EAAQG,KAC7BJ,EAAcC,EAAQ,aAAcE,EAAUC,IAEhDqC,UAAW,CAACtC,EAAUF,EAAQG,KAC5BJ,EAAcC,EAAQ,YAAaE,EAAUC,IAE/CsC,SAAU,CAACvC,EAAUF,EAAQG,KAC3BJ,EAAcC,EAAQ,WAAYE,EAAUC,IAE9CuC,MAAO,CAAC1C,EAAQE,EAAUC,KACxBJ,EAAcC,EAAQ,QAASE,EAAUC,IAE3CwC,QAAS,CAAC3C,EAAQE,EAAUC,KAE1B,MAAMM,GADNN,EAAUA,GAAW,KAElBtC,MAAM,KACNI,QAAQzD,GAAQA,EAAIwD,OAAO3B,OAAS,IACpCyB,KAAKtD,GAAQ2G,EAAe3G,KAC/B6F,EAAiBL,EAAQ,UAAWE,EAAU,CAAEO,KAAAA,KAElDmC,MAAO,CAAC5C,EAAQE,EAAUC,KAExB,MAAMM,GADNN,EAAUA,GAAW,KAElBtC,MAAM,KACNI,QAAQzD,GAAQA,EAAIwD,OAAO3B,OAAS,IACpCyB,KAAKtD,GAAQ2G,EAAe3G,KAC/B6F,EAAiBL,EAAQ,QAASE,EAAU,CAC1CO,KAAAA,KAIJoC,OAAQ,CAAC7C,EAAQE,QAEb4C,EAAa,CACjBzD,MAAQtB,GAEU,iBADIA,EACO,GAAGA,MAAUA,GAG5C,qCAAqCF,MAAM,KAAKU,SAASlD,IACvDyH,EAAWzH,GAAQyH,EAAWzD,SAGhC,MA0DA,GACEhB,IAAAA,EACAI,KApNW,CAACvB,EAAI6F,EAAUC,EAAWC,KACrC,MAAMrB,EAAI1E,EAAGgG,aAAaH,IACtBE,GAAWrB,GACb1E,EAAGD,aAAa8F,EAAUC,IAkN5BG,MA/MY,CACZ/F,IAAK,CAACF,EAAIkG,IAAclG,EAAGC,UAAUC,IAAIgG,GACzCC,OAAQ,CAACnG,EAAIkG,IAAclG,EAAGC,UAAUkG,OAAOD,IA8M/C/F,QAAAA,EACAiG,UA7MiBtE,IACjB,MAAMuE,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQzE,GAAQ,GACzBuE,EAAIG,mBAAqB,KACnBH,EAAII,aAAeJ,EAAIK,MACzBlE,QAAQC,IAAI4D,EAAIM,kBAAkB,oBAGtCN,EAAIO,QAsMJC,YAnMmBC,IACnB,MAAMC,EAAS,IAAIC,WACnB,OAAO,IAAIjF,SAASC,IAClB+E,EAAO7D,iBAAiB,QAAQ,KAC9B,MAAMrB,EAAM/C,SAASsC,cAAc,OACnCS,EAAI7C,IAAM+H,EAAOE,OACjBjF,EAAQ,CAAE8E,KAAAA,EAAMjF,IAAAA,OAElBkF,EAAOG,cAAcJ,OA4LvBK,MAAK,EACLC,IAlEU,CAACpH,EAAIqH,KACf7J,OAAO+F,KAAK8D,GAAQhG,SAAS/D,IAC3B,MACMoB,GADKkH,EAAWtI,IAAQ,CAAEuD,GAAQA,IACvBwG,EAAO/J,IACxB0C,EAAGsH,MAAMhK,GAAOoB,MA+DlB6I,cA5DoB,CAACC,EAAUC,KAC/B,IAAIC,EAAIF,EACRhK,OAAO+F,KAAKkE,GAAU,IAAIpG,SAAS/D,IACjC,MAAMqK,EAAO,IAAMrK,EACboB,EAAQ+I,EAAOnK,GACrBoK,EAAIA,EAAEE,WAAWD,EAAMjJ,MAEzB,MAAMmJ,EAAc/I,SAASsC,cAAc,YAE3C,OADAyG,EAAYpG,UAAYiG,EACjBG,EAAYrG,QAAQsG,mBAoD3BC,QAjDc,CAAC/H,EAAIgI,IAAgBhI,EAAGiI,cAAcD,GAkDpDE,GAjDS,CAAClI,EAAIgI,EAAaG,GAAe,KAC1C,MAAMC,EAAQpI,EAAGqI,QAAQL,GACzB,OAAII,KAGAD,KACWhI,EAAQH,EAAIgI,IA4C3B1D,KAAAA,EACAgE,QAvCetI,GAAOA,EAAGuI,wBAwCzBC,MAtCY,CACZC,OAASvK,GAAuB,mBAARA,GAsCxBwK,MApCY,CACZC,KAAOjK,GACL,IAAIqD,SAAQ,CAAC6G,EAAKC,KAChB,MAAMnE,EAAIhG,GAASA,EAAMoC,OACrB4D,EAAEvF,OAAS,EACbyJ,EAAIlE,GAEJmE,EAAGnK,MAGToK,OAASpK,GACP,IAAIqD,SAAQ,CAAC6G,EAAKC,KAChB,MAAME,EAAIC,WAAWtK,GACjBuK,OAAOC,MAAMH,GACfF,EAAGnK,GAEHkK,EAAIG,MAGVI,OAASzK,GAA2B,iBAAVA,GAAsBA,EAAMoC,OAAO3B,OAAS,ICnSlEiK,EAAe7L,IAEnB,GAAI,kCAAkC8G,gBADlB9G,GACkC,OAAO,GAEzD8L,EAAc9L,GAAmB,mBAANA,EAC3B+L,EAAYtK,IAChB,GACEA,MAAAA,GAEAoK,EAAYpK,IACZqK,EAAWrK,GAEX,OAAOA,EAET,MAAMuK,EAAMC,MAAMC,QAAQzK,GAAO,GAAK,GAKtC,OAJAxB,OAAO+F,KAAKvE,GAAKqC,SAASlD,IACxB,MAAMO,EAAQ4K,EAAStK,EAAIb,IAC3BoL,EAAIpL,GAAQO,KAEP6K,GAcHG,EAAY,CAAC1K,EAAK8D,KACtBtF,OAAO+F,KAAKvE,GAAKqC,SAASlD,IACH,OAAjB2E,EAAO3E,SAAmCwL,IAAjB7G,EAAO3E,GAClC2E,EAAO3E,GAAQmL,EAAStK,EAAIb,IACnBiL,EAAYpK,EAAIb,KAAUkL,EAAWrK,EAAIb,IAClD2E,EAAO3E,GAAQa,EAAIb,GAEnBuL,EAAU1K,EAAIb,GAAO2E,EAAO3E,OAGzB2E,GAET,GACEwG,SAAAA,EACAI,UAAAA,GC/CIE,EAAQ,CACZC,KAAM,CACJC,SAAU,CAAEC,KAAM,mBAAoBC,KAAM,IAC5CC,KAAM,CAAEF,KAAM,eAAgBC,KAAM,KAEtCE,UAAW,CACTD,KAAM,CACJF,KAAM,gBACNC,KAAM,KAGVG,KAAM,CACJF,KAAM,CACJF,KAAM,0BACNC,KAAM,KAGVC,KAAM,CACJG,QAAS,CACPL,KAAM,eACNC,KAAM,GACNK,OAAQ,CACNN,KAAM,sBACNC,KAAM,oCAGVM,QAAS,CACPP,KAAM,eACNC,KAAM,wBACNK,OAAQ,CACNN,KAAM,sBACNC,KAAM,oCAGVO,QAAS,CACPR,KAAM,eACNC,KAAM,0BACNK,OAAQ,CACNN,KAAM,sBACNC,KAAM,kCAGVQ,SAAU,CACRT,KAAM,gBACNC,KAAM,6BACNK,OAAQ,CACNN,KAAM,uBACNC,KAAM,qCAGVS,QAAS,CACPV,KAAM,eACNC,KAAM,wBAERU,OAAQ,CACNX,KAAM,cACNC,KAAM,+BAGVF,SAAU,CACRa,QAAS,CACPZ,KAAM,mBACNC,KAAM,wBAERY,QAAS,CACPb,KAAM,mBACNC,KAAM,+BAkBNa,EAAY,IAAIC,IACtB,MAAM,EACJtL,cACE1B,KAAKiN,UAAY,IAAIC,IAGvBC,GAAGlI,EAAWC,GACZ,IAAIkI,EAAepN,KAAKiN,UAAUpN,IAAIoF,GACjCmI,IACHA,EAAe,IAAIJ,IACnBhN,KAAKiN,UAAUI,IAAIpI,EAAWmI,IAEhCA,EAAahL,IAAI8C,GAEnBoI,IAAIC,EAAUrI,GACZ,MAAMkI,EAAepN,KAAKiN,UAAUpN,IAAI0N,GACxC,IAAKH,EACH,OAEF,MAAMI,EAAMJ,EAAaK,WAAWC,GAAOA,IAAOxI,IAClDkI,EAAaO,OAAOH,EAAK,GAO3BI,OAAO3I,EAAWC,GAChB,MAAMmE,EA1CS,CAACpE,IAClB,MAAM4I,EAAS5I,EAAU6I,cAAcjL,MAAM,KAC7C,IAAIzC,EAAM0L,EACV,IAAK,IAAIpG,EAAI,EAAGA,EAAImI,EAAOxM,OAAQqE,IAEjC,GADAtF,EAAMA,EAAIyN,EAAOnI,KACZtF,EACH,MAAM,IAAIkB,MAAM,wBAAwB2D,MAG5C,GAAI7E,EAAI6L,OAAShH,EACf,MAAM,IAAI3D,MAAM,yBAAyB2D,MAE3C,OAAO7E,GA8BS2N,CAAW9I,GACzBjF,KAAKmN,GAAG9D,EAAOnE,GAEjB8I,KAAK/I,EAAWgJ,EAASC,IACFlO,KAAKiN,UAAUpN,IAAIoF,IAAc8H,GACzCxJ,SAASmK,IACpB,IACEA,EAAGO,GACH,MAAO/N,GACPwE,QAAQC,IAAIzE,OAGZgO,GACFC,YAAW,KACTnO,KAAKgO,KAAK/I,EAAkB,OAAGgJ,OC3HvC,MAAMG,EAAa,OACbC,EAAWD,EACXE,EAAYF,EAEZG,EAAoBC,IACxB,IAAIC,EAAQD,EAAGE,QAAQ,GACP,aAAZF,EAAGG,OACLF,EAAQD,EAAGI,eAAe,IAE5BJ,EAAGK,QAAUJ,EAAMI,QACnBL,EAAGM,QAAUL,EAAMK,QACnBN,EAAGO,OAAS,EACZP,EAAGQ,OAAS,EACZR,EAAGS,QAAU,EACbT,EAAGU,QAAU,EACbV,EAAGW,MAAQV,EAAMU,MACjBX,EAAGY,MAAQX,EAAMW,MACjBZ,EAAGa,QAAUZ,EAAMY,QACnBb,EAAGc,QAAUb,EAAMa,SAEfC,EAAmBC,IACvBC,aAAaD,EAAIE,YACjBF,EAAIE,WAAa,MAEbtI,EAAY,CAACoI,EAAKtP,KACtB,MAAM,QAAEyP,GAAYH,EACfG,EAAQC,OAAO1P,EAAE8E,UAGtBwK,EAAInB,SAAW,CACbwB,cAAe3P,EACf4P,GAAI5P,EAAEiP,MACNY,GAAI7P,EAAEkP,MACNY,GAAI,EACJC,GAAI,EACJC,MAAO,KACPC,KAAM,MAERR,EAAQvB,WAAWoB,EAAInB,YAGnBhH,EAAY,CAACmI,EAAKtP,KAClBsP,EAAInB,WACNnO,EAAEkQ,iBACEZ,EAAInB,SAAS8B,OACfX,EAAInB,SAAS8B,OACbX,EAAInB,SAAS8B,KAAO,MAEtBX,EAAIK,cAAgB3P,EACpBsP,EAAIK,cAAgB3P,EACpBsP,EAAInB,SAAS2B,GAAK9P,EAAEiP,MAAQK,EAAInB,SAASyB,GACzCN,EAAInB,SAAS4B,GAAK/P,EAAEkP,MAAQI,EAAInB,SAAS0B,GACzCP,EAAIG,QAAQtB,SAASmB,EAAInB,YAGvB/G,EAAU,CAACkI,EAAKtP,KACpBsP,EAAIK,cAAgB3P,EACpBc,SAASmJ,cAAc,QAAQX,MAAM6G,OAAS,GAC9C,IAEMb,EAAInB,UAENmB,EAAIG,QAAQrB,UAAUkB,EAAInB,UAE5B,MAAOnO,GACPwE,QAAQC,IAAI,cAAezE,GAC3B,QACAsP,EAAIhJ,KAAK8J,QACTd,EAAInB,SAAW,OAqCnB,MAAMkC,EACJ7O,YAAYiO,GACV3P,KAAK0P,WAAa,KAClB1P,KAAKqO,SAAW,KAChBrO,KAAK2P,QAAUA,EACf3P,KAAKwG,KAAO,IAAI0G,IAtBJ,CAACsC,IACf,MAAM,QAAEG,GAAYH,EACpBG,EAAQvB,WAAauB,EAAQvB,YAAcA,EAC3CuB,EAAQtB,SAAWsB,EAAQtB,UAAYA,EACvCsB,EAAQrB,UAAYqB,EAAQrB,WAAaA,EAEzCnO,OAAOiF,iBAAiB,aAAclF,GAAMkH,EAAUoI,EAAKtP,KAAI,GAC/DC,OAAOiF,iBAAiB,aAAclF,GAAMmH,EAAUmI,EAAKtP,IAAI,CAC7DsQ,SAAS,IAEXrQ,OAAOiF,iBAAiB,WAAYlF,GAAMoH,EAAQkI,EAAKtP,KAAI,GAC3DC,OAAOiF,iBAAiB,cAAelF,GA5BtB,EAACsP,EAAKtP,KACvBsP,EAAIE,WAAavB,YAAW,KAC1BI,EAAiBrO,GACjBkH,EAAUoI,EAAKtP,KACd,KAwB0CqH,CAAWiI,EAAKtP,KAAI,GACjEC,OAAOiF,iBAAiB,aAAclF,GAvBtB,EAACsP,EAAKtP,KACtBqP,EAAgBC,GAChBjB,EAAiBrO,GACjBmH,EAAUmI,EAAKtP,IAoB6BsH,CAAUgI,EAAKtP,IAAI,CAC7DsQ,SAAS,IAEXrQ,OAAOiF,iBAAiB,WAAYlF,GArBrB,EAACsP,EAAKtP,KACrBqP,EAAgBC,GAChBjB,EAAiBrO,GACjBoH,EAAQkI,EAAKtP,IAkB6BuH,CAAS+H,EAAKtP,KAAI,IAQ1DuQ,CAAQzQ,MAEV0Q,QAAQzE,EAAMrL,GACZZ,KAAKwG,KAAK6G,IAAIpB,EAAMrL,GAEtB+P,QAAQ1E,GACN,OAAOjM,KAAKwG,KAAK3G,IAAIoM,ICnHzB,M,kECuBA,EAbe,CAAC2E,EAAMnF,EAAKoF,GAAUC,MAAAA,EAAQ,MAC3C,MAAMd,GAAMvE,EAAIsF,EAAIH,EAAKG,GAAKD,EACxBb,GAAMxE,EAAIuF,EAAIJ,EAAKI,GAAKF,EACxBG,EAAOJ,EAASK,KAAKC,GAAM,IAC3BC,EAAMF,KAAKE,IAAIH,GACfI,EAAMH,KAAKG,IAAIJ,GAErB,MAAO,CACLF,EAAGf,EAAKoB,EAAMnB,EAAKoB,EAAMT,EAAKG,EAC9BC,EAAGhB,EAAKqB,EAAMpB,EAAKmB,EAAMR,EAAKI,ICd5BM,EAAanR,OAAOoR,iBACpB7H,EAAW,CACf8H,SAAU,oLAEgH,iEAG1HC,KAAM,2JAKNC,eAAgB,4EAA4E,eAG9F,MAAMC,EACJjQ,YAAY+P,EAAMX,GAChB,MAAMc,EAASH,EAAKG,SACpBA,EAAOb,GAAKD,EACZc,EAAOZ,GAAKF,EACZ,MAAMe,EAAOC,EAAItH,QAAQiH,EAAKM,UACxB,MAAE1N,EAAK,OAAEE,GAAWsN,EAC1B7R,KAAKgS,IAAMJ,EAAOZ,EAAIzM,EAAS,EAC/BvE,KAAKiS,MAAQL,EAAOb,EAAI1M,EAAQ,EAChCrE,KAAKkS,OAASN,EAAOZ,EAAIzM,EAAS,EAClCvE,KAAKmS,KAAOP,EAAOb,EAAI1M,EAAQ,EAC/BrE,KAAKqE,MAAQA,EACbrE,KAAKuE,OAASA,EACdvE,KAAKoS,GAAKR,EAAOb,EACjB/Q,KAAKqS,GAAKT,EAAOZ,EACjBhR,KAAKsS,KAAO,KAEdC,MAAMC,GASJ,OARAxS,KAAKgS,IAAMd,KAAKuB,IAAIzS,KAAKgS,IAAKQ,EAAMR,KACpChS,KAAKiS,MAAQf,KAAKwB,IAAI1S,KAAKiS,MAAOO,EAAMP,OACxCjS,KAAKkS,OAAShB,KAAKwB,IAAI1S,KAAKkS,OAAQM,EAAMN,QAC1ClS,KAAKmS,KAAOjB,KAAKuB,IAAIzS,KAAKmS,KAAMK,EAAML,MACtCnS,KAAKqE,MAAQrE,KAAKiS,MAAQjS,KAAKmS,KAC/BnS,KAAKuE,OAASvE,KAAKkS,OAASlS,KAAKgS,IACjChS,KAAKoS,GAAKpS,KAAKqE,MAAQ,EACvBrE,KAAKqS,GAAKrS,KAAKuE,OAAS,EACjBvE,KAET2S,KAAK7N,GACH,MAAM,UAAE8N,GAAc9N,EAAO+N,OAAOC,GAC9BlB,EAAS9M,EAAOiO,kBAEhB7Q,EAAK4P,EAAI7H,QAAQnF,EAAOkO,UAAW,uBACzClB,EAAIxI,IAAIpH,EAAI,CACViQ,KAAMP,EAAOb,EAAI/Q,KAAKmS,KAAOS,EAAUK,QACvCjB,IAAKJ,EAAOZ,EAAIhR,KAAKgS,IAAMY,EAAUK,QACrC5O,MAAOrE,KAAKqE,MAAQ,EAAIuO,EAAUK,QAClC1O,OAAQvE,KAAKuE,OAAS,EAAIqO,EAAUK,UAEtC,MAAM/M,EAAO4L,EAAI7H,QAAQ/H,EAAI,OAC7B4P,EAAIxI,IAAIpD,EAAM,CACZgN,QAAS,GACT7O,MAAO,GAAK6M,KAAKwB,IAAI5N,EAAOgM,MAAO,GACnCvM,OAAQ,GAAK2M,KAAKwB,IAAI5N,EAAOgM,MAAO,KAGxCR,MAAMxL,GACJ,MAAM5C,EAAK4P,EAAI7H,QAAQnF,EAAOkO,UAAW,uBACzClB,EAAIxI,IAAIpH,EAAI,CAAE8P,KAAM,EAAGG,MAAO,EAAG9N,MAAO,EAAGE,OAAQ,IACnD,MAAM2B,EAAO4L,EAAI7H,QAAQ/H,EAAI,OAC7B4P,EAAIxI,IAAIpD,EAAM,CAAEgN,QAAS,UAG7B,MAcMC,EAAoBC,IACxB,MAAM,OAAEP,EAAM,UAAEG,EAAS,QAAEK,GAAYD,GACjC,YAAEE,EAAW,aAAEC,GAAiBP,EACtClB,EAAIxI,IAAI+J,EAAS,CAAEhP,MAAOiP,EAAa/O,OAAQgP,IAC/CzB,EAAIrO,KAAK4P,EAAS,QAAS/B,EAAagC,GAAa,GACrDxB,EAAIrO,KAAK4P,EAAS,SAAU/B,EAAaiC,GAAc,GACvD,MAAM/D,EAAM6D,EAAQG,WAAW,KAAM,CAAEC,OAAO,IAE9CL,EAASM,KAAOlE,EAChB4D,EAASM,KAAK5C,MAAMQ,EAAYA,GAC5B8B,EAASO,eACXP,EAASO,cAAchB,KAAKS,GAE9BP,EAAO7E,KAAKlC,EAAME,SAASa,UAMvB+G,EAAkB,CAACR,EAAUS,KACjC,GAAIA,EAAOC,IACT,MAAM,IAAIxS,MAAM,0CAA0CuS,EAAOE,QAEnE,MAAMD,EAAOD,EAAOC,IAAMhC,EAAIrI,cAAcC,EAAS+H,MAC/CuC,EAAmBZ,EAASP,OAAOoB,mBACnC,MAAEC,GAAUL,EAEZ9B,EAAUqB,EAASe,YAAYN,GAChBG,EAAiBI,YAAYF,EAAMvF,MAC3C8B,QAAQoD,EAAQ9B,GACzBmC,EAAMG,QAfW,EAACA,EAAQP,EAAKjB,KACnC,MAAMzK,EAAYyK,EAAOC,GAAG3K,MAAMkM,OAAOA,GACzCvC,EAAI3J,MAAM/F,IAAI0R,EAAK1L,IAcjBkM,CAAeJ,EAAMG,OAAQtC,EAASqB,EAASP,QAEjD,MAAM0B,EAAcnB,EAASoB,OAAO,cASpC,OARIX,EAAOY,SACTF,EAAYG,OAAOZ,GAELhC,EAAI7H,QAAQ4J,EAAOc,OAAOb,IAAK,aACvCY,OAAOZ,GAGfA,EAAIjN,QAAQkN,IAAMF,EAAOE,IAClBF,EAAOC,KAyDVc,EAAgB,CAACnD,EAAMyB,KAC3BpB,EAAIxI,IAAImI,EAAKqC,IAAK,CAAEZ,QAAAA,IAChBzB,EAAKoD,YAGTpD,EAAKqD,KAAKvR,SAASwR,IACjBH,EAAcG,EAAO7B,OC5LnB8B,EAAqB,CACzB/I,KAAM,OACN3G,OAAQ,GACR2P,MAAO,UACP5Q,MAAO,GAEH6Q,EAAW,CAACzD,EAAMpR,KACtB,IAAI8U,EAAU1D,EACVjI,EAAQ2L,EAAQC,SAAS,QAC7B,MAAQ5L,EAAMnJ,KAAU8U,EAAQV,UAC9BU,EAAUA,EAAQR,OAClBnL,EAAQ2L,EAAQC,SAAS,QAE3B,OAAO5L,EAAMnJ,IAAS2U,EAAmB3U,IAoB3C,EAlBA,MACEqB,YAAYmS,GACV7T,KAAK6T,OAASA,EAEZ5H,WACF,OAAOiJ,EAASlV,KAAK6T,OAAQ,QAE3BvO,aACF,OAAO4P,EAASlV,KAAK6T,OAAQ,UAE3BoB,YACF,OAAOC,EAASlV,KAAK6T,OAAQ,SAE3BxP,YACF,OAAO6Q,EAASlV,KAAK6T,OAAQ,WCpC3BwB,EAAW5D,IACf,MAAM,MAAEpN,GAAUoN,EAAK6D,OACvB,MAAwB,mBAAVjR,EAAuBA,EAAMoN,GAAQpN,GAO/CkR,EAAkB,CAACzQ,EAAQ2M,EAAMI,EAAMoB,KAC3C,MAAM5O,EAAQgR,EAAQ5D,GAEtB3M,EAAO0Q,SACL,CACE,CAAEzE,EAAGc,EAAKM,KAAOc,EAAQwC,IAAKzE,EAAGa,EAAKK,OAASe,EAAQyC,KACvD,CAAE3E,EAAGc,EAAKI,MAAQgB,EAAQwC,IAAKzE,EAAGa,EAAKK,OAASe,EAAQyC,MAE1D,CAAEC,UAAWtR,EAAOuR,YAAanE,EAAK6D,OAAOL,SCjB3C,EAAWxD,IACf,MAAM,MAAEpN,GAAUoN,EAAK6D,OACvB,MAAwB,mBAAVjR,EAAuBA,EAAMoN,GAAQpN,GCG/CwR,EAAY,CAChBC,KCFmB,CAAChR,EAAQiR,EAASC,KACrC,MAAM,MAAElF,GAAUhM,GACXmR,EAAG/V,GAAK,CAAC6V,EAASC,GAASlT,KAAK2O,IACrC,MAAMG,EAASH,EAAKG,SACpBA,EAAOb,GAAKD,EACZc,EAAOZ,GAAKF,EACZ,MAAMe,EAAOC,EAAItH,QAAQiH,EAAKM,UACxB,MAAE1N,EAAK,OAAEE,GAAWsN,EAO1B,OANAD,EAAOO,KAAOP,EAAOb,EAAI1M,EAAQ,EACjCuN,EAAOK,MAAQL,EAAOb,EAAI1M,EAAQ,EAClCuN,EAAOI,IAAMJ,EAAOZ,EAAIzM,EAAS,EACjCqN,EAAOM,OAASN,EAAOZ,EAAIzM,EAAS,EACpCqN,EAAOvN,MAAQA,EACfuN,EAAOrN,OAASA,EACTqN,KAEHpI,EAAQwM,EAAQV,OACtBxQ,EAAO0Q,SAAS,CAACS,EAAG/V,GAAI,CACtByV,UAAWnM,EAAMnF,MAAQyM,EACzB8E,YAAapM,EAAMyL,SDhBrBiB,cEDoB,CAACpR,EAAQiR,EAASC,KACtC,MAAM,MAAElF,GAAUhM,GACXmR,EAAG/V,GAAK,CAAC6V,EAASC,GAASlT,KAAK2O,GAASA,EAAKG,OAAOd,KACtDtH,EAAQuM,EAAQT,OACtBxQ,EAAOqR,UAAUF,EAAG/V,EAAG,CACrB2Q,OAAQrH,EAAMlE,OAAO8Q,KAAO,GAC5BC,MAAO7M,EAAMlE,OAAO+Q,OAAS,GAC7BC,MAAO,CACLX,UAAWnM,EAAMnF,MAAQyM,EACzB8E,YAAapM,EAAMyL,UFPvBsB,YFsCuB,CAACzR,EAAQiR,EAASC,KACzC,MAAM,MAAElF,GAAUhM,GACXmR,EAAG/V,GAAK,CAAC6V,EAASC,GAASlT,KAAK2O,IACrC,MAAMG,EAASH,EAAKG,SACpBA,EAAOb,GAAKD,EACZc,EAAOZ,GAAKF,EACZ,MAAMe,EAAOC,EAAItH,QAAQiH,EAAKM,UACxB,MAAE1N,EAAK,OAAEE,GAAWsN,EAO1B,OANAD,EAAOO,KAAOP,EAAOb,EAAI1M,EAAQ,EACjCuN,EAAOK,MAAQL,EAAOb,EAAI1M,EAAQ,EAClCuN,EAAOI,IAAMJ,EAAOZ,EAAIzM,EAAS,EACjCqN,EAAOM,OAASN,EAAOZ,EAAIzM,EAAS,EACpCqN,EAAOvN,MAAQA,EACfuN,EAAOrN,OAASA,EACTqN,KAEHqB,EAAU,CAAEwC,IAAK,EAAGC,IAAK,GAM/B,IAAIjD,EAAKC,EAJiB,WA5DX,CAACjB,IAChB,MAAM,OAAEnM,GAAWmM,EAAK6D,OAExB,OADehQ,GAAUA,EAAOkR,QACf,UAyDbC,CAASV,KACX9C,EAAQyC,IAAM,GAIZO,EAAElF,GAAK7Q,EAAE6Q,GACX0B,EAAMwD,EACNvD,EAAMxS,IAENuS,EAAMvS,EACNwS,EAAMuD,GAGRxD,EAAI1B,EAAI0B,EAAIR,MAAQgB,EAAQwC,IAC5B/C,EAAI3B,EAAI2B,EAAIP,KAAOc,EAAQwC,IACvBxC,EAAQyC,IAAM,IAChBjD,EAAIzB,EAAIyB,EAAIP,OAASe,EAAQyC,IAC7BhD,EAAI1B,EAAI0B,EAAIR,OAASe,EAAQyC,KAE/B,MAAM1F,EAAK0C,EAAI3B,EAAI0B,EAAI1B,EACZ2B,EAAI1B,EAAIyB,EAAIzB,EACbqE,EAAQU,GACd9C,EAAQyC,IAAM,GAAKK,EAAQtB,UAAYsB,EAAQW,eAAiBV,GAClET,EAAgBzQ,EAAQiR,EAASE,EAAGhD,GAnEpB,EAACnO,EAAQiR,EAASE,EAAGD,EAAS9V,EAAG8P,KAEnD,MAAM2G,EAAWtB,EAAQU,GACnBa,EAAWvB,EAAQW,GACnB3R,EAAQ6M,KAAKuB,IAAIkE,EAAUC,GAC3BhF,EAASV,KAAK2F,IAAIF,EAAWC,GACnCX,EAAEjF,GAAKY,EAAS,EAChB,MAAM0E,EAAQ,CAAEX,UAAWtR,EAAOuR,YAAaI,EAAQV,OAAOL,OAC9DnQ,EAAOgS,eAAeb,EAAG/V,EAAG,CAC1B6W,QAAS,CACP,CAAEhG,EAAGkF,EAAElF,EAAIf,EAAK,EAAGgB,EAAGiF,EAAEjF,GACxB,CAAED,EAAG7Q,EAAE6Q,EAAIf,EAAK,EAAGgB,EAAG9Q,EAAE8Q,IAE1BsF,MAAAA,IAEE1E,EAAS,IACXqE,EAAEjF,GAAKY,EACP9M,EAAOgS,eAAeb,EAAG/V,EAAG,CAC1B6W,QAAS,CACP,CAAEhG,EAAGkF,EAAElF,EAAIf,EAAK,EAAGgB,EAAGiF,EAAEjF,GACxB,CAAED,EAAG7Q,EAAE6Q,EAAIf,EAAK,EAAGgB,EAAG9Q,EAAE8Q,IAE1BsF,MAAAA,MA+CJU,CAAYlS,EAAQiR,EAASE,EAAGD,EAAS9V,EAAG+V,IAAMxD,EAAMzC,GAAMA,GAC1DiD,EAAQyC,IAAM,GAChBH,EAAgBzQ,EAAQkR,EAAS9V,EAAG+S,IElFtCgE,YD0BuB,CAACnS,EAAQiR,EAASC,KACzC,MAAM,MAAElF,GAAUhM,GACXmR,EAAG/V,GAAK,CAAC6V,EAASC,GAASlT,KAAK2O,IACrC,MAAMG,EAASH,EAAKG,OAAOd,GACrBe,EAAOC,EAAItH,QAAQiH,EAAKM,UACxB,MAAE1N,EAAK,OAAEE,GAAWsN,EAO1B,OANAD,EAAOO,KAAOP,EAAOb,EAAI1M,EAAQ,EACjCuN,EAAOK,MAAQL,EAAOb,EAAI1M,EAAQ,EAClCuN,EAAOI,IAAMJ,EAAOZ,EAAIzM,EAAS,EACjCqN,EAAOM,OAASN,EAAOZ,EAAIzM,EAAS,EACpCqN,EAAOvN,MAAQA,EACfuN,EAAOrN,OAASA,EACTqN,KAIT,IAAIa,EAAKC,EACLuD,EAAEjF,GAAK9Q,EAAE8Q,GACXyB,EAAMwD,EACNvD,EAAMxS,IAENuS,EAAMvS,EACNwS,EAAMuD,GAGRxD,EAAIzB,EAAIyB,EAAIP,OAXmB,EAY/BQ,EAAI1B,EAAI0B,EAAIV,IAZmB,EAe/B,MAAM/B,EAAKyC,EAAI1B,EAAIyB,EAAIzB,EAvDL,EAAClM,EAAQiR,EAASE,EAAGD,EAAS9V,EAAG+P,KACnD,MAAM,MAAEa,GAAUhM,EACZ6R,EAAW,EAAQZ,GACnBa,EAAW,EAAQZ,GACnB3R,EAAQ6M,KAAKuB,IAAIkE,EAAUC,GAC3BhF,EAASV,KAAK2F,IAAIF,EAAWC,GACnCX,EAAElF,GAAKa,EAAS,EAChB,MAAM0E,EAAQ,CAAEX,UAAWtR,EAAQyM,EAAO8E,YAAaI,EAAQV,OAAOL,OACtEnQ,EAAOgS,eAAeb,EAAG/V,EAAG,CAC1B6W,QAAS,CACP,CAAEhG,EAAGkF,EAAElF,EAAGC,EAAGiF,EAAEjF,EAAIf,EAAK,GACxB,CAAEc,EAAG7Q,EAAE6Q,EAAGC,EAAG9Q,EAAE8Q,EAAIf,EAAK,IAE1BqG,MAAAA,IAEE1E,EAAS,IACXqE,EAAEjF,GAAKY,EACP9M,EAAOgS,eAAeb,EAAG/V,EAAG,CAC1B6W,QAAS,CACP,CAAEhG,EAAGkF,EAAElF,EAAGC,EAAGiF,EAAEjF,EAAIf,EAAK,GACxB,CAAEc,EAAG7Q,EAAE6Q,EAAGC,EAAG9Q,EAAE8Q,EAAIf,EAAK,IAE1BqG,MAAAA,MAmCJ,CAAYxR,EAAQiR,EAASE,EAAGD,EAAS9V,EAAG+V,IAAMxD,EAAMxC,GAAMA,KCvD1DiH,EAAc,CAACnB,EAASoB,KAC5BpB,EAAQqB,UAAUrC,IAChB,MAAM7U,EAAI,IAAImX,EAAKtB,EAAShB,GAC5BoC,EAAMG,KAAKpX,GACXgX,EAAYnC,EAAOoC,OAGjBI,EAAc,CAACJ,EAAOjS,KAC1B,MAAMsS,EAAM,GAMZ,OALAL,EAAM5T,SAAQ,CAACrD,EAAGuX,KACZvS,EAAShF,IACXsX,EAAIF,KAAKG,MAGND,GAEHE,EAAoB,CAACC,EAAQC,EAAMC,KACpBF,EAAOG,aACvB5X,GAAMA,EAAEgB,MAAQ0W,EAAKnM,MAAQvL,EAAEgB,IAAI2T,aAE3BtR,SAASqU,IAClBA,EAAKG,OAASF,EACdH,EAAkBC,EAAQC,EAAMC,OAGpC,MAAMR,EACJ3V,YAAYqU,EAASC,GACnBhW,KAAK+V,QAAUA,EACf/V,KAAKgW,QAAUA,EACfhW,KAAK+X,QAAS,EAEZ7W,UACF,OAAOlB,KAAK+V,QAEVtK,UACF,OAAOzL,KAAKgW,QAEdgC,QAAQvG,GACN,OAAOzR,KAAK+V,UAAYtE,GAAQzR,KAAKgW,UAAYvE,EAEnDwG,WAAWxG,GACT,OAAOzR,KAAKgW,UAAYvE,GGvC5B,IAAIsC,EAAM,IACNmE,EAAS,EACb,MAAMC,GACJzW,YAAYmR,EAAQuF,EAAcC,GAChCrY,KAAK6S,OAASA,EACd7S,KAAKoY,aAAeA,EACpBpY,KAAK8T,IAAM,KACX9T,KAAKsY,UAAW,EAChBtY,KAAKuY,SAAU,EACfvY,KAAK+T,IAAM,QAAQA,IACnB/T,KAAKkY,OAAS,EACdlY,KAAK8U,KAtBS,CAAC0D,IACjB,MAAM,KAAE1D,GAAS0D,EAAO3F,OACxB,OAAKiC,GAAwB,IAAhBA,EAAKzT,OAGXyT,EAAKhS,KAAKR,IACf,MAAMmP,EAAO,IAAI0G,GAAO7V,EAAMkW,EAAOJ,cAErC,OADA3G,EAAKkD,OAAS6D,EACP/G,KALA,IAmBKgH,CAAUzY,MACtBA,KAAK2U,OAAS0D,EACdrY,KAAKsV,OAAS,IAAI,EAAUtV,MAC5BA,KAAK0Y,SAAU,EACf1Y,KAAK2Y,KAAO,KAEVzE,YACF,MAAO,IAAKlU,KAAK6S,OAAOqB,OAEtBnC,cAEF,OADe/R,KAAKoY,aAAaQ,YACnBzE,YAAYnU,MAExB+Q,QACF,OAAO/Q,KAAK6S,OAAOgG,KAAK9H,EAEtBC,QACF,OAAOhR,KAAK6S,OAAOgG,KAAK7H,EAEtB8H,aACF,IAAI,OAAEA,GAAW9Y,KAAK6S,OAAOgG,KAC7B,OAAIC,EACK,IAAKA,GACA9Y,KAAK2U,QAAU3U,KAAK2U,OAAOmE,OAEvCC,aACF,QAAS/Y,KAAK8T,IAEZkF,iBACF,MAAO,IAAIhZ,KAAK8U,MAElBmE,YACE,MAAMnI,EAAQ9Q,KAAKoY,aAAatH,MAC1B5O,EAAKlC,KAAK+R,QACVH,EAAS5R,KAAK4R,SACpBA,EAAOb,GAAKD,EACZc,EAAOZ,GAAKF,EACZ,MAAMoI,EAAKhX,EAAGoR,YAAcxC,EAAS,EAC/BqI,EAAKjX,EAAGqR,aAAezC,EAAS,EACtC,OAAQ9Q,KAAK2Y,KAAO,CAClB5H,EAAGa,EAAOb,EAAImI,EACdlI,EAAGY,EAAOZ,EAAImI,EACd9U,MAAO,EAAI6U,EACX3U,OAAQ,EAAI4U,EACZ/G,GAAIR,EAAOb,EACXsB,GAAIT,EAAOZ,EACXvQ,EAAGmR,EAAOb,EAAImI,EACdE,EAAGxH,EAAOZ,EAAImI,GAGlBE,QACE,OAAOrZ,KAAKyU,SAAW,EAAIzU,KAAK2U,OAAO0E,QAAU,EAEnDjE,SAASzG,GAEP,OAAOjP,OAAO4Z,OAAO,GAAItZ,KAAK6S,OAAOgG,KAAKlK,IAE5C4K,aACE,OAAOvZ,KAAKsY,SAEdkB,YAAYlB,GACVtY,KAAKsY,SAAWA,EAChBtY,KAAKkY,SAAWA,EACZlY,KAAK+Y,QACP/Y,KAAKyZ,UAGTC,eAAe1D,GACb,IAAI2D,EAAM3Z,KACV,KAAO2Z,GAAK,CACV,GAAIA,IAAQ3D,EACV,OAAO,EAEP2D,EAAMA,EAAIhF,OAGd,OAAO,EAETiF,YAAY1U,GACV,MAAM,MAAEgP,GAAUlU,KAAK6S,OACnB3N,EAASgP,KACXlU,KAAK2Y,KAAO,KAEZ3Y,KAAKoY,aAAapK,KAAKlC,EAAMK,KAAKM,QAAS,CAACzM,QAGhD4R,SACE,IAAI+H,EAAM3Z,KACV,MAAMwB,EAAI,CAAEuP,EAAG,EAAGC,EAAG,GACrB,KAAO2I,GAAK,CACV,MAAME,EAAM,EACZrY,EAAEuP,GAAK8I,EAAMF,EAAI5I,EACjBvP,EAAEwP,GAAK6I,EAAMF,EAAI3I,EACjB2I,EAAMA,EAAIhF,OAEZ,OAAOnT,EAETsY,WAAU,EAAE/I,EAAC,EAAEC,IACb,GAAIhR,KAAKyU,SACP,OAEF,MAAMsF,EAAO/Z,KAAK2U,OAAO/C,SACzB5R,KAAKga,OAAOjJ,EAAIgJ,EAAKhJ,EAAGC,EAAI+I,EAAK/I,GAMnCiJ,SACE,MAAO,CAAElJ,EAAG/Q,KAAK+Q,EAAGC,EAAGhR,KAAKgR,GAE9BgJ,OAAOjJ,EAAGC,EAAGkJ,GAAS,GACpBla,KAAK6S,OAAOgG,KAAK9H,EAAIA,EACrB/Q,KAAK6S,OAAOgG,KAAK7H,EAAIA,EACjBkJ,GACFla,KAAKyZ,UAGTU,iBACE,OAAOna,KAAKuY,QAEd6B,gBAAgB7B,GACdvY,KAAKuY,QAAUA,EACfvY,KAAKyZ,UAEPhF,SACE,OAAOzU,KAAK6S,OAAO9T,KAErBsb,SACE,OAA4B,IAArBra,KAAK8U,KAAKzT,OAEnB+V,SAASlS,GACPlF,KAAK8U,KAAKvR,SAASwR,GAAU7P,EAAS6P,EAAO/U,QAE/Csa,KAAKC,GACH,IAAIjQ,EAAQiQ,EAAUva,MACtB,GAAIsK,EACF,OAAOtK,KAET,IAAK,IAAI0F,EAAI,EAAGA,EAAI1F,KAAK8U,KAAKzT,SAC5BiJ,EAAQtK,KAAK8U,KAAKpP,GAAG4U,KAAKC,IACtBjQ,GAFgC5E,KAMtC,OAAO4E,EAOTkQ,SAASC,GACP,MAAMC,EAAaD,EAAQ9F,OAQ3B,OAPI+F,GAAcA,IAAe1a,MAC/B0a,EAAWC,YAAYF,GAEzBA,EAAQ9F,OAAS3U,KACjBA,KAAK8U,KAAKwC,KAAKmD,GACEza,KAAKoY,aAAaQ,YAC1BgC,SAASH,GACXC,EAETC,YAAYF,GACV,GAAIA,EAAQ9F,SAAW3U,KAErB,OAAO,KAET,MAAMwX,EAAMxX,KAAK8U,KAAKrH,WAAWgE,GAASA,EAAKsC,MAAQ0G,EAAQ1G,MAC/D,IAAa,IAATyD,EAEF,OAAO,KAET,MAAMqD,EAAe7a,KAAK8U,KAAKnH,OAAO6J,EAAK,GAE3C,OADAqD,EAAatX,SAASkO,GAAUA,EAAKkD,OAAS,OACvCkG,EAAa,GAEtBnE,aACE,OAAO1W,KAAK8U,KAAK,GAEnBgG,YACE,OAAyB,IAArB9a,KAAK8U,KAAKzT,OACL,KAEFrB,KAAK8U,KAAK9U,KAAK8U,KAAKzT,OAAS,GAEtC0Z,WAAWrC,GACL1Y,KAAK0Y,UAAYA,IAGrB1Y,KAAK0Y,QAAUA,EACf1Y,KAAKyZ,UACLzZ,KAAKoY,aAAapK,KAAKlC,EAAMK,KAAKS,OAAQ,CACxC6E,KAAMzR,KACN6X,OAAQ7X,KAAK0Y,WAGjB7D,WACE,OAAO7U,KAAK0Y,QAEde,UACmBzZ,KAAKoY,aAAaQ,YAC1BoC,SAAShb,MAClB,MAAM,IAAE8T,GAAQ9T,KACVib,EAAOnH,EAAI3J,cAAc,aAEzBqN,EAAMxX,KAAKia,SACjBnI,EAAIxI,IAAIwK,EAAK,CAAE9B,IAAKwF,EAAIxG,EAAGmB,KAAMqF,EAAIzG,EAAGmH,OAAQlY,KAAKkY,SAErD,MAAMgD,EAAalb,KAAKuZ,aAAe,MAAQ,SACzCnR,EAAYpI,KAAKoY,aAAa+C,gBAAgB,QACpDrJ,EAAI3J,MAAM+S,GAAYD,EAAM7S,GAE5B,MAAMgT,EAAiBpb,KAAKoY,aAAaiD,mBAAmBrb,MAC5D8R,EAAI3J,MAAM/F,IAAI6Y,EAAMG,IAIxBjD,GAAOmD,MAAQ,CAAChZ,EAAMuQ,KACpBvQ,EAAKvD,MAAO,EACL,IAAIoZ,GAAO7V,EAAMuQ,IAE1B,YCjPA,IAAiB0I,SAFC1H,MAES2H,YADP,QCqBpB,IAAiBD,SAjBA,CAAC1H,EAAQ4H,KACxB,MAAM,IAAE5B,GAAQ4B,EACX5B,IAGDA,EAAI6B,QAAQ,OAAS7B,EAAI6B,QAAQ,QACnC7H,EAAOuD,UAAUqD,IAZD,EAAChJ,EAAMgK,KACzB,MAAM,EAAE1K,EAAC,EAAEC,GAAMS,EACjBA,EAAKuI,QAAQjJ,EAAGC,GACAyK,EAAQE,cAAcC,iBAAiBnK,EAAKqH,QACpDyC,SAAS9J,EAAMgK,IASnBI,CAAYpB,EAASgB,OAUF,YANL,CAAC5H,EAAQ4H,KAC3B,MAAM,SAAEK,EAAQ,KAAEjK,GAAS4J,EACrB1K,EAAI+K,EAAS/K,EACbC,EAAI8K,EAAS9K,EAAIa,EAAKtN,OAAS,GACrCsP,EAAOmG,OAAOjJ,EAAGC,KCEnB,IAAiBuK,SAjBA,CAAC1H,EAAQ4H,KACxB,MAAM,IAAE5B,GAAQ4B,EACX5B,IAGDA,EAAI6B,QAAQ,OAAS7B,EAAI6B,QAAQ,QACnC7H,EAAOuD,UAAUqD,IAZD,EAAChJ,EAAMgK,KACzB,MAAM,EAAE1K,EAAC,EAAEC,GAAMS,EACjBA,EAAKuI,OAAOjJ,GAAIC,GACAyK,EAAQE,cAAcC,iBAAiBnK,EAAKqH,QACpDyC,SAAS9J,EAAMgK,IASnBM,CAAYtB,EAASgB,OAUF,YANL,CAAC5H,EAAQ4H,KAC3B,MAAM,SAAEK,EAAQ,KAAEjK,GAAS4J,EACrB1K,EAAI+K,EAAS/K,EAAIc,EAAKxN,MAAQ,GAC9B2M,EAAI8K,EAAS9K,EACnB6C,EAAOmG,OAAOjJ,EAAGC,KCXnB,IACEuK,SAZe,CAAC1H,EAAQ4H,KACxB,MAAM,IAAE5B,GAAQ4B,EACX5B,IAGL,YAAiBhG,EAAQ4H,GACzB,YAAiB5H,EAAQ4H,KAOzBD,YALkB,CAAC3H,EAAQ4H,KAC3B,eAAoB5H,EAAQ4H,KCJxBO,GAAY,IAAI9O,IACtB8O,GAAU3O,IAAI,UAAW,IACzB2O,GAAU3O,IAAI,SAAU,IACxB2O,GAAU3O,IAAI,SAAU,IACxB2O,GAAU3O,IAAI,UAAW,IAEzB,MAAMuO,GAAoB9C,GACfA,EAASkD,GAAUnc,IAAIiZ,EAAOnK,MAAQ,GAajD,IACEiN,iBAAAA,GACAJ,YAZkB,CAAC3H,EAAQ4H,KAC3B,MAAM,OAAE3C,GAAWjF,EACH+H,GAAiB9C,GACzB0C,YAAY3H,EAAQ4H,IAU5B3C,OARa,CAACjF,EAAQ4H,KACtB,MAAM,OAAE3C,GAAWjF,EACH+H,GAAiB9C,GACzByC,SAAS1H,EAAQ4H,KCrBrBQ,GAAkBC,IACtB,IAAK,IAAIrI,KAAUqI,EAAQC,SACzBtI,EAAO2F,aAAY,GAErB0C,EAAQ5L,SAEJ8L,GAAsBC,GACL,IAAjBA,EAAMhb,UAGNgb,EAAM,GAAGlC,iBAaTmC,GAAa,CAACC,EAAgB5H,EAAQ6H,KAC9BD,EAAe1J,OAAO4J,YAC9BC,QAAQ/H,EAAQ,CAClBT,MAAO,CAAErK,KAAM,SACf8S,YAAaH,KAOXI,GAAmBL,IACvB,MAAM,OAAE1J,GAAW0J,EACbF,EAAQE,EAAeM,WAC7B1O,YAAW,IAAM0E,EAAO7E,KAAKlC,EAAMK,KAAKO,SAASH,OAAQ,CAAE8P,MAAAA,OCtC7D,GAH6B,CAAC1N,EAAMmO,IAC3B,ID0CT,MAKEpb,YAAYmR,GACV7S,KAAK6S,OAASA,EACd7S,KAAKkc,QAAU,IAAIhP,IAEnB,MAAMkG,EAAWpT,KAAK6S,OAAO+F,YAC7B5Y,KAAK6S,OAAOjF,OAAO9B,EAAMK,KAAKO,UAAU,EAAG+E,KAAAA,EAAMiD,OAAAA,MAC/C,MAAM4D,EAAWtY,KAAKkc,QAAQa,IAAItL,EAAKsC,KACnCW,GACF1U,KAAKkc,QAAQ7O,IAAIoE,EAAKsC,IAAKtC,GAC3BA,EAAK+H,aAAY,GACjBoD,GAAgB5c,OACNsY,IACV2D,GAAejc,KAAKkc,SACpBlc,KAAKkc,QAAQ7O,IAAIoE,EAAKsC,IAAKtC,GAC3BA,EAAK+H,aAAY,GACjBoD,GAAgB5c,UAIpBA,KAAK6S,OAAOjF,OAAO9B,EAAME,SAASc,SAAS,KACzCmP,GAAejc,KAAKkc,SACpB9I,EAAS4J,gBACTJ,GAAgB5c,SAGlB8R,EAAIzI,MAAMzB,MAAMwL,EAASJ,WAAY9S,IACnC,GAAIF,KAAKid,UACP,OAEF,MAAM,KAAE1X,GAASrF,GACV2T,GAAU,IAAI7T,KAAKkc,QAAQC,UAC5B5D,EAAU1E,EAAOsG,iBACnB,UAAY5U,GAASgT,EAId,WAAahT,GACtBvF,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKQ,QAAS,CAAE4L,SAAS,EAAO1E,OAAAA,KAJvD3T,EAAE6G,kBACFqM,EAAS4J,gBACThd,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKQ,QAAS,CAAE4L,SAAS,EAAM1E,OAAAA,QAK1D/B,EAAIzI,MAAM1B,QACRyL,EAASJ,WACR9S,IACC,MAAMmc,EAAQrc,KAAK6c,WACfT,GAAmBC,KAGvBnc,EAAE6G,kBACF7G,EAAEgd,2BACFZ,GAAWtc,KAAMqc,EAAM,GAAG1H,OAAQ0H,EAAM,OAE1C,SAEFvK,EAAIzI,MAAM1B,QACRyL,EAASJ,WACR9S,IACC,MAAMmc,EAAQrc,KAAK6c,WACfT,GAAmBC,KAGvBnc,EAAE6G,kBACF7G,EAAEgd,2BACFZ,GAAWtc,KAAMqc,EAAM,GAAIA,EAAM,GAAGvB,gBAEtC,eAGFhJ,EAAIzI,MAAM1B,QACRyL,EAASJ,WACR9S,IACC,MAAMmc,EAAQrc,KAAK6c,WApFP,IAAiBM,EAfV,CAACd,GACL,IAAjBA,EAAMhb,UAIOgb,EAAM/B,MAAM7I,GAASA,EAAK1S,OA+FjCqe,CAAmBf,KAGvBnc,EAAE6G,kBACF7G,EAAEgd,2BAzF2BC,EA0FXd,EAANrc,KAzFS6S,OAAO4J,YAC9BY,YAAYF,GAyFVlB,GAAejc,KAAKkc,SACpBU,GAAgB5c,SAElB,UAGJid,UACE,OAA6B,IAAtBjd,KAAKkc,QAAQoB,KAEtBT,WACE,MAAO,IAAI7c,KAAKkc,QAAQC,YCtIIW,GCAjB,MAAMS,GACnB7b,YAAYmR,GACV7S,KAAK6S,OAASA,EACd7S,KAAKyR,KAAO,KACZzR,KAAK6S,OAAOjF,OAAO9B,EAAME,SAASc,SAAS,KACzC9M,KAAKwd,WAEPxd,KAAK6S,OAAOjF,OAAO9B,EAAMK,KAAKO,UAAU,EAAG+E,KAAAA,MACrCzR,KAAKyR,OAASA,GAChBzR,KAAKwd,MAAMxd,KAAKyR,SAItBgM,YACE,QAASzd,KAAKyR,KAEhBiM,KAAK7J,GACC7T,KAAKyR,OACPzR,KAAKwd,QACLxd,KAAKyR,KAAO,MAEWzR,KAAK6S,OAAOoB,kBACCG,YAAYP,EAAOK,MAAMvF,MAClDgP,OAAO9J,GACpB7T,KAAKyR,KAAOoC,EACZ7T,KAAKyR,KAAK2I,iBAAgB,GAE5BoD,QACMxd,KAAKyR,OACPzR,KAAKyR,KAAK2I,iBAAgB,GACTpa,KAAK6S,OAAO+F,YACpBgF,eAAe5d,KAAKyR,OAE/BzR,KAAKyR,KAAO,MCnChB,MAAM,GACE,sCADF,GAEI,4ICFJ,GACI,8FCDJ,GACI,gEADJ,GAEI,uSCCJ,GAAa,IAAIvE,ICHjB,GACI,8BAGK,MAAM2Q,GACnBnc,YAAYsS,GACVhU,KAAKwP,IAAMwE,EAET/H,WACF,MAAO,OAETwE,QAAQoD,EAAQiK,GACd,MAAMC,EAAW/d,KAAKwP,IAAIwO,MAAM,KAC1B,MAAE9J,GAAUL,GACZ,KAAEoH,GAAS/G,EAAY,KACZlU,KAAKwP,IAAI4E,YAAY6G,EAAKtM,MAAQ,QAC1C8B,QAAQoD,EAAQkK,GACzBD,EAAOpJ,OAAOqJ,GAEhBE,OAAO/J,EAAO4J,GAEZ,MAAM,IAAEI,EAAG,KAAEjD,GAAS/G,EAAY,KAC5BiK,EAAKne,KAAKwP,IAAI4O,MAAMN,EAAQ,KAClCK,EAAGE,KAAOH,EACOle,KAAKwP,IAAI4E,YAAY6G,EAAKtM,MAAQ,QAC1CsP,OAAOhD,EAAMkD,ICnB1B,MAkBA,GAZiB/K,IACf,MAAM5D,EAPuB,CAAC4D,GAAa,IFD7C,MACE1R,YAAY0R,GACVpT,KAAK8E,OAASsO,EACdpT,KAAK+T,IAAM,aGNF,CAACuK,IACZA,EAAMA,GAAO,GACb,IAAIC,EAAK,GACT,KAAOA,EAAGld,OAASid,GACjBC,GAAMrN,KAAKsN,SAASC,SAAS,IAAIzc,UAAU,GAE7C,OAAOuc,EAAGvc,UAAU,EAAGsc,IHAGI,KACxB,GAAWrR,IAAIrN,KAAK+T,IAAK,IAAI7G,KAC7BlN,KAAK2e,YAAc,KAEjBtV,YACF,OAAOyI,EAAIzI,MAETuB,YACF,OAAOkH,EAAIlH,MAEboT,MAAMY,EAAcC,GAClB,MAAM/K,EAAMhC,EAAIrI,cAAcmV,GAS9B,OARIC,GACF/M,EAAIxI,IAAIwK,EAAK,CACXgL,SAAU,WACV9M,IAAK,MACLG,KAAM,MACN4M,UAAW,0BAGRjL,EAETkL,SAASC,GACP,GAAWpf,IAAIG,KAAK+T,KAAK1G,IAAI4R,EAAShT,KAAMgT,GAE9C9K,YAAYN,GACV,OAAO7T,KAAK8E,OAAOqP,YAAYN,GAEjCO,YAAYzF,GACV,MAAMsQ,EAAW,GAAWpf,IAAIG,KAAK+T,KAAKlU,IAAI8O,GAAQ,QACtD,IAAKsQ,EACH,MAAM,IAAI3d,MAAM,yCAAyCqN,MAE3D,OAAOsQ,EAETC,OAAOrL,EAAQ3J,GACb,OAAO2J,EAAO9B,QAAQ5H,cAAcD,GAEtCiV,cAActL,EAAQuL,GAEpB,OADApf,KAAK2e,YAAc9K,EACZ7T,KAAK8E,OAAOua,eAAexL,EAAQuL,GAE5C9V,IAAIpH,EAAIqH,GACNuI,EAAIxI,IAAIpH,EAAIqH,GAEd6U,MAAMlc,EAAIgI,GACR,OAAO4H,EAAI7H,QAAQ/H,EAAIgI,GAEzBoV,aACEtf,KAAK8E,OAAO8Y,eAAe5d,KAAK2e,aAChC3e,KAAK8E,OAAO+N,OAAO7E,KAAKlC,EAAMK,KAAKQ,QAAS,CAC1C4L,SAAS,EACT1E,OAAQ7T,KAAK2e,cAEf3e,KAAK2e,YAAc,OExD+CvL,GAOxDmM,CAAuBnM,GAC7BoM,EAAoB,ILP5B,MACE9d,YAAYsS,GACVhU,KAAKwP,IAAMwE,EAEbvD,QAAQoD,EAAQiK,GAEd,MAAM2B,EAAWzf,KAAKwP,IAAIwO,MAAM,IAChCF,EAAOpJ,OAAO+K,GAEhBxB,OAAO/J,EAAO4J,GACZ,MAAM2B,EAAWzf,KAAKwP,IAAI4O,MAAMN,EAAQ,kBAElC4B,EAAQxL,EAAMrK,KACjBhH,MAAM,MACNC,KAAK+G,GAAS,MAAMA,UACpB8V,KAAK,IACRF,EAAS9b,UAAY+b,EAEvB/B,OAAO9J,GACL,MAAMuL,EAAYpf,KAAKwP,IAAIwO,MAAM,IAAiB,GAE5C4B,EAAW5f,KAAKwP,IAAI4O,MAAMgB,EAAW,aAErC,MAAElL,GAAUL,EAelB,OAdA+L,EAAShf,MAAQsT,EAAMrK,KACvB7J,KAAKwP,IAAIlG,IAAIsW,EAAU,CAAEvb,MAAO,IAAKE,OAAQ,KAC7CvE,KAAKwP,IAAInG,MAAM3B,MAAM0X,GAAYlf,IACF,SAAzBA,EAAE8E,OAAO6B,QAAQgZ,MACnBhM,EAAO+F,aAAa1F,IAClBA,EAAMrK,KAAO+V,EAAShf,MAAMoC,QACrB,KAEThD,KAAKwP,IAAI8P,iBAGbtf,KAAKwP,IAAI2P,cAActL,EAAQuL,GAAWU,MAAK,KAC7CF,EAASzY,WAEJiY,EAELnT,WACF,MAAO,SKlCuCuD,GAChDA,EAAIwP,SAASQ,GACb,MAAMO,EAAoB,IJY5B,MACEre,YAAYsS,GACVhU,KAAKwP,IAAMwE,EAET/H,WACF,MAAO,aAETwE,QAAQoD,EAAQiK,GAEd,MAAMkC,EAAehgB,KAAKwP,IAAIwO,MAAM,IACpCF,EAAOpJ,OAAOsL,GAEhB/B,OAAO/J,EAAO4J,GAEZ,MAAM,KAAExL,EAAI,KAAEzI,GAASqK,EAAM,cAChBlU,KAAKwP,IAAI4O,MAAMN,EAAQ,OAC/B5c,IAAMoR,EACGtS,KAAKwP,IAAI4O,MAAMN,EAAQ,kBAC/BmC,UAAYpW,EAEpBqW,aAAarM,GACXnP,QAAQC,IAAIkP,KIjCkCrE,GAChDA,EAAIwP,SAASe,GACb,MAAMI,EAAmB,IHmB3B,MACEze,YAAYsS,GACVhU,KAAKwP,IAAMwE,EAET/H,WACF,MAAO,YAETwE,QAAQoD,EAAQiK,GAEd,MAAMsC,EAAcpgB,KAAKwP,IAAIwO,MAAM,IACnCF,EAAOpJ,OAAO0L,GAEhBnC,OAAO/J,EAAO4J,GACZ,MAAMuC,EAAOrgB,KAAKwP,IAAI4O,MAAMN,EAAQ,2BACpC9d,KAAKwP,IAAIlG,IAAI+W,EAAM,CAAEhc,MAAO6P,EAAMoM,UAAUhD,KAAM/Y,OAAQ,SAC1D8b,EAAKnf,IAAMgT,EAAMoM,UAAUzV,KAE7B8S,OAAO9J,GACL,MAAM,MAAEK,GAAUL,EAClB,GAAmB,cAAfK,EAAMvF,KACR,MAAM,IAAIrN,MAAM,qCAElB,MAAM,KAAEuJ,EAAI,KAAEyS,GAASpJ,EAAMoM,UAEvBlB,EAAYpf,KAAKwP,IAAIwO,MAAM,IAAiB,GAC5CuC,EAAWvgB,KAAKwP,IAAI4O,MAAMgB,EAAW,SAC3CmB,EAAS3f,MAAQ0c,EACjBtd,KAAKwP,IAAInG,MAAMzB,MACb2Y,GACCrgB,IACC,MAAMU,EAAQV,EAAE8E,OAAOpE,MAAMoC,OAC7BhD,KAAKwP,IAAI5E,MAAMI,OAAOpK,GAAOkf,MAAMU,IACjC3M,EAAO+F,aAAa1F,IAClBA,EAAMoM,UAAUhD,KAAOkD,EACvBxgB,KAAKwP,IAAIlG,IAAImX,EAAQ,CAAEpc,MAAOmc,KACvB,UAIb,SAEF,MAAME,EAAY1gB,KAAKwP,IAAI4O,MAAMgB,EAAW,YAC5Cpf,KAAKwP,IAAInG,MAAM1B,QACb+Y,GACCxgB,IACC,MAAMge,EAAMhe,EAAE8E,OAAOpE,MAAMoC,OAC3BhD,KAAKwP,IAAI5E,MAAMC,KAAKqT,GAAK4B,MAAM5B,IAC7BrK,EAAO+F,aAAa1F,IAClBA,EAAMoM,UAAUzV,KAAOqT,EACvBuC,EAAOvf,IAAMgd,GACN,UAIb,SAEF,MAAMuC,EAASzgB,KAAKwP,IAAI4O,MAAMgB,EAAW,iBACzCpf,KAAKwP,IAAIlG,IAAImX,EAAQ,CACnBpc,MAAOiZ,EACP/Y,OAAQ,SAEVkc,EAAOvf,IAAM2J,EACb,IAAI8V,GAAU,EACd3gB,KAAKwP,IAAInG,MAAM3B,MAAM+Y,GAASvgB,IAC5BygB,GAAWA,EACX,MAAMzN,EAAUyN,EAAU,OAAS,OAC7BC,EAAW5gB,KAAKwP,IAAI4O,MAAMgB,EAAW,cAC3Cpf,KAAKwP,IAAIlG,IAAIsX,EAAU,CAAE1N,QAAAA,IACrByN,IACFD,EAAU9f,MAAQsT,EAAMoM,UAAUzV,SAItC7K,KAAKwP,IAAI2P,cAActL,EAAQuL,GAAWU,MAAK,KAC7Cpb,QAAQC,IAAI,aG7F+B6K,GAC/CA,EAAIwP,SAASmB,GACb,MAAMU,EAAe,IAAIhD,GAAarO,GAEtC,OADAA,EAAIwP,SAAS6B,GACNrR,GEtBHsR,GAAmB,CAACzE,EAAO5K,EAAMsP,EAAQC,KAC7C,GAAI3E,EAAM9V,SAASkL,GACjB,OAEF,MAAMwP,EAAMxP,EAAKwH,YAEjB8H,EAAO3e,IAAI6e,EAAIjQ,GACf+P,EAAO3e,IAAI6e,EAAI5O,IACf0O,EAAO3e,IAAI6e,EAAI7H,GAEf4H,EAAO5e,IAAI6e,EAAIlQ,GACfiQ,EAAO5e,IAAI6e,EAAI7O,IACf4O,EAAO5e,IAAI6e,EAAIxgB,GACXgR,EAAKoD,YAGTpD,EAAKqD,KAAKvR,SAASwR,IACjB+L,GAAiBzE,EAAOtH,EAAOgM,EAAQC,OAGrCnK,GAAOqK,GAAMhQ,KAAK2F,IAAIqK,GACtBC,GAAM,CAACC,EAAQH,EAAKpH,IACjBuH,EAAOC,QAAO,CAACF,EAAK3f,KACzB,MAAM0f,EAAID,EAAIpH,GAAOsH,EACf/H,EAAI6H,EAAIpH,GAAOrY,EACrB,OAAOqV,GAAIqK,IAAMrK,GAAIuC,GAAK+H,EAAM3f,IAC/B4f,EAAO,IAENE,GAAeC,GACnBA,EAAKF,QACH,CAACG,EAAQC,EAAKjU,IAASqJ,GAAI4K,GAAO5K,GAAI0K,EAAKC,IAAWhU,EAAMgU,GAC5D,GAEEE,GAAc,CAAClS,EAAKsD,EAAI+G,KAC5BrK,EAAIoG,YAAc9C,EAAG6O,KAAK1M,MAAM4E,GAChCrK,EAAImG,UAAY7C,EAAG6O,KAAKtd,OAAS,GAC7ByO,EAAG6O,KAAKC,MACVpS,EAAIqS,YAAY/O,EAAG6O,KAAKC,OAGb,MAAME,GAKnBpgB,YAAYmR,GACV7S,KAAK6S,OAASA,EAEhBkP,OAAOC,EAAU3F,GACf,IAAKA,GAA0B,IAAjBA,EAAMhb,SAAiBrB,KAAK6S,OAAOoP,YAC/C,OAEF,MAAMC,EAAS,IAAIlV,IACbmV,EAAS,IAAInV,IACnBhN,KAAKoiB,YAAc,IAAI/F,GACvByE,GAAiBzE,EAAO2F,EAAUG,EAAQD,EAAQliB,KAAK6S,OAAO/B,OAC9D9Q,KAAKqiB,MAAQ,CAAEF,OAAAA,EAAQD,OAAAA,GAEzBI,UACEtiB,KAAKkF,SAAW,KAChBlF,KAAKqiB,MAAQ,KACbriB,KAAKyR,KAAO,KAEd8Q,UACE,IAAKviB,KAAKqiB,OAA+B,IAAtBriB,KAAKqiB,MAAMhhB,OAC5B,OAEF,MAAM,GAAEyR,GAAO9S,KAAK6S,OACdpB,EAAOzR,KAAKoiB,YAAY,GACxBI,EAAQ1P,EAAG6O,KAAKa,MAChBb,EAAO7O,EAAG6O,KAAKa,MACf1d,EAAS9E,KAAK6S,OAAO+F,YAC3B9T,EAAOwL,QAEP,MAAM2Q,EAAMxP,EAAKwH,YACXiJ,EAAS,IAAIliB,KAAKqiB,MAAMH,OAAO/F,UAAUlZ,QAC5C8N,GACCG,KAAK2F,IAAIoK,EAAIlQ,EAAIA,IAAMyR,GACvBtR,KAAK2F,IAAIoK,EAAIxgB,EAAIsQ,IAAMyR,GACvB3L,GAAIoK,EAAI7O,GAAKrB,IAAMyR,IAEjBL,EAAS,IAAIniB,KAAKqiB,MAAMF,OAAOhG,UAAUlZ,QAC5C+N,GACCE,KAAK2F,IAAIoK,EAAIjQ,EAAIA,IAAMwR,GACvBtR,KAAK2F,IAAIoK,EAAI7H,EAAIpI,IAAMwR,GACvBtR,KAAK2F,IAAIoK,EAAI5O,GAAKrB,IAAMwR,IAGtBC,EAAQ,CAAE1R,EAAG,EAAGC,EAAG,GACzB,GAAIkR,EAAO7gB,OAAS,EAAG,CACrB,MAAMqhB,EAAOvB,GAAIe,EAAQjB,EAAK,KACxB0B,EAAOxB,GAAIe,EAAQjB,EAAK,MACxB2B,EAAOzB,GAAIe,EAAQjB,EAAK,KACxBM,EAAO,CAACoB,EAAO1B,EAAI7O,GAAIsQ,EAAOzB,EAAIlQ,EAAG6R,EAAO3B,EAAIxgB,GAChD+M,EAAM8T,GAAYC,GACpB1K,GAAI0K,EAAK/T,KAASmU,IACpBc,EAAM1R,EAAIwQ,EAAK/T,IAEbxN,KAAK6S,OAAOoP,aACdnd,EAAO+d,WAAW,CAACH,EAAMC,EAAMC,IAAQpT,GACrCkS,GAAYlS,EAAKsD,EAAI,cAK3B,GAAIqP,EAAO9gB,OAAS,EAAG,CACrB,MAAMyhB,EAAO3B,GAAIgB,EAAQlB,EAAK,KACxB0B,EAAOxB,GAAIgB,EAAQlB,EAAK,MACxB8B,EAAO5B,GAAIgB,EAAQlB,EAAK,KAExBM,EAAO,CAACoB,EAAO1B,EAAI5O,GAAIyQ,EAAO7B,EAAIjQ,EAAG+R,EAAO9B,EAAI7H,GAChD5L,EAAM8T,GAAYC,GACpB1K,GAAI0K,EAAK/T,KAASmU,IACpBc,EAAMzR,EAAIuQ,EAAK/T,IAEbxN,KAAK6S,OAAOoP,aACdnd,EAAOke,WAAW,CAACF,EAAMH,EAAMI,IAAQvT,GACrCkS,GAAYlS,EAAKsD,EAAI,gBAK3B9S,KAAKoiB,YAAY7e,SAAS0f,IACxB,MAAM3V,EAAM2V,EAAKrR,SACjBtE,EAAIyD,GAAK0R,EAAM1R,EACfzD,EAAI0D,GAAKyR,EAAMzR,EACfiS,EAAKnJ,UAAUxM,OC5HrB,MAAM4V,GAASC,GAAMA,EACfC,GAAY,CAACC,EAAYC,EAASC,KACtC,MAAMC,EAAcF,EAAQG,cAAcF,EAAWF,GAKrD,OAJkBA,EAAWK,WAAWJ,EAAQrX,MACtC1I,SAASogB,IACjBP,GAAUC,EAAYM,EAAUL,MAE3BE,GAKT,MAAMI,GACJliB,YAAYuK,EAAM4X,EAAcC,EAAY7W,GAC1CjN,KAAKiM,KAAOA,EACZjM,KAAK6jB,aAAeA,EACpB7jB,KAAK8jB,WAAaA,EAClB9jB,KAAKiN,UAAYA,EAEnBwW,cAAcF,EAAWF,GACvB,IAAIU,EAAWR,EAAYvjB,KAAKiN,UAAU8W,SAAW,KACrD,OAAO/jB,KAAK6jB,aAAa/gB,KAAI,CAACkhB,EAAUvM,KACtC,MAAM5E,EAAS,CAAEmR,SAAAA,EAAUlP,KAAM,KAC3B,MAAEZ,GAAUlU,KAAKiN,UAIvB,GAHA4F,EAAOqB,MACY,mBAAVA,EAAuBA,EAAM8P,GAAYC,EAAMzY,SAAS0I,GAE7D6P,EAAU,CACZ,MAAMpP,EAASoP,EAASC,EAAUT,EAAUM,cACtCK,EAAeb,EAAWc,KAAKtkB,IAAI8U,GACzC9B,EAAOrF,IAAM0W,EAAapP,KAAKzT,OAC/B6iB,EAAapP,KAAKwC,KAAKzE,GAEzB,MAAM,KAAEgG,GAAS7Y,KAAKiN,UAetB,OAbE4F,EAAOgG,KADW,mBAATA,EACKA,EAAKmL,EAAUnR,EAAOrF,KACX,iBAATqL,EACFoL,EAAMzY,SAASqN,GAEf,CAAE9H,EAAG,EAAGC,EAAG,GAQ3BqS,EAAWc,KAAK9W,IAAI2W,EAAUnR,GACvBA,MAIE,MAAMuR,GACnB1iB,cACE1B,KAAKqkB,SAAW,IAAInX,IACpBlN,KAAKskB,SAAW,KAChBtkB,KAAKmkB,KAAO,IAAIjX,IAElBnO,KAAKwlB,EAAUP,EAAU1e,GACvB,MAAMkf,EAAW,GAUjB,OATKlf,EAIHkf,EAASlN,KAAK0M,IAHd1e,EAAS0e,EACTQ,EAASlN,KAAK,KAIKhS,EAAOmf,QAC5BzkB,KAAKskB,SAAWC,EAChBjf,EAAOye,SAAWb,GACXljB,KAAKsjB,QAAQiB,EAAUC,EAAUlf,GAE1Coe,WAAWI,GACT,MAAO,IAAI9jB,KAAKqkB,SAASlI,UAAUlZ,QAChCyhB,GAASA,EAAKZ,aAAeA,IAGlCR,QAAQiB,EAAUV,EAAcve,GAC9B,MAAM2H,EAAY,GAClBA,EAAU8W,SAAWze,EAAOye,UAAYb,GACxCjW,EAAUiH,MAAQ5O,EAAO4O,OAASgP,GAClCjW,EAAU4L,KAAOvT,EAAOuT,KACxB,MAAMlK,EAAO4V,EAASvhB,OACtB,GAAIhD,KAAKqkB,SAAStH,IAAIpO,GACpB,MAAM,IAAIrN,MAAM,qCAAqCijB,MAEvD,MAAMjB,EAAU,IAAIM,GAAQjV,EAAMkV,EAAcve,EAAOqP,OAAQ1H,GAE/D,OADAjN,KAAKqkB,SAAShX,IAAIsB,EAAM2U,GACjBtjB,KAETsb,QACE,MAAMqJ,EAAU3kB,KAAKqkB,SAASxkB,IAAIG,KAAKskB,UAEvC,OADoBlB,GAAUpjB,KAAM2kB,GACjB,ICnDvB,MCzCMC,GAAa,CAACC,EAAQhR,KAC1BgR,EAAOxX,IAAIwG,EAAQA,EAAOoG,UAC1BpG,EAAOiB,KAAKvR,SAASkX,GAAYmK,GAAWC,EAAQpK,MAGtD,MAAMqK,GACJpjB,YAAYmS,EAAQgR,GAClB7kB,KAAKyR,KAAOoC,EACZ7T,KAAKwX,IAAM3D,EAAOoG,SAClBja,KAAK6Z,IAAM,IDIf,MACEnY,YAAYmS,GACV7T,KAAKyR,KAAOoC,EACZ7T,KAAK+kB,KAAO,KACZ/kB,KAAK0Q,UAEHsU,iBACF,MAAM,EAAEjU,GAAM/Q,KAAKyR,KACnB,OAAOV,GAAK,GAAK,EAAI,EAEnBkU,eACF,MAAM,EAAEjU,GAAMhR,KAAKyR,KACnB,OAAOT,GAAK,GAAK,EAAI,EAEvB0K,QAAQwJ,GACN,MAAM,IAAErL,EAAG,IAAErC,GA1BD,CAAC0N,GACX,OAASA,EACJ,CAAErL,IAAK,aAAcrC,IAAK,EAAE,EAAG,IAC7B,OAAS0N,EACX,CAAErL,IAAK,aAAcrC,IAAK,CAAC,GAAI,IAC7B,OAAS0N,EACX,CAAErL,IAAK,WAAYrC,IAAK,EAAE,EAAG,IAC3B,OAAS0N,EACX,CAAErL,IAAK,WAAYrC,IAAK,CAAC,GAAI,SAD/B,EAmBgBtT,CAAQghB,GACvBC,EAAMnlB,KAAK6Z,GACjB,OAAO7Z,KAAK+kB,KAAKlL,KAASrC,EAAI,IAAM2N,IAAQ3N,EAAI,GAElD9G,UACE,MAAM,EAAEK,EAAC,EAAEC,GAAMhR,KAAKyR,KACtBzR,KAAK+kB,KAAO,CACVC,WAAYjU,GAAK,GAAK,EAAI,EAC1BkU,SAAUjU,GAAK,GAAK,EAAI,KC3BD6C,GACzB+Q,GAAWC,EAAQhR,IAGR,MAAMuR,GACnB1jB,cACE1B,KAAK0Q,QAAU,IAAIxD,IACnBlN,KAAK6kB,OAAS,IAAI3X,IAEpBmY,WAAWhJ,GACTA,EACGpZ,QAAQwO,IAAUA,EAAKgD,WACvBlR,SAASkO,IACRzR,KAAK0Q,QAAQrD,IAAIoE,EAAM,IAAIqT,GAAQrT,EAAMzR,KAAK6kB,YAGpDS,YAAYpgB,GACV,IAAK,IAAIwL,KAAW1Q,KAAK0Q,QAAQyL,SAC/BjX,EAASwL,GAGb6U,kBACE,IAAI7J,EAAU,GAMd,OALA1b,KAAK6kB,OAAOthB,SAAQ,CAACiU,EAAK3D,KACpB2D,EAAIzG,IAAM8C,EAAO9C,GAAKyG,EAAIxG,IAAM6C,EAAO7C,GACzC0K,EAAQpE,KAAKzD,MAGV6H,EAETpL,QACEtQ,KAAK0Q,QAAQJ,QACbtQ,KAAK6kB,OAAOvU,SC9BhB,MAAMkV,GAAa,CAAC3S,EAAQgB,KAC1B,MAAMjN,EAAIiN,EAAOhB,OAAOgG,KAClBA,EAAO,CACX9H,EAAGnK,EAAEmK,EACLC,EAAGpK,EAAEoK,GAEH6C,EAAOY,WACToE,EAAK9H,EAAI8B,EAAOC,GAAGlB,OAAOb,EAC1B8H,EAAK7H,EAAI6B,EAAOC,GAAGlB,OAAOZ,GAExBpK,EAAEkS,SACJD,EAAKC,OAASlS,EAAEkS,QAEdlS,EAAEgR,OACJiB,EAAKjB,KAAOhR,EAAEgR,MAEhB,MAAM9C,EAAO,GAIb,OAHAjB,EAAOiB,KAAKvR,SAASkX,IACnB3F,EAAKwC,KAAKkO,GAAW3S,EAAQ4H,OAExB,CACLvG,MAAOL,EAAOK,MACd2E,KAAAA,EACA/D,KAAAA,IAGE2Q,GAAc,CAACC,EAAKjU,EAAMkU,GAAY,KAC1ClU,EAAKgI,UACDkM,GACFlU,EAAKqD,KAAKvR,SAASqiB,IACjBH,GAAYC,EAAKE,OAIjBC,GAAmB,CAAChS,EAAQlJ,EAAQkI,KACxC,MAAMzK,EAAYyK,EAAOwI,mBAAmBxH,GAC5C/B,EAAI3J,MAAMwC,GAAQkJ,EAAO9B,QAAS3J,GAClCyL,EAAOiB,KAAKvR,SAASkX,GAAYoL,GAAiBpL,EAAS9P,EAAQkI,MAErE,MAAMiT,GAKJpkB,YAAYmR,GACV7S,KAAK6S,OAASA,EACdA,EAAO4J,UAAY,IAAMzc,KAEzBA,KAAK8E,OAAS,I3B8JlB,MACEpD,YAAYmR,GA7EK,IAACO,EA8EhBpT,KAAK6S,OAASA,EACd7S,KAAKgT,UAhJiB,CAACI,IACzB,MAAM,GAAElR,EAAE,GAAE4Q,GAAOM,EAASP,OACtBxO,EAAQyO,EAAGzO,OAAS,IACpBE,EAASuO,EAAGvO,QAAU,IAC5B,IAAIiN,EAAWM,EAAI7H,QAAQ/H,EAAI,8BAQ/B,OAPKsP,IACHA,EAAWM,EAAIrI,cAAcC,EAAS8H,SAAU,IAChDtP,EAAGwS,OAAOlD,IAEZM,EAAIrO,KAAK+N,EAAU,WAAY,KAC/BM,EAAIxI,IAAIkI,EAAU,CAAEnN,MAAAA,EAAOE,OAAAA,IAEpBiN,GAoIYuU,CAAkB/lB,MACnCmT,EAAiBnT,MAEjBA,KAAKgmB,YAlFW5S,EAkFapT,KAjFxB,IAAIuQ,EAAW,CACpBX,OAAS1N,IACP,MAAMwjB,EAAMtS,EAASP,OAAO4J,YAC5B,GAAI3K,EAAIzP,QAAQH,EAAI,yBAClB,OAAO,EAET,GAAI4P,EAAI1H,GAAGlI,EAAI,yBAKb,OAJAkR,EAAS4S,WAAWtV,QAClB,U4BtJqB,CAAC0C,IAAa,CAC3ChF,WAAalO,IACX,MAAM,OAAE8E,GAAW9E,EAAE2P,cACfoW,EAASjhB,GAET,MAAE8L,IADIsC,EAASP,OAAO4J,YACVrJ,EAASP,QAC3BO,EAAS4S,WAAWtV,QAAQ,SAAUuV,IAExC5X,SAAWnO,IACT,MAAM,GAAE8P,EAAE,GAAEC,GAAO/P,EACb+lB,EAAS7S,EAAS4S,WAAWrV,QAAQ,UAC3CmB,EAAIxI,IAAI2c,EAAQ,CACdlH,UAAW,yBAAyB/O,SAAUC,UAGlD3B,UAAW,KACT,MAAM2X,EAAS7S,EAAS4S,WAAWrV,QAAQ,UACrCkB,EAAOC,EAAItH,QAAQyb,GACnB7T,EAAKP,EAAKd,EAAIc,EAAKxN,MAAQ,EAC3BgO,EAAKR,EAAKb,EAAIa,EAAKtN,OAAS,EAClCuN,EAAIxI,IAAI2c,EAAQ,CACdlH,UAAW,uBAEb,MAAMmH,EAAgB9S,EAAS+S,WAAW/T,EAAIC,GAC9C,GAAI6T,EAAe,CACjB,MACM7J,EADMjJ,EAASP,OAAO4J,YACV2J,mBAEhB/J,EAAMpZ,QAAQ8R,GAAUmR,EAAcxM,eAAe3E,KAAQ1T,OAAS,GAI1D+R,EAASP,OAAO4J,YACxB4J,UAAUH,EAAe7J,GAAO,O5BsHlC,CAAuBjJ,KAElB,EACF,GAAItB,EAAIzP,QAAQH,EAAI,cACzB,OAAO,EACF,GAAI4P,EAAI1H,GAAGlI,EAAI,UAEpB,OADAkR,EAAS4S,WAAWtV,QAAQ,UF1JT,CAAC0C,IAAa,CACvChF,WAAalO,IACXkT,EAAS4S,WAAWtV,QAAQ,SAAU0C,EAASP,OAAOyT,cAExDjY,SAAWnO,IACT,MAAM,GAAE8P,EAAE,GAAEC,GAAO/P,EACnBkT,EAAS4S,WAAWtV,QAAQ,WAAW,GACvC,MAAMkB,EAASwB,EAAS4S,WAAWrV,QAAQ,UAC3CyC,EAASP,OAAO7E,KAAKlC,EAAMC,KAAKC,SAAU,CACxCua,MAAO,OACP3U,OAAQ,CACNb,EAAGa,EAAOb,EAAIf,EACdgB,EAAGY,EAAOZ,EAAIf,MAIpB3B,UAAYpO,IAEV,MAAM,GAAE8P,EAAE,GAAEC,GAAO/P,EAEb0R,EAASwB,EAAS4S,WAAWrV,QAAQ,UAC3CyC,EAASP,OAAO7E,KAAKlC,EAAMC,KAAKC,SAAU,CACxCua,MAAO,OACP3U,OAAQ,CACNb,EAAGa,EAAOb,EAAIf,EACdgB,EAAGY,EAAOZ,EAAIf,KAGFmD,EAAS4S,WAAWrV,QAAQ,YAE1CyC,EAASP,OAAO7E,KAAKlC,EAAME,SAASc,YE4HK,CAAmBsG,KACnD,EACF,GAAItB,EAAI1H,GAAGlI,EAAI,aAAc,CAClC,MAAMskB,EAAStkB,EAAG2E,QAAQkN,IAI1B,OAHAX,EAAS4S,WAAWtV,QAAQ,U6B7Jb,CAAC0C,IAAa,CACnChF,WAAalO,IACX,MAAM,OAAE8E,GAAW9E,EAAE2P,cAEf2W,EADS1U,EAAIzP,QAAQ2C,EAAQ,aACb6B,QAAQkN,IAC9BX,EAAS4S,WAAWtV,QAAQ,SAAU8V,GACtC,MACM/U,EADM2B,EAASP,OAAO4J,YACXgK,UAAUhV,GAASA,EAAKsC,MAAQyS,IACjDpT,EAASP,OAAO7E,KAAKlC,EAAMK,KAAKO,SAAU,CACxC+E,KAAAA,EACAiD,OAAQxU,EAAE2P,cAAcjK,WAE1BwN,EAASP,OAAO7E,KAAKlC,EAAMC,KAAKI,KAAM,CACpCqa,OAAAA,EACAD,MAAO,QACPvhB,OAAQ9E,EAAE2P,cAAcjK,SAAW,WAAa,MAChDmL,EAAG,EACHC,EAAG,KAGP3C,SAAWnO,IACT,MAAM,GAAE8P,EAAE,GAAEC,GAAO/P,EACbsmB,EAASpT,EAAS4S,WAAWrV,QAAQ,WACrC,MAAEG,GAAUsC,EAASP,OAE3BO,EAASP,OAAO7E,KAAKlC,EAAMC,KAAKI,KAAM,CACpCqa,OAAAA,EACAD,MAAO,OACPvhB,OAAQ9E,EAAE2P,cAAcjK,SAAW,WAAa,MAChDmL,EAAGf,EAAKc,EACRE,EAAGf,EAAKa,KAGZxC,UAAYpO,IAEV,MAAM,GAAE8P,EAAE,GAAEC,GAAO/P,EAEbsmB,EAASpT,EAAS4S,WAAWrV,QAAQ,WACrC,MAAEG,GAAUsC,EAASP,OAE3BO,EAASP,OAAO7E,KAAKlC,EAAMC,KAAKI,KAAM,CACpCqa,OAAAA,EACAD,MAAO,OACPvhB,OAAQ9E,EAAE2P,cAAcjK,SAAW,WAAa,MAChDmL,EAAGf,EAAKc,EACRE,EAAGf,EAAKa,O7BgHiC,CAAesC,IACtDA,EAAS4S,WAAWtV,QAAQ,SAAU8V,GACtCpT,EAAS4S,WAAWtV,QAAQ,UAAWgV,EAAIjI,cACpC,EAEP,OAAO,GAGXrP,WAAalO,IACKkT,EAAS4S,WAAWrV,QAAQ,WACpCvC,WAAWlO,IAErBmO,SAAWnO,IACOkT,EAAS4S,WAAWrV,QAAQ,YAE1ByC,EAAS4S,WAAWrV,QAAQ,WACpCtC,SAASnO,IAGrBoO,UAAYpO,IACMkT,EAAS4S,WAAWrV,QAAQ,YAE1ByC,EAAS4S,WAAWrV,QAAQ,WACpCrC,UAAUpO,OAwCtB,IAAIwmB,EAAQ,KAKZ1mB,KAAK2mB,eAAiB,IAAIC,gBAJV,KACdnX,aAAaiX,GACbA,EAAQvY,WAAWgF,EAAkB,IAAKnT,SAG5CA,KAAK2mB,eAAeE,QAAQ7mB,KAAKgT,WACjChT,KAAK2T,cAAgB,KAEnBN,cACF,OAAOrT,KAAKgT,UAAU7I,cAAc,UAElC2c,cACF,OAAO9mB,KAAKgT,UAAU7I,cAAc,cAElC2G,YACF,OAAO9Q,KAAK6S,OAAO/B,MAErB0C,aACE,OAAOxT,KAAK0T,KAEdX,kBACE,MAAM7Q,EAAKlC,KAAK8mB,QAEhB,MAAO,CAAE/V,EAAG7O,EAAG6kB,WAAY/V,EAAG9O,EAAG8kB,WAEnCC,eACE,MAAM/kB,EAAKlC,KAAKqT,QAChB,MAAO,CAAEhP,MAAOnC,EAAGoR,YAAa/O,OAAQrC,EAAGqR,cAE7CiB,OAAOtK,GACL,OAAOlK,KAAKgT,UAAU7I,cAAcD,GAEtCgd,QAAQlX,EAAIC,GACV,MAAM2B,EAAS5R,KAAK6S,OAAOyT,YAC3B1U,EAAOb,GAAKf,EACZ4B,EAAOZ,GAAKf,EACZjQ,KAAK6S,OAAOiH,UAAUlI,GACtB5R,KAAKmnB,oBAEPhB,WAAWpV,EAAGC,GACZ,MAAMoW,EAAapnB,KAAK8mB,QAAQO,iBAAiB,aACjD,IAAI/c,EAAQ,KACZ,IAAK,IAAI5E,EAAI,EAAGA,EAAI0hB,EAAW/lB,OAAQqE,IAAK,CAC1C,MAAMmM,EAAOC,EAAItH,QAAQ4c,EAAW1hB,IACpC,GACEmM,EAAKM,MAAQpB,GACbc,EAAKI,OAASlB,GACdc,EAAKG,KAAOhB,GACZa,EAAKK,QAAUlB,EACf,CACA1G,EAAQ8c,EAAW1hB,GACnB,OAGJ,IAAK4E,EACH,OAAO,KAET,MAAMob,EAAM1lB,KAAK6S,OAAO4J,YAClB6K,EAASxV,EAAIzP,QAAQiI,EAAO,aAElC,OADaob,EAAIe,UAAUhV,GAASA,EAAKsC,MAAQuT,EAAOzgB,QAAQkN,MAGlEyB,SAAS4L,EAAQjc,GACf,MAAMqK,EAAMxP,KAAKwT,aACjB9T,OAAO+F,KAAKN,GAAW,IAAI5B,SAAS/D,IAClC,MAAMuD,EAAMoC,EAAQ3F,GACpBgQ,EAAIhQ,GAAOuD,KAEb,IAAIkT,EAAImL,EAAO,GACfA,EAASA,EAAOmG,MAAM,GAEtB,MAAM3V,EAAS5R,KAAK+S,kBACpBvD,EAAIgY,YACJhY,EAAIiY,OAAO7V,EAAOb,EAAIkF,EAAElF,EAAGa,EAAOZ,EAAIiF,EAAEjF,GACxCoQ,EAAO7d,SAASrD,IACdsP,EAAIkY,OAAO9V,EAAOb,EAAI7Q,EAAE6Q,EAAGa,EAAOZ,EAAI9Q,EAAE8Q,MAE1CxB,EAAImY,SAENxR,UAAUF,EAAG/V,EAAGoF,GACd,MAAMsiB,EAAQ1W,KAAK2W,MAChB5R,EAAElF,EAAI7Q,EAAE6Q,IAAMkF,EAAElF,EAAI7Q,EAAE6Q,IAAMkF,EAAEjF,EAAI9Q,EAAE8Q,IAAMiF,EAAEjF,EAAI9Q,EAAE8Q,IAE/CH,EAASvL,EAAOuL,OAEhBC,EADS8W,EAAQtiB,EAAO+Q,MACPuR,EACjBE,EAAMC,EAAY9R,EAAG/V,EAAG2Q,EAAQ,CAAEC,MAAAA,IAClCkX,EAAMD,EAAY7nB,EAAG+V,EAAGpF,EAAQ,CAAEC,MAAAA,IAClCc,EAAS5R,KAAK+S,kBACdvD,EAAMxP,KAAKwT,aACjB9T,OAAO+F,KAAKH,EAAOgR,OAAS,IAAI/S,SAAS/D,IACvC,MAAMuD,EAAMuC,EAAOgR,MAAM9W,GACzBgQ,EAAIhQ,GAAOuD,KAEbyM,EAAIgY,YACJhY,EAAIiY,OAAO7V,EAAOb,EAAIkF,EAAElF,EAAGa,EAAOZ,EAAIiF,EAAEjF,GACxCxB,EAAIyY,cACFrW,EAAOb,EAAI+W,EAAI/W,EACfa,EAAOZ,EAAI8W,EAAI9W,EACfY,EAAOb,EAAIiX,EAAIjX,EACfa,EAAOZ,EAAIgX,EAAIhX,EACfY,EAAOb,EAAI7Q,EAAE6Q,EACba,EAAOZ,EAAI9Q,EAAE8Q,GAEfxB,EAAImY,SAEN7Q,eAAeb,EAAG/V,EAAGoF,GACnB,MAAMkK,EAAMxP,KAAKwT,aACjB9T,OAAO+F,KAAKH,EAAOgR,OAAS,IAAI/S,SAAS/D,IACvC,MAAMuD,EAAMuC,EAAOgR,MAAM9W,GACzBgQ,EAAIhQ,GAAOuD,KAEb,MAAO+kB,EAAKE,GAAO1iB,EAAOyR,QACpBnF,EAAS5R,KAAK+S,kBACpBvD,EAAIgY,YACJhY,EAAIiY,OAAO7V,EAAOb,EAAIkF,EAAElF,EAAGa,EAAOZ,EAAIiF,EAAEjF,GACxCxB,EAAIyY,cACFrW,EAAOb,EAAI+W,EAAI/W,EACfa,EAAOZ,EAAI8W,EAAI9W,EACfY,EAAOb,EAAIiX,EAAIjX,EACfa,EAAOZ,EAAIgX,EAAIhX,EACfY,EAAOb,EAAI7Q,EAAE6Q,EACba,EAAOZ,EAAI9Q,EAAE8Q,GAEfxB,EAAImY,SAEN9E,WAAWqF,EAAS5iB,GAClB,MAAM6iB,EAAInoB,KAAKgT,UAAUO,aACnB/D,EAAMxP,KAAKwT,aACjBhE,EAAI4Y,OACkB,mBAAX9iB,GACTA,EAAOkK,GAETA,EAAIgY,YACJ,MAAM5V,EAAS5R,KAAK+S,kBACpBmV,EAAQ3kB,SAASwN,IACfvB,EAAIiY,OAAO7V,EAAOb,EAAIA,EAAG,GACzBvB,EAAIkY,OAAO9V,EAAOb,EAAIA,EAAGoX,MAE3B3Y,EAAImY,SACJnY,EAAI6Y,YACJ7Y,EAAI8Y,UAENtF,WAAWuF,EAASjjB,GAClB,MAAMkjB,EAAIxoB,KAAKgT,UAAUM,YACnB9D,EAAMxP,KAAKwT,aACjBhE,EAAI4Y,OACkB,mBAAX9iB,GACTA,EAAOkK,GAETA,EAAIgY,YACJ,MAAM5V,EAAS5R,KAAK+S,kBACpBwV,EAAQhlB,SAASyN,IACfxB,EAAIiY,OAAO,EAAG7V,EAAOZ,EAAIA,GACzBxB,EAAIkY,OAAOc,EAAG5W,EAAOZ,EAAIA,MAE3BxB,EAAImY,SACJnY,EAAI6Y,YACJ7Y,EAAI8Y,UAENhY,QACE,MAAM2Q,EAAMjhB,KAAKinB,eACXzX,EAAMxP,KAAKwT,aACjBhE,EAAIiZ,UAAY,QAChBjZ,EAAIkZ,SAAS,EAAG,EAAGzH,EAAI5c,MAAO4c,EAAI1c,QAKpC4iB,oBACE,MAAMwB,EAAa3oB,KAAK6S,OAAOyT,aACzB,MAAExV,GAAU9Q,KAAK6S,OACvBf,EAAIxI,IAAItJ,KAAK8mB,QAAS,CACpB9U,IAAK,cAAc2W,EAAW3X,OAC9BmB,KAAM,cAAcwW,EAAW5X,OAC/BgO,UAAW,SAASjO,OAElB9Q,KAAK2T,eACP3T,KAAK2T,cAAchB,KAAK3S,MAG5B4a,SAAS/G,GAEP,MAAM,OAAEc,GAAWd,EACL/B,EAAI7H,QAAQ0K,EAAOb,IAAK,aAChCY,OAAOb,EAAOC,KAEtB8U,cAAcvM,GACZ,IAAKA,GAA0B,IAAjBA,EAAMhb,OAClB,OAEFrB,KAAKgd,gBACL,MAAM6L,EAAQxM,EAAMvZ,KAAKmI,GAAM,IAAI0G,EAAS1G,EAAGjL,KAAK8Q,SACpD9Q,KAAK2T,cAAgBkV,EAAMxH,QAAO,CAACyH,EAAKjX,IAASiX,EAAIvW,MAAMV,IAAOgX,EAAM,IACxE7oB,KAAK2T,cAAchB,KAAK3S,MAE1Bgd,gBACMhd,KAAK2T,gBACP3T,KAAK2T,cAAcrD,MAAMtQ,MACzBA,KAAK2T,cAAgB,MAGzBqH,SAASnH,GACFA,EAAOC,KACVF,EAAgB5T,KAAM6T,GAExB,MAAM,IAAEE,GAAQF,EAEVG,GADSlC,EAAI7H,QAAQjK,KAAK8mB,QAAS,cAAc/S,OAC9B/T,KAAK6S,OAAOoB,oBAE/B,MAAEC,GAAUL,EACZlF,EAAOuF,EAAMvF,MAAQ,OACNqF,EAAiBI,YAAYzF,GACrCsP,OAAOpK,EAAOK,MAAOlU,KAAKmU,YAAYN,GAASA,GAE9DwL,eAAexL,EAAQuL,GACrB,MAAM,IAAErL,GAAQF,EAMhB,OALe7T,KAAK8mB,QAAQ3c,cAAc,aAAa4J,MAChDW,OAAO0K,GAGdA,EAAUvY,QAAQkiB,cAAgB,GAC3B,IAAI9kB,SAAS+kB,IAClB7a,WAAW6a,MAGfpL,eAAe/J,GACb,MAAM,IAAEE,GAAQF,EACVyT,EAAStnB,KAAK8mB,QAAQ3c,cAAc,aAAa4J,MACjDkV,EAAUnX,EAAI7H,QAAQqd,EAAQ,yBAChC2B,GACFA,EAAQ5gB,SAEVyJ,EAAI7H,QAAQqd,EAAQ,aAAangB,QAEnC+hB,aAAarV,GACXD,EAAgB5T,KAAM6T,GAGxBsV,eAAetV,GA1US,EAACT,EAAUS,KACnC,IAAKA,EAAOC,IACV,MAAM,IAAIxS,MAAM,4CAA4CuS,EAAOE,QAErEF,EAAOC,IAAIzL,gBACJwL,EAAOC,KAsUZsV,CAAkBppB,EAAM6T,GACxB7T,KAAKgd,gBAEPqM,mBAAmBxV,GACjB,MAAMX,EAAUW,EAAOgB,WAAa,OAAS,GAC7ChB,EAAOiB,KAAKvR,SAASqiB,IACnBhR,EAAcgR,EAAW1S,MAE3B,MAAMoU,EAASxV,EAAI7H,QAAQjK,KAAK8mB,QAAS,cAAcjT,EAAOE,SAC9D,GAAIF,EAAOgB,WAAY,CACrB,MAAMhD,EAAOC,EAAItH,QAAQqJ,EAAO9B,SAC1BuX,EAAYxX,EAAIrI,cAAcC,EAASgI,eAAgB,IAC7DI,EAAIxI,IAAIggB,EAAW,CACjBjlB,MAAO,GACPE,OAAQ,GACRwa,UAAW,aAAalN,EAAKxN,MAAQ,aACrC6T,OAAQ,IAEVoP,EAAO5S,OAAO4U,GACdxX,EAAIzI,MAAM3B,MAAM4hB,GAAYppB,IAC1BA,EAAE6G,kBACF8M,EAAOkH,YAAW,WAGpBjJ,EAAI7H,QAAQqd,EAAQ,mCAAmCjf,SAG3D8L,YAAYN,GACV,IAAIyT,EAASzT,EAAOC,IAKpB,OAHKwT,IACHA,EAAS1T,EAAgB5T,KAAM6T,IAE1ByT,EAAOnd,cAAc,e2BvbD0I,GAC3BA,EAAO+F,UAAY,IAAM5Y,KAAK8E,OAE9B9E,KAAKupB,qBAAuB9X,GAAqBzR,KAAK8E,QACtD+N,EAAOoB,gBAAkB,IAAMjU,KAAKupB,qBAEpCvpB,KAAKwpB,mBAAqB5W,GAA+B,EAAQC,GACjE7S,KAAKypB,WAAa,IAAIlM,GAAY1K,GAClC7S,KAAK0pB,YAAc,IAAI,GAAY7W,GACnC7S,KAAK2pB,YAAc,IAAIvE,GAEvBplB,KAAK6S,OAAOjF,OAAO9B,EAAMC,KAAKC,UAAW9L,IAKvC,GAJAF,KAAK6S,OAAOiH,UAAU5Z,EAAE0R,QAExB5R,KAAK8E,OAAOqiB,oBACZnnB,KAAK2X,OAAO8B,UACI,SAAZvZ,EAAEqmB,MAAkB,CACtBvmB,KAAK4pB,OAAO5P,OAAO9Z,EAAE0R,OAAOb,EAAG7Q,EAAE0R,OAAOZ,GACxC,IACEhR,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKM,QAAQF,OAAQ,CAC1C8P,MAAO,CAACrc,KAAK4pB,QACbjb,KAAM,QAER,QACA3O,KAAK4pB,OAAO5P,OAAO,EAAG,QAK5Bha,KAAK6S,OACFjF,OAAO9B,EAAMC,KAAKI,MAAOjM,IACxB,GAAgB,UAAZA,EAAEqmB,MAAmB,CACvB,MAAMlK,EAAQrc,KAAKwpB,mBAAmB3M,WAIhCgN,EACS,QAAb3pB,EAAE8E,OAAmBqX,EAAQA,EAAMyN,SAASrY,GAASA,EAAKqD,OAE5D9U,KAAK2pB,YAAYtE,WAAWwE,GAC5B7pB,KAAK0pB,YAAY3H,OAAO/hB,KAAK4pB,OAAQC,GACrC7pB,KAAK8E,OAAO8jB,cAAcvM,QACrB,GAAgB,SAAZnc,EAAEqmB,MAAkB,CAC7B,MAAMwD,EAA4B,QAAb7pB,EAAE8E,OAAmB,EAAI,IAC9ChF,KAAK2pB,YAAYrE,aAAajX,IAC5B,MAAM,KAAEoD,EAAI,IAAEoI,EAAG,IAAErC,GAAQnJ,EAC3BwL,EAAInJ,UACJe,EAAKuI,OACH+P,EAAe7pB,EAAE6Q,EAAIyG,EAAIzG,EACzBgZ,EAAe7pB,EAAE8Q,EAAIwG,EAAIxG,GACxBhR,KAAK6S,OAAOoP,gBAGjBjiB,KAAK0pB,YAAYnH,UACjBviB,KAAK2pB,YAAYrE,aAAajX,IAC5B,MAAM,KAAEoD,EAAI,IAAEoI,GAAQxL,EACtB,GAAAyK,OAAqBrH,EAAM,CAAEoI,IAAAA,EAAK8B,cAAa,QAEjD3b,KAAK8E,OAAO8jB,cAAc5oB,KAAKwpB,mBAAmB3M,YAClD7c,KAAK2X,OAAO8B,SAASzZ,KAAK6S,OAAOoP,aAAa,QACzC,GAAgB,SAAZ/hB,EAAEqmB,MAAkB,CAC7BvmB,KAAK0pB,YAAYpH,UACjBtiB,KAAK2X,OAAO8B,SAAQ,GACpB,MAAM4C,EAAQrc,KAAK2pB,YAAYpE,kBAC3BlJ,EAAMhb,OAAS,GACjBrB,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKM,QAAQF,OAAQ,CAC1C8P,MAAAA,EACA1N,KAAM,QAGV3O,KAAK2pB,YAAYrZ,YAGpB1C,OAAO9B,EAAMK,KAAKQ,SAAS,EAAG4L,QAAAA,EAAS1E,OAAAA,MAElC0E,EACFvY,KAAKypB,WAAW/L,KAAK7J,GAErB7T,KAAKypB,WAAWjM,WAGnB5P,OAAO9B,EAAMK,KAAKS,QAAQ,EAAG6E,KAAAA,MAC5BzR,KAAK8E,OAAOukB,mBAAmB5X,MAEhC7D,OAAO9B,EAAMK,KAAKM,SAAU4P,IAC3BA,EAAM9Y,SAASkO,GAASA,EAAKgI,YAC7BzZ,KAAK2X,OAAO8B,UACZzZ,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKM,QAAQF,OAAQ,CAAE8P,MAAAA,EAAO1N,KAAM,aAGjE8O,YACE,OAAOzd,KAAKypB,WAAWhM,YAEzBpB,MAAM2N,GACJ,GAAIA,aAAiB5F,GAAgB,CACnC,MAAMrlB,EAAOirB,EAAM1O,QACnBtb,KAAK4pB,OAAS,SAAa7qB,EAAMiB,KAAK6S,aAEtC7S,KAAK4pB,OAAS,SAAaI,EAAOhqB,KAAK6S,QASzC,OAPA7S,KAAK2X,OAAS,IvBxGlB,MACEjW,YAAYmR,EAAQmP,EAAUld,GAC5B9E,KAAK6S,OAASA,EACd7S,KAAK8E,OAASA,EACd9E,KAAKmX,MAAQ,GACbD,EAAY8K,EAAUhiB,KAAKmX,OAC3BnX,KAAK6S,OACFjF,OAAO9B,EAAMK,KAAKG,SAAS,EAAG+P,MAAAA,MAC7BA,EAAM9Y,SAASsQ,IACb,MAAM3T,EAAI,IAAImX,EAAKxD,EAAOc,OAAQd,GAClC7T,KAAKmX,MAAMG,KAAKpX,MAElBF,KAAKyZ,aAEN7L,OAAO9B,EAAME,SAASa,SAAS,KAC9B7M,KAAKyZ,aAEN7L,OAAO9B,EAAMK,KAAKK,SAAUiF,IAC3B,MAAM+F,EAAMD,EAAYvX,KAAKmX,OAAQjX,GAAMA,EAAE8X,QAAQvG,KAClC,IAAf+F,EAAInW,SAGNmW,EAAIyS,UAAU1mB,SAASkU,GAAUzX,KAAKmX,MAAMxJ,OAAO8J,EAAO,KAE1DzX,KAAKyZ,cAGR7L,OAAO9B,EAAMK,KAAK+d,OAAO,EAAGzY,KAAAA,EAAMiJ,WAAAA,MACjC,MAAMlD,EAAMD,EACVvX,KAAKmX,OACJjX,GAAMA,EAAEgB,MAAQwZ,GAAcxa,EAAEuL,MAAQgG,IAEvC+F,EAAInW,OAAS,GACfmW,EAAIyS,UAAU1mB,SAASkU,GAAUzX,KAAKmX,MAAMxJ,OAAO8J,EAAO,KAE5D,MAAMvX,EAAI,IAAImX,EAAK5F,EAAKkD,OAAQlD,GAChCzR,KAAKmX,MAAMG,KAAKpX,GAChBF,KAAKyZ,aAEN7L,OAAO9B,EAAMK,KAAKS,QAAQ,EAAG6E,KAAAA,MAC5B,MAAM0F,EAAQnX,KAAKmX,MAAMlU,QAAQ2U,GAASA,EAAK1W,MAAQuQ,IACjDoG,EAASpG,EAAKoD,WACpBsC,EAAM5T,SAASqU,IACbA,EAAKG,OAASF,EACdH,EAAkB1X,KAAM4X,EAAMC,MAGhC7X,KAAKyZ,aAGX3B,YAAYyC,GACV,OAAOva,KAAKmX,MAAMlU,OAAOsX,GAE3Bd,QAAQ0Q,GAAc,GAChBA,GACFnqB,KAAK8E,OAAOwL,QAEdtQ,KAAKmX,MAAM5T,SAASrD,IAClB,MAAM,IAAEgB,EAAG,IAAEuK,GAAQvL,EACfsJ,EAAQiC,EAAI2e,cAAgB,IAAI,EAAU3e,GAChDA,EAAI2e,aAAe5gB,EACdtJ,EAAE6X,QACLlC,EAAUrM,EAAMyC,KAAK6B,eAAe9N,KAAK8E,OAAQ5D,EAAKuK,QuB0CjCzL,KAAK6S,OAAQ7S,KAAK4pB,OAAQ5pB,KAAK8E,QACxD9E,KAAK6S,OAAOC,GAAGlB,OAAOb,EAAI/Q,KAAK4pB,OAAO/W,OAAOgG,KAAK9H,EAClD/Q,KAAK6S,OAAOC,GAAGlB,OAAOZ,EAAIhR,KAAK4pB,OAAO/W,OAAOgG,KAAK7H,EAClDhR,KAAK4pB,OAAO/W,OAAOgG,KAAK9H,EAAI,EAC5B/Q,KAAK4pB,OAAO/W,OAAOgG,KAAK7H,EAAI,EAE5BhR,KAAKyZ,UACEzZ,KAETymB,SAASlM,GACP,OAAOva,KAAK4pB,OAAOtP,KAAKC,GAE1BmC,QAAQrE,EAAYgS,EAAU/kB,GAC5B,MAAMkB,EAAO,CACX0N,MAAOmW,EAASnW,MAChB2E,KAAMwR,EAASxR,MAEZrS,EAAKqS,OACRrS,EAAKqS,KAAO,CACV9H,EAAG,IACHC,EAAG,IAGP,MAAM6C,EAAS,IAAI,GAAOrN,EAAMxG,KAAK6S,OAAQwF,GAG7C,GAFArY,KAAK8E,OAAOokB,aAAarV,GACzBwE,EAAWmC,SAAS3G,GAChBwW,EAAS1N,YAAa,CACxB,MAAM9K,EAAOC,EAAItH,QAAQ6f,EAAS1N,YAAY5K,SAC9C,eAA0B8B,EAAQ,CAChCiI,SAAUuO,EAAS1N,YACnB9K,KAAAA,IAGJgC,EAAO4F,UAGPzZ,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKG,QAAS,CAAE+P,MAAO,CAACxI,KAAW,GACtDvO,IAAWA,EAAOiT,SAAWjT,EAAO4Z,SACtClf,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKO,SAAU,CAAE+E,KAAMoC,IAE5CvO,GAAUA,EAAOiT,SACnBvY,KAAKypB,WAAW/L,KAAK7J,GAGzBwS,UAAUhO,EAAYgE,EAAOiO,GAC3B,MAAMtR,EAAaqD,EAAMpZ,QAAQwO,GAASA,EAAKkD,SAAW0D,IAC1DW,EAAWzV,SAASwR,IAClB8Q,GAAiB9Q,EAAO,SAAU/U,KAAK6S,QACvC,MAAM6H,EAAarC,EAAWmC,SAASzF,GACvC8Q,GAAiB9Q,EAAO,MAAO/U,KAAK6S,QAEpC7S,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAK+d,MAAO,CAAEzY,KAAMsD,EAAO2F,WAAAA,OAEpDrC,EAAW0C,YAAW,GACtB0K,GAAYzlB,KAAMqY,GAClBrY,KAAK8E,OAAO8jB,cAAcvM,GACtBiO,GACFtqB,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKM,QAAQF,OAAQ,CAC1C8P,MAAOrD,EACPrK,KAAM,SAIZ0O,YAAYhB,GACV,MAAMX,EAAU,GACV6O,EAAU,GAChBlO,EAAM9Y,SAASkO,IACb,MAAM,OAAEkD,EAAM,WAAEqE,GAAevH,EAC3BuH,EAAW3X,OAAS,IAEtB2X,EAAWzV,SAASwR,IAElBA,EAAMiF,OAAOjF,EAAMhE,EAAIU,EAAKV,EAAGgE,EAAM/D,EAAIS,EAAKT,MAEhDhR,KAAKqmB,UAAU1R,EAAQqE,GAEvB0C,EAAQpE,QAAQ0B,EAAW/V,QAAQunB,IAAOnO,EAAM9V,SAASikB,OAG3D,MAAMC,EAAehZ,EAAKkD,OAAOgG,YAAYlJ,GACzCgZ,IACFzqB,KAAK8E,OAAOqkB,eAAesB,GAC3BzqB,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKK,QAASie,GACrCF,EAAQjT,KAAK7F,OAGbiK,EAAQra,OAAS,GACnBrB,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKM,QAAQF,OAAQ,CAC1C8P,MAAOX,EACP/M,KAAM,SAGN4b,EAAQlpB,OAAS,GACnBrB,KAAK6S,OAAO7E,KAAKlC,EAAMK,KAAKK,QAAQD,OAAQ,CAAE8P,MAAOkO,IAGzDnE,mBACE,OAAOpmB,KAAKwpB,mBAAmB3M,WAEjC6N,UAAUC,EAAY9W,IACDA,GAAU7T,KAAK4pB,QACvB/W,OAAOgG,KAAKC,OAAS6R,EAChC3qB,KAAKyZ,UAEPmR,QAAQC,EAAUhX,IACGA,GAAU7T,KAAK4pB,QACvB/W,OAAOgG,KAAKjB,KAAOiT,EAC9B7qB,KAAKyZ,QAAQ5F,GAEfiX,SAASha,GACP9Q,KAAK6S,OAAOC,GAAGhC,MAAQA,EACvBpM,QAAQC,IAAI3E,KAAK6S,OAAOC,GAAGhC,OAC3B9Q,KAAKyZ,UAEPA,QAAQ5F,GACNA,EAASA,GAAU7T,KAAK4pB,OACxBnE,GAAYzlB,KAAM6T,GAClB7T,KAAK8E,OAAOqiB,oBACZ,GAAArO,OAAqBjF,EAAQ,CAAEgG,IAAK,OACpC7Z,KAAK2X,OAAO8B,UAEZzZ,KAAK8E,OAAOkY,gBACZhd,KAAK8E,OAAO8jB,cAAc5oB,KAAKomB,oBAEjCxY,OAAOvE,EAAOnE,GAEZ,OADAlF,KAAK6S,OAAOkY,KAAKnd,OAAO,GAAGvE,WAAgBnE,GACpClF,KAETgrB,SACE,MAAMvZ,EAAO+T,GAAWxlB,KAAK6S,OAAQ7S,KAAK4pB,QAC1C,OAAO3lB,QAAQC,QAAQ+mB,KAAKC,UAAUzZ,KGhS1C,MAAM0Z,GAAoB,CACxB9mB,MAAO,IACPE,OAAQ,IACRuM,MAAO,EACP3I,MAAO,CACLsJ,KAAM,cACNmG,KAAM,cACNvD,OAAS+W,GAAeA,EACxB/R,MAAQA,GAAU,SAASA,KAE7BzH,OAAQ,CAAEb,EAAG,EAAGC,EAAG,GACnB2Q,KAAM,CACJa,MAAO,EACPne,MAAO,GACPud,KAAM,CAAC,EAAG,GACV3M,MAAO,CAAE+P,WAAY,SAAUC,SAAU,YAE3CrS,UAAW,CACTK,QAAS,EACT,mBAAoB,YACpB,gBAAiB,QAGrB,MAAMoY,GACJ3pB,aAAY,GAAEQ,EAAE,GAAE4Q,IAChB9S,KAAKkC,GAAKA,EACVlC,KAAK8S,GAAKA,EACV9S,KAAK+qB,KAAO,IAAI,EAEd1mB,YACF,OAAOrE,KAAK8S,GAAGzO,MAEbE,aACF,OAAOvE,KAAK8S,GAAGvO,OAEbuM,YACF,OAAO9Q,KAAK8S,GAAGhC,MAEbmR,kBACF,OAAOjiB,KAAK8S,GAAG6O,KAAK2J,QAEtBhF,YAEE,MAAO,IADQtmB,KAAK8S,GAAGlB,QAGzBkI,UAAUlI,GACR5R,KAAK8S,GAAGlB,OAAS,IAAKA,GAExB2Z,eAAe3Z,GACb,MAAM+W,EAAa3oB,KAAK8S,GAAGlB,OAC3B,MAAO,CAAEb,EAAG4X,EAAW5X,EAAIa,EAAOb,EAAGC,EAAG2X,EAAW3X,EAAIY,EAAOZ,GAEhEmK,gBAAgBxM,GACd,MAAMvG,EAAYpI,KAAK8S,GAAG3K,MAAMwG,GAChC,IAAKvG,EACH,MAAM,IAAI9G,MAAM,8CAA8CqN,MAEhE,OAAOvG,EAETiT,mBAAmB5J,GACjB,MAAM9G,EAAS3K,KAAK8S,GAAG3K,MAAMkR,MAC7B,IAAKvH,EAAIpH,MAAMC,OAAOA,GACpB,MAAM,IAAIrJ,MACR,8CAA8CqJ,2BAOlD,OAJkBA,EACdA,EAAO8G,EAAK4H,QAAS5H,GACrB,SAASA,EAAK4H,UAIpBzL,OAAO3I,EAAWC,GAEhB,OADAlF,KAAK+qB,KAAK5d,GAAGlI,EAAWC,GACjBlF,KAETsN,IAAIrI,EAAWC,GACblF,KAAK+qB,KAAKzd,IAAIrI,EAAWC,GAE3B8I,KAAK/I,EAAWumB,EAAMtd,GAEpB,OADAlO,KAAK+qB,KAAK/c,KAAK/I,EAAWumB,IAAQtd,GAC3BlO,MAwBXqrB,GAAcrN,MAASnL,IACDA,EAAO3Q,GAA3B,MACM4Q,EAAKmR,EAAMrY,UACfiH,EAAOC,IAAM,GACbmR,EAAMzY,SAAS2f,KAxBG,CAACrY,IACrB,MAAM,KAAE6O,GAAS7O,GACJ,IAAT6O,GACF7O,EAAG6O,KAAOsC,EAAMzY,SAAS2f,GAAkBxJ,MAC3C7O,EAAG6O,KAAK2J,SAAU,IAEdxZ,EAAIlH,MAAMS,OAAOsW,EAAK1M,SACxB0M,EAAK1M,MAAQ,CACX+P,WAAYrD,EAAK1M,MAAMjS,OACvBiiB,SAAUtD,EAAK1M,MAAMjS,SAGzB2e,EAAKa,MAAQb,EAAKa,OAAS2I,GAAkBxJ,KAAKa,MAClDb,EAAKtd,MAAQsd,EAAKtd,OAAS8mB,GAAkBxJ,KAAKtd,OAChC,IAAdsd,EAAKC,OACPD,EAAKC,KAAOD,EAAKC,MAAQuJ,GAAkBxJ,KAAKC,MAElDD,EAAK2J,SAAU,IAUjBG,CAAc3Y,GAEd,MAAM5Q,EACiB,iBAAd2Q,EAAO3Q,GACVlB,SAASmJ,cAAc0I,EAAO3Q,IAC9B2Q,EAAO3Q,GACb,OAAO,IAAImpB,GAAc,CAAEnpB,GAAAA,EAAI4Q,GAAAA,KAEjC,YCtGA3S,OAAOiF,iBAAiB,oBAAqBiE,IAVpB,MACvB,MAAMnH,EAAKlB,SAASmJ,cAAc,uBAClC,GAAIjI,EAAI,CACN,IAAIwpB,EAAW5Z,EAAI7H,QAAQ/H,EAAI,UAC1BwpB,IACHA,EATe,CAACxpB,IACpB,MAAM4C,EAASgN,EAAIzO,IAAIyB,SACvB5C,EAAGwS,OAAO5P,IAOK6mB,CAAazpB,MAM5B0pB,MAGF,MAAMC,GAAQhZ,IACZ,MAAM,GAAE3Q,GAAO2Q,EACf,OAAO,IAAI5O,SAAQ,CAAC6nB,EAASC,KAC3B,GAAI7pB,EAAI,CACN,MAAM8pB,EAAY,SAAoBnZ,GAEtCiZ,EADY,IAAIhG,GAAUkG,SAG1BD,EAAQ,CAAEE,MAAO,wBAKjBC,GAAmB,IAAM,IAAI9H,GAInC,IAAiByH,KAAAA,GAAMK,iBAAAA,I","sources":["webpack://mindwired/webpack/universalModuleDefinition","webpack://mindwired/webpack/bootstrap","webpack://mindwired/webpack/runtime/define property getters","webpack://mindwired/webpack/runtime/global","webpack://mindwired/webpack/runtime/hasOwnProperty shorthand","webpack://mindwired/webpack/runtime/make namespace object","webpack://mindwired/webpack/runtime/publicPath","webpack://mindwired/./src/service/dom.js","webpack://mindwired/./src/service/clone.js","webpack://mindwired/./src/service/event-bus.js","webpack://mindwired/./src/service/dnd.js","webpack://mindwired/./src/components/dnd/viewport-dnd.js","webpack://mindwired/./src/service/geom.js","webpack://mindwired/./src/components/canvas-ui.js","webpack://mindwired/./src/components/edge/edge-style.js","webpack://mindwired/./src/components/edge/mustache-lr-renderer.js","webpack://mindwired/./src/components/edge/mustache-tb-renderer.js","webpack://mindwired/./src/components/edge-ui.js","webpack://mindwired/./src/components/edge/line-edge-renderer.js","webpack://mindwired/./src/components/edge/natural-curve-renderer.js","webpack://mindwired/./src/components/node-ui.js","webpack://mindwired/./src/components/layout/node/default-layout.js","webpack://mindwired/./src/components/layout/node/axis-x-layout.js","webpack://mindwired/./src/components/layout/node/axis-y-layout.js","webpack://mindwired/./src/components/layout/node/axis-xy-layout.js","webpack://mindwired/./src/components/layout/index.js","webpack://mindwired/./src/components/selection/node-selection-model.js","webpack://mindwired/./src/components/selection/index.js","webpack://mindwired/./src/components/editing/node-editing.js","webpack://mindwired/./src/components/node/renderer/plain-text-renderer.js","webpack://mindwired/./src/components/node/renderer/icon-badge-renderer.js","webpack://mindwired/./src/components/node/renderer/thumbnail-renderer.js","webpack://mindwired/./src/components/node/node-rendering-context.js","webpack://mindwired/./src/components/node/renderer/link-renderer.js","webpack://mindwired/./src/components/node/index.js","webpack://mindwired/./src/service/index.js","webpack://mindwired/./src/components/alignment/alignment-ui.js","webpack://mindwired/./src/components/datasource/tree-ds.js","webpack://mindwired/./src/components/direction.js","webpack://mindwired/./src/components/drag-context.js","webpack://mindwired/./src/components/mind-wired.js","webpack://mindwired/./src/components/dnd/change-parent-node.js","webpack://mindwired/./src/components/dnd/node-dnd.js","webpack://mindwired/./src/components/config.js","webpack://mindwired/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mindwired\"] = factory();\n\telse\n\t\troot[\"mindwired\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","/* eslint-disable max-classes-per-file */\nclass Attr {\n  constructor(attrExpression) {\n    this.expression = attrExpression;\n  }\n\n  get isClass() {\n    return this.expression.charAt(0) === \".\";\n  }\n\n  get isId() {\n    return this.expression.charAt(0) === \"#\";\n  }\n\n  get value() {\n    return this.expression.substring(1);\n  }\n\n  setAttribute(el) {\n    if (this.isId) {\n      el.setAttribute(\"id\", this.value);\n    } else if (this.isClass) {\n      el.classList.add(this.value);\n    } else {\n      throw new Error(`neither id nor class : [${this.expression}]`);\n    }\n  }\n}\nconst closest = (elem, selector) => {\n  if (elem.nodeType === 1) {\n    return elem.closest(selector);\n  }\n  if (elem.nodeType === 3) {\n    return elem.parentElement.closest(selector);\n  }\n  throw new Error(`node type ${elem.nodeTye}, tag(${elem.nodeName})`);\n};\n\nconst parseAttr = (expression) => {\n  const attr = expression || \"\";\n  return attr\n    .split(\" \")\n    .map((val) => val.trim())\n    .filter((val) => val.length > 0);\n};\nconst createEl = (tagName, attributes) => {\n  const tag = document.createElement(tagName);\n  attributes.forEach((value) => {\n    const attr = new Attr(value);\n    attr.setAttribute(tag);\n  });\n  return tag;\n};\nconst tag = {\n  span: (attr, content) => {\n    const span = createEl(\"span\", parseAttr(attr));\n    if (content) {\n      span.innerHTML = content;\n    }\n    return span;\n  },\n  iconButton: (attrs, content) => {\n    const button = createEl(\"BUTTON\", parseAttr(attrs));\n    button.innerHTML = content;\n    return button;\n  },\n  img: (imgUrl) => {\n    const img = document.createElement(\"img\");\n    return new Promise((resolve, reject) => {\n      img.onload = () => {\n        resolve({ img, width: img.naturalWidth, height: img.naturalHeight });\n      };\n      img.onerror = () => {\n        console.log(\"ERROR\");\n        reject(\"NOT_ALLOWED\");\n      };\n      img.crossOrigin = \"Anonymous\";\n      img.src = imgUrl;\n    });\n  },\n  div: (attr) => createEl(\"DIV\", parseAttr(attr)),\n  canvas: (attr) => createEl(\"CANVAS\", parseAttr(attr)),\n};\nconst attr = (el, attrName, attrValue, always) => {\n  const v = el.getAttribute(attrName);\n  if (always || !v) {\n    el.setAttribute(attrName, attrValue);\n  }\n};\nconst clazz = {\n  add: (el, className) => el.classList.add(className),\n  remove: (el, className) => el.classList.remove(className),\n};\nconst imageSize = (imgUrl) => {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"HEAD\", imgUrl, true);\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState === xhr.DONE) {\n      console.log(xhr.getResponseHeader(\"Content-Length\"));\n    }\n  };\n  xhr.send();\n};\n\nconst fileToImage = (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve) => {\n    reader.addEventListener(\"load\", () => {\n      const img = document.createElement(\"img\");\n      img.src = reader.result;\n      resolve({ file, img });\n    });\n    reader.readAsDataURL(file);\n  });\n};\n\nconst registerEvent = (target, eventName, callback, options) => {\n  const el = target || window;\n  el.addEventListener(eventName, callback, options || false);\n};\n\nconst registerKeyEvent = (target, eventName, callback, option) => {\n  target.addEventListener(eventName, (e) => {\n    const code = e.code.toLowerCase();\n    const { keys } = option;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const { ctrlKey, shiftKey, altKey, metaKey } = e;\n      if (\n        key.code === \"*\" ||\n        (key.code === code &&\n          key.alt === altKey &&\n          key.meta === metaKey &&\n          key.shift === shiftKey &&\n          key.ctrl === ctrlKey)\n      ) {\n        callback(e);\n        break;\n      }\n    }\n  });\n};\n/**\n * 'enter'\n * 'space'\n * 'ctrl@enter'\n * 'alt+shift@space'\n * @param {string} keyFormat\n */\nconst parseKeyOption = (keyFormat) => {\n  let [metaKeys, code] = keyFormat.split(\"@\");\n  if (!code) {\n    // 'enter', 'space'\n    code = metaKeys;\n    metaKeys = \"\";\n  }\n  const metas = metaKeys.split(\"+\");\n  return {\n    ctrl: metas.includes(\"ctrl\"),\n    shift: metas.includes(\"shift\"),\n    alt: metas.includes(\"alt\"),\n    meta: metas.includes(\"meta\"),\n    code,\n  };\n};\nconst data = {\n  int: (el, attrList) => {\n    const d = {};\n    attrList.forEach((key) => {\n      const v = el.dataset[key];\n      d[key] = parseInt(v, 10);\n    });\n    return d;\n  },\n};\nconst stopPropagation = (e) => e.stopPropagation();\nconst event = {\n  createEventBus: () => new EventBus(),\n  consume: (target, eventName) => {\n    target.addEventListener(eventName, stopPropagation);\n  },\n  focus: (target, callback, options) =>\n    registerEvent(target, \"focus\", callback, options),\n  mousedown: (callback, target, options) => {\n    registerEvent(target, \"mousedown\", callback, options);\n  },\n  mousemove: (callback, target, options) => {\n    registerEvent(target, \"mousemove\", callback, options);\n  },\n  mouseup: (callback, target, options) => {\n    registerEvent(target, \"mouseup\", callback, options);\n  },\n  touchstart: (callback, target, options) => {\n    registerEvent(target, \"touchstart\", callback, options);\n  },\n  touchmove: (callback, target, options) => {\n    registerEvent(target, \"touchmove\", callback, options);\n  },\n  touchend: (callback, target, options) => {\n    registerEvent(target, \"touchend\", callback, options);\n  },\n  click: (target, callback, options) => {\n    registerEvent(target, \"click\", callback, options);\n  },\n  keydown: (target, callback, options) => {\n    options = options || \"*\";\n    const keys = options\n      .split(\" \")\n      .filter((key) => key.trim().length > 0)\n      .map((key) => parseKeyOption(key));\n    registerKeyEvent(target, \"keydown\", callback, { keys });\n  },\n  keyup: (target, callback, options) => {\n    options = options || \"*\";\n    const keys = options\n      .split(\" \")\n      .filter((key) => key.trim().length > 0)\n      .map((key) => parseKeyOption(key));\n    registerKeyEvent(target, \"keyup\", callback, {\n      keys,\n    });\n    // registerEvent(target, \"keyup\", callback, options);\n  },\n  resize: (target, callback) => {},\n};\nconst converters = {\n  width: (val) => {\n    const type = typeof val;\n    return type === \"number\" ? `${val}px` : val;\n  },\n};\n\"top,left,height,minWidth,minHeight\".split(\",\").forEach((prop) => {\n  converters[prop] = converters.width;\n});\n\nconst css = (el, styles) => {\n  Object.keys(styles).forEach((key) => {\n    const fn = converters[key] || ((val) => val);\n    const value = fn(styles[key]);\n    el.style[key] = value;\n  });\n};\nconst parseTemplate = (template, params) => {\n  let t = template;\n  Object.keys(params || {}).forEach((key) => {\n    const text = \"@\" + key;\n    const value = params[key];\n    t = t.replaceAll(text, value);\n  });\n  const virtualElem = document.createElement(\"template\");\n  virtualElem.innerHTML = t;\n  return virtualElem.content.firstElementChild;\n  // return virtualDiv.firstElementChild;\n};\nconst findOne = (el, cssSelector) => el.querySelector(cssSelector);\nconst is = (el, cssSelector, searchParent = true) => {\n  const found = el.matches(cssSelector);\n  if (found) {\n    return found;\n  }\n  if (searchParent) {\n    const elem = closest(el, cssSelector);\n    return !!elem;\n  } else {\n    return false;\n  }\n};\nconst domRect = (el) => el.getBoundingClientRect();\n\nconst types = {\n  method: (obj) => typeof obj === \"function\",\n};\nconst valid = {\n  path: (value) =>\n    new Promise((yes, no) => {\n      const v = value && value.trim();\n      if (v.length > 0) {\n        yes(v);\n      } else {\n        no(value);\n      }\n    }),\n  number: (value) =>\n    new Promise((yes, no) => {\n      const n = parseFloat(value);\n      if (Number.isNaN(n)) {\n        no(value);\n      } else {\n        yes(n);\n      }\n    }),\n  string: (value) => typeof value === \"string\" && value.trim().length > 0,\n};\nexport default {\n  tag,\n  attr,\n  clazz,\n  closest,\n  imageSize,\n  fileToImage,\n  event,\n  css,\n  parseTemplate,\n  findOne,\n  is,\n  data,\n  domRect,\n  types,\n  valid,\n};\n","const isPrimitive = (o) => {\n  const type = typeof o;\n  if (\"number,string,boolean,undefined\".includes(type)) return true;\n};\nconst isFunction = (o) => typeof o === \"function\";\nconst deepCopy = (src) => {\n  if (\n    src === undefined ||\n    src === null ||\n    isPrimitive(src) ||\n    isFunction(src)\n  ) {\n    return src;\n  }\n  const dst = Array.isArray(src) ? [] : {};\n  Object.keys(src).forEach((prop) => {\n    const value = deepCopy(src[prop]);\n    dst[prop] = value;\n  });\n  return dst;\n};\n/**\n * merge existing leaf value of src into target\n *\n *```javascript\n * src: {padding: {left: 8, right: 8}}\n * target: {color: '#aaa', padding: {top: 16} }\n *\n * merged: {color: '#aaa', padding: {top: 16, left:8, right: 8}}\n * ```\n * @param {object} src\n * @param {object} target\n */\nconst mergeLeaf = (src, target) => {\n  Object.keys(src).forEach((prop) => {\n    if (target[prop] === null || target[prop] === undefined) {\n      target[prop] = deepCopy(src[prop]);\n    } else if (isPrimitive(src[prop]) || isFunction(src[prop])) {\n      target[prop] = src[prop];\n    } else {\n      mergeLeaf(src[prop], target[prop]);\n    }\n  });\n  return target;\n};\nexport default {\n  deepCopy,\n  mergeLeaf,\n};\n","const EVENT = {\n  DRAG: {\n    VIEWPORT: { name: \"viewport dragged\", desc: \"\" },\n    NODE: { name: \"node dragged\", desc: \"\" },\n  },\n  SELECTION: {\n    NODE: {\n      name: \"node selected\",\n      desc: \"\",\n    },\n  },\n  EDIT: {\n    NODE: {\n      name: \"editing state of a node\",\n      desc: \"\",\n    },\n  },\n  NODE: {\n    CREATED: {\n      name: \"node.created\",\n      desc: \"\",\n      CLIENT: {\n        name: \"node.created.client\",\n        desc: \"client-side node creation event\",\n      },\n    },\n    DELETED: {\n      name: \"node.deleted\",\n      desc: \"node has been deleted\",\n      CLIENT: {\n        name: \"node.deleted.client\",\n        desc: \"client-side node deletion event\",\n      },\n    },\n    UPDATED: {\n      name: \"node.updated\",\n      desc: \"content of node updated\",\n      CLIENT: {\n        name: \"node.updated.client\",\n        desc: \"client-side node update event\",\n      },\n    },\n    SELECTED: {\n      name: \"node.selected\",\n      desc: \"one or more nodes selected\",\n      CLIENT: {\n        name: \"node.selected.client\",\n        desc: \"client-side node selection event\",\n      },\n    },\n    EDITING: {\n      name: \"node.editing\",\n      desc: \"node's editing state\",\n    },\n    FOLDED: {\n      name: \"node.folded\",\n      desc: \"node is folded or unfolded\",\n    },\n  },\n  VIEWPORT: {\n    RESIZED: {\n      name: \"viewport.resized\",\n      desc: \"viewport size chaged\",\n    },\n    CLICKED: {\n      name: \"viewport.clicked\",\n      desc: \"viewport has been clicked\",\n    },\n  },\n};\nconst parseEvent = (eventName) => {\n  const pathes = eventName.toUpperCase().split(\".\");\n  let obj = EVENT;\n  for (let i = 0; i < pathes.length; i++) {\n    obj = obj[pathes[i]];\n    if (!obj) {\n      throw new Error(`invalid event name: [${eventName}]`);\n    }\n  }\n  if (obj.name !== eventName) {\n    throw new Error(`event name mismatch: [${eventName}]`);\n  }\n  return obj;\n};\nconst EMPTY_SET = new Set();\nclass EventBus {\n  constructor() {\n    this.callbacks = new Map();\n  }\n\n  on(eventName, callback) {\n    let callbackList = this.callbacks.get(eventName);\n    if (!callbackList) {\n      callbackList = new Set();\n      this.callbacks.set(eventName, callbackList);\n    }\n    callbackList.add(callback);\n  }\n  off(eventObj, callback) {\n    const callbackList = this.callbacks.get(eventObj);\n    if (!callbackList) {\n      return;\n    }\n    const idx = callbackList.findIndex((cb) => cb === callback);\n    callbackList.splice(idx, 1);\n  }\n  /**\n   * used to register client-side callback\n   * @param {string} eventName like \"valid.event.path\" format\n   * @param {function} callback\n   */\n  listen(eventName, callback) {\n    const event = parseEvent(eventName);\n    this.on(event, callback);\n  }\n  emit(eventName, payload, emitForClient) {\n    const callbackList = this.callbacks.get(eventName) || EMPTY_SET;\n    callbackList.forEach((cb) => {\n      try {\n        cb(payload);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    if (emitForClient) {\n      setTimeout(() => {\n        this.emit(eventName[\"CLIENT\"], payload);\n      });\n    }\n  }\n}\n\nexport { EventBus, EVENT };\n","/**\n * dummy dnd handlers\n */\nconst beforeDrag = () => {};\nconst dragging = beforeDrag;\nconst afterDrag = beforeDrag;\n\nconst convToMouseEvent = (te) => {\n  let touch = te.touches[0];\n  if (te.type === \"touchend\") {\n    touch = te.changedTouches[0];\n  }\n  te.clientX = touch.clientX;\n  te.clientY = touch.clientY;\n  te.layerX = 0;\n  te.layerY = 0;\n  te.offsetX = 0;\n  te.offsetY = 0;\n  te.pageX = touch.pageX;\n  te.pageY = touch.pageY;\n  te.screenX = touch.screenX;\n  te.screenY = touch.screenY;\n};\nconst clearTouchTimer = (ctx) => {\n  clearTimeout(ctx.touchTimer);\n  ctx.touchTimer = null;\n};\nconst mousedown = (ctx, e) => {\n  const { handler } = ctx;\n  if (!handler.accept(e.target)) {\n    return;\n  }\n  ctx.dragging = {\n    originalEvent: e,\n    sx: e.pageX,\n    sy: e.pageY,\n    dx: 0,\n    dy: 0,\n    ghost: null,\n    once: null,\n  };\n  handler.beforeDrag(ctx.dragging);\n};\n\nconst mousemove = (ctx, e) => {\n  if (ctx.dragging) {\n    e.preventDefault();\n    if (ctx.dragging.once) {\n      ctx.dragging.once();\n      ctx.dragging.once = null;\n    }\n    ctx.originalEvent = e;\n    ctx.originalEvent = e;\n    ctx.dragging.dx = e.pageX - ctx.dragging.sx;\n    ctx.dragging.dy = e.pageY - ctx.dragging.sy;\n    ctx.handler.dragging(ctx.dragging);\n  }\n};\nconst mouseup = (ctx, e) => {\n  ctx.originalEvent = e;\n  document.querySelector(\"body\").style.cursor = \"\";\n  try {\n    // ghost.clear();\n    if (ctx.dragging) {\n      // console.log('[M-UP]', e.target)\n      ctx.handler.afterDrag(ctx.dragging);\n    }\n  } catch (e) {\n    console.log(\"[DND error]\", e);\n  } finally {\n    ctx.data.clear();\n    ctx.dragging = null;\n  }\n};\nconst touchstart = (ctx, e) => {\n  ctx.touchTimer = setTimeout(() => {\n    convToMouseEvent(e);\n    mousedown(ctx, e);\n  }, 10);\n};\nconst touchmove = (ctx, e) => {\n  clearTouchTimer(ctx);\n  convToMouseEvent(e);\n  mousemove(ctx, e);\n};\nconst touchend = (ctx, e) => {\n  clearTouchTimer(ctx);\n  convToMouseEvent(e);\n  mouseup(ctx, e);\n};\n\nconst install = (ctx) => {\n  const { handler } = ctx;\n  handler.beforeDrag = handler.beforeDrag || beforeDrag;\n  handler.dragging = handler.dragging || dragging;\n  handler.afterDrag = handler.afterDrag || afterDrag;\n\n  window.addEventListener(\"mousedown\", (e) => mousedown(ctx, e), false);\n  window.addEventListener(\"mousemove\", (e) => mousemove(ctx, e), {\n    passive: false,\n  });\n  window.addEventListener(\"mouseup\", (e) => mouseup(ctx, e), false);\n  window.addEventListener(\"touchstart\", (e) => touchstart(ctx, e), false);\n  window.addEventListener(\"touchmove\", (e) => touchmove(ctx, e), {\n    passive: false,\n  });\n  window.addEventListener(\"toucend\", (e) => touchend(ctx, e), false);\n};\nclass DndContext {\n  constructor(handler) {\n    this.touchTimer = null;\n    this.dragging = null;\n    this.handler = handler;\n    this.data = new Map();\n    install(this);\n  }\n  capture(name, value) {\n    this.data.set(name, value);\n  }\n  getData(name) {\n    return this.data.get(name);\n  }\n}\n\nexport { DndContext };\n","import { EVENT } from \"../../service/event-bus\";\n/**\n * handles viewport dragging\n */\n\nconst viewportDndHandler = (canvasUI) => ({\n  beforeDrag: (e) => {\n    canvasUI.dndContext.capture(\"offset\", canvasUI.config.getOffset());\n  },\n  dragging: (e) => {\n    const { dx, dy } = e;\n    canvasUI.dndContext.capture(\"dragged\", true);\n    const offset = canvasUI.dndContext.getData(\"offset\");\n    canvasUI.config.emit(EVENT.DRAG.VIEWPORT, {\n      state: \"DRAG\",\n      offset: {\n        x: offset.x + dx,\n        y: offset.y + dy,\n      },\n    });\n  },\n  afterDrag: (e) => {\n    // console.log(\"[DND AFTER]\", e);\n    const { dx, dy } = e;\n    // canvasUI.shiftBy(dx, dy);\n    const offset = canvasUI.dndContext.getData(\"offset\");\n    canvasUI.config.emit(EVENT.DRAG.VIEWPORT, {\n      state: \"DONE\",\n      offset: {\n        x: offset.x + dx,\n        y: offset.y + dy,\n      },\n    });\n    const dragged = canvasUI.dndContext.getData(\"dragged\");\n    if (!dragged) {\n      canvasUI.config.emit(EVENT.VIEWPORT.CLICKED);\n    }\n  },\n});\n\nexport default viewportDndHandler;\n","/**\n * move dst to dst'\n *\n *   |\n *   |             + dst'\n *   |\n *   |                + dst\n *   |  by deg\n *   +-------------------------->\n *  base\n *\n * @param {Point} base\n * @param {Point} dst\n * @param {number} degree - [0~360]\n */\nconst rotate = (base, dst, degree, { scale = 1 }) => {\n  const dx = (dst.x - base.x) * scale;\n  const dy = (dst.y - base.y) * scale;\n  const rad = (degree * Math.PI) / 180;\n  const cos = Math.cos(rad);\n  const sin = Math.sin(rad);\n\n  return {\n    x: dx * cos - dy * sin + base.x,\n    y: dx * sin + dy * cos + base.y,\n  };\n};\n\nexport default {\n  rotate,\n};\n","import { dom } from \"../service\";\nimport { DndContext } from \"../service/dnd\";\nimport viewportDndHandler from \"./dnd/viewport-dnd\";\nimport nodeDndHandler from \"./dnd/node-dnd\";\nimport changeParentDndHandler from \"./dnd/change-parent-node\";\nimport { EVENT } from \"../service/event-bus\";\nimport iconSetPara from \"../assets/icon-chng-parent.svg\";\nimport iconfolding from \"../assets/icon-folded.svg\";\nimport geom from \"../service/geom\";\n\nconst pixelRatio = window.devicePixelRatio;\nconst template = {\n  viewport: `<div data-mind-wired-viewport>\n    <canvas></canvas>\n    <div class=\"mwd-selection-area\"><div class=\"ctrl-icon\" data-cmd=\"set-para\" style=\"display:none; background-image: url(${iconSetPara});\"></div></div>\n    <div class=\"mwd-nodes\"></div>\n  </div>`,\n  node: `<div class=\"mwd-node\">\n    <div class=\"mwd-body\" tabIndex=\"0\"></div>\n    <div class=\"mwd-subs\"></div>\n    <div class=\"mwd-node-ctrl\"></div>\n  </div>`,\n  foldingControl: `<div class=\"ctrl-icon\" data-cmd=\"unfolding\" style=\"background-image: url(${iconfolding});\"></div>`,\n};\n\nclass NodeRect {\n  constructor(node, scale) {\n    const offset = node.offset();\n    offset.x *= scale;\n    offset.y *= scale;\n    const rect = dom.domRect(node.$bodyEl);\n    const { width, height } = rect;\n    this.top = offset.y - height / 2;\n    this.right = offset.x + width / 2;\n    this.bottom = offset.y + height / 2;\n    this.left = offset.x - width / 2;\n    this.width = width;\n    this.height = height;\n    this.cx = offset.x;\n    this.cy = offset.y;\n    this.icon = null;\n  }\n  merge(other) {\n    this.top = Math.min(this.top, other.top);\n    this.right = Math.max(this.right, other.right);\n    this.bottom = Math.max(this.bottom, other.bottom);\n    this.left = Math.min(this.left, other.left);\n    this.width = this.right - this.left;\n    this.height = this.bottom - this.top;\n    this.cx = this.width / 2;\n    this.cy = this.height / 2;\n    return this;\n  }\n  draw(canvas) {\n    const { selection } = canvas.config.ui;\n    const offset = canvas.getHolderOffset();\n\n    const el = dom.findOne(canvas.$viewport, \".mwd-selection-area\");\n    dom.css(el, {\n      left: offset.x + this.left - selection.padding,\n      top: offset.y + this.top - selection.padding,\n      width: this.width + 2 * selection.padding,\n      height: this.height + 2 * selection.padding,\n    });\n    const ctrl = dom.findOne(el, \"div\");\n    dom.css(ctrl, {\n      display: \"\",\n      width: 24 / Math.max(canvas.scale, 1),\n      height: 24 / Math.max(canvas.scale, 1),\n    });\n  }\n  clear(canvas) {\n    const el = dom.findOne(canvas.$viewport, \".mwd-selection-area\");\n    dom.css(el, { top: -1, left: -1, width: 0, height: 0 });\n    const ctrl = dom.findOne(el, \"div\");\n    dom.css(ctrl, { display: \"none\" });\n  }\n}\nconst installCanvasElem = (canvasUI) => {\n  const { el, ui } = canvasUI.config;\n  const width = ui.width || 600;\n  const height = ui.height || 600;\n  let viewport = dom.findOne(el, \"[data-mind-wired-viewport]\");\n  if (!viewport) {\n    viewport = dom.parseTemplate(template.viewport, {});\n    el.append(viewport);\n  }\n  dom.attr(viewport, \"tabIndex\", \"0\");\n  dom.css(viewport, { width, height });\n\n  return viewport;\n};\nconst captureContext2D = (canvasUI) => {\n  const { config, $viewport, $canvas } = canvasUI;\n  const { offsetWidth, offsetHeight } = $viewport;\n  dom.css($canvas, { width: offsetWidth, height: offsetHeight });\n  dom.attr($canvas, \"width\", pixelRatio * offsetWidth, true);\n  dom.attr($canvas, \"height\", pixelRatio * offsetHeight, true);\n  const ctx = $canvas.getContext(\"2d\", { alpha: false });\n\n  canvasUI.$ctx = ctx;\n  canvasUI.$ctx.scale(pixelRatio, pixelRatio);\n  if (canvasUI.selectionArea) {\n    canvasUI.selectionArea.draw(canvasUI);\n  }\n  config.emit(EVENT.VIEWPORT.RESIZED);\n};\nconst registerSchema = (schema, $el, config) => {\n  const className = config.ui.clazz.schema(schema);\n  dom.clazz.add($el, className);\n};\nconst registerElement = (canvasUI, nodeUI) => {\n  if (nodeUI.$el) {\n    throw new Error(`[MINDWIRED][ERROR] already installed. (${nodeUI.uid})`);\n  }\n  const $el = (nodeUI.$el = dom.parseTemplate(template.node));\n  const renderingContext = canvasUI.config.getNodeRenderer();\n  const { model } = nodeUI;\n\n  const $bodyEl = canvasUI.getNodeBody(nodeUI);\n  const nodeRenderer = renderingContext.getRenderer(model.type);\n  nodeRenderer.install(nodeUI, $bodyEl);\n  if (model.schema) {\n    registerSchema(model.schema, $bodyEl, canvasUI.config);\n  }\n  const placeHolder = canvasUI.elemOf(\".mwd-nodes\");\n  if (nodeUI.isRoot()) {\n    placeHolder.append($el);\n  } else {\n    const $subs = dom.findOne(nodeUI.parent.$el, \".mwd-subs\");\n    $subs.append($el);\n  }\n  // apply uuid for node instance\n  $el.dataset.uid = nodeUI.uid;\n  return nodeUI.$el;\n};\nconst unregisterElement = (canvasUI, nodeUI) => {\n  if (!nodeUI.$el) {\n    throw new Error(`[MINDWIRED][ERROR] not registered node. (${nodeUI.uid})`);\n  }\n  nodeUI.$el.remove();\n  delete nodeUI.$el;\n};\nconst installDnd = (canvasUI) => {\n  return new DndContext({\n    accept: (el) => {\n      const mwd = canvasUI.config.mindWired();\n      if (dom.closest(el, \"[data-editor-element]\")) {\n        return false;\n      }\n      if (dom.is(el, `[data-cmd=\"set-para\"]`)) {\n        canvasUI.dndContext.capture(\n          \"handler\",\n          changeParentDndHandler(canvasUI)\n        );\n        return true;\n      } else if (dom.closest(el, \"[data-cmd]\")) {\n        return false;\n      } else if (dom.is(el, \"canvas\")) {\n        canvasUI.dndContext.capture(\"handler\", viewportDndHandler(canvasUI));\n        return true;\n      } else if (dom.is(el, \".mwd-node\")) {\n        const nodeId = el.dataset.uid;\n        canvasUI.dndContext.capture(\"handler\", nodeDndHandler(canvasUI));\n        canvasUI.dndContext.capture(\"nodeId\", nodeId);\n        canvasUI.dndContext.capture(\"editing\", mwd.isEditing());\n        return true;\n      } else {\n        return false;\n      }\n    },\n    beforeDrag: (e) => {\n      const handler = canvasUI.dndContext.getData(\"handler\");\n      handler.beforeDrag(e);\n    },\n    dragging: (e) => {\n      const editing = canvasUI.dndContext.getData(\"editing\");\n      if (!editing) {\n        const handler = canvasUI.dndContext.getData(\"handler\");\n        handler.dragging(e);\n      }\n    },\n    afterDrag: (e) => {\n      const editing = canvasUI.dndContext.getData(\"editing\");\n      if (!editing) {\n        const handler = canvasUI.dndContext.getData(\"handler\");\n        handler.afterDrag(e);\n      }\n    },\n  });\n};\nconst updateFolding = (node, display) => {\n  dom.css(node.$el, { display });\n  if (node.isFolded()) {\n    return;\n  }\n  node.subs.forEach((child) => {\n    updateFolding(child, display);\n  });\n};\nconst installFocusHandler = (canvasUI) => {\n  /*\n  dom.event.focus(\n    canvasUI.$viewport,\n    (e) => {\n      if (dom.is(e.target, \"[data-editor-element]\", true)) {\n        // prevents focus to propaga to root elem\n        // it breaks editing process\n      } else if (dom.is(e.target, \".mwd-node\")) {\n        const uid = e.target.parentNode.dataset.uid;\n        const mwd = canvasUI.config.mindWired();\n        const node = mwd.findNode((node) => node.uid === uid);\n        canvasUI.config.emit(EVENT.NODE.SELECTED, { node });\n      }\n    },\n    true\n  );\n  */\n};\nclass CanvasUI {\n  constructor(config) {\n    this.config = config;\n    this.$viewport = installCanvasElem(this);\n    captureContext2D(this);\n    installFocusHandler(this);\n    this.dndContext = installDnd(this);\n    let timer = null;\n    const resizer = () => {\n      clearTimeout(timer);\n      timer = setTimeout(captureContext2D, 150, this);\n    };\n    this.resizeObserver = new ResizeObserver(resizer);\n    this.resizeObserver.observe(this.$viewport);\n    this.selectionArea = null;\n  }\n  get $canvas() {\n    return this.$viewport.querySelector(\"canvas\");\n  }\n  get $holder() {\n    return this.$viewport.querySelector(\".mwd-nodes\");\n  }\n  get scale() {\n    return this.config.scale;\n  }\n  getContext() {\n    return this.$ctx;\n  }\n  getHolderOffset() {\n    const el = this.$holder;\n    // const baseOffset = this.config.getOffset();\n    return { x: el.offsetLeft, y: el.offsetTop };\n  }\n  getDimension() {\n    const el = this.$canvas;\n    return { width: el.offsetWidth, height: el.offsetHeight };\n  }\n  elemOf(cssSelector) {\n    return this.$viewport.querySelector(cssSelector);\n  }\n  shiftBy(dx, dy) {\n    const offset = this.config.getOffset();\n    offset.x += dx;\n    offset.y += dy;\n    this.config.setOffset(offset);\n    this.repaintNodeHolder();\n  }\n  findNodeAt(x, y) {\n    const nodeBodies = this.$holder.querySelectorAll(\".mwd-body\");\n    let found = null;\n    for (let i = 0; i < nodeBodies.length; i++) {\n      const rect = dom.domRect(nodeBodies[i]);\n      if (\n        rect.left <= x &&\n        rect.right >= x &&\n        rect.top <= y &&\n        rect.bottom >= y\n      ) {\n        found = nodeBodies[i];\n        break;\n      }\n    }\n    if (!found) {\n      return null;\n    }\n    const mwd = this.config.mindWired();\n    const nodeEl = dom.closest(found, \".mwd-node\");\n    const node = mwd.findNode((node) => node.uid === nodeEl.dataset.uid);\n    return node;\n  }\n  drawPath(points, options) {\n    const ctx = this.getContext();\n    Object.keys(options || {}).forEach((key) => {\n      const val = options[key];\n      ctx[key] = val;\n    });\n    let s = points[0];\n    points = points.slice(1);\n\n    const offset = this.getHolderOffset();\n    ctx.beginPath();\n    ctx.moveTo(offset.x + s.x, offset.y + s.y);\n    points.forEach((e) => {\n      ctx.lineTo(offset.x + e.x, offset.y + e.y);\n    });\n    ctx.stroke();\n  }\n  drawCurve(s, e, option) {\n    const lenSE = Math.sqrt(\n      (s.x - e.x) * (s.x - e.x) + (s.y - e.y) * (s.y - e.y)\n    );\n    const degree = option.degree;\n    const length = lenSE * option.ratio;\n    const scale = length / lenSE;\n    const cp1 = geom.rotate(s, e, degree, { scale });\n    const cp2 = geom.rotate(e, s, degree, { scale });\n    const offset = this.getHolderOffset();\n    const ctx = this.getContext();\n    Object.keys(option.props || {}).forEach((key) => {\n      const val = option.props[key];\n      ctx[key] = val;\n    });\n    ctx.beginPath();\n    ctx.moveTo(offset.x + s.x, offset.y + s.y);\n    ctx.bezierCurveTo(\n      offset.x + cp1.x,\n      offset.y + cp1.y,\n      offset.x + cp2.x,\n      offset.y + cp2.y,\n      offset.x + e.x,\n      offset.y + e.y\n    );\n    ctx.stroke();\n  }\n  drawBeizeCurve(s, e, option) {\n    const ctx = this.getContext();\n    Object.keys(option.props || {}).forEach((key) => {\n      const val = option.props[key];\n      ctx[key] = val;\n    });\n    const [cp1, cp2] = option.cpoints;\n    const offset = this.getHolderOffset();\n    ctx.beginPath();\n    ctx.moveTo(offset.x + s.x, offset.y + s.y);\n    ctx.bezierCurveTo(\n      offset.x + cp1.x,\n      offset.y + cp1.y,\n      offset.x + cp2.x,\n      offset.y + cp2.y,\n      offset.x + e.x,\n      offset.y + e.y\n    );\n    ctx.stroke();\n  }\n  drawVLines(xPoints, option) {\n    const H = this.$viewport.offsetHeight;\n    const ctx = this.getContext();\n    ctx.save();\n    if (typeof option === \"function\") {\n      option(ctx);\n    }\n    ctx.beginPath();\n    const offset = this.getHolderOffset();\n    xPoints.forEach((x) => {\n      ctx.moveTo(offset.x + x, 0);\n      ctx.lineTo(offset.x + x, H);\n    });\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n  drawHLines(yPoints, option) {\n    const W = this.$viewport.offsetWidth;\n    const ctx = this.getContext();\n    ctx.save();\n    if (typeof option === \"function\") {\n      option(ctx);\n    }\n    ctx.beginPath();\n    const offset = this.getHolderOffset();\n    yPoints.forEach((y) => {\n      ctx.moveTo(0, offset.y + y);\n      ctx.lineTo(W, offset.y + y);\n    });\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n  clear() {\n    const dim = this.getDimension();\n    const ctx = this.getContext();\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, dim.width, dim.height);\n\n    // drawGrid(ctx, dim);\n  }\n\n  repaintNodeHolder() {\n    const baseOffset = this.config.getOffset();\n    const { scale } = this.config;\n    dom.css(this.$holder, {\n      top: `calc(50% + ${baseOffset.y}px)`,\n      left: `calc(50% + ${baseOffset.x}px)`,\n      transform: `scale(${scale})`,\n    });\n    if (this.selectionArea) {\n      this.selectionArea.draw(this);\n    }\n  }\n  moveNode(nodeUI) {\n    // moveNode\n    const { parent } = nodeUI;\n    const $subs = dom.findOne(parent.$el, \".mwd-subs\");\n    $subs.append(nodeUI.$el);\n  }\n  drawSelection(nodes) {\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n    this.hideSelection();\n    const rects = nodes.map((n) => new NodeRect(n, this.scale));\n    this.selectionArea = rects.reduce((acc, rect) => acc.merge(rect), rects[0]);\n    this.selectionArea.draw(this);\n  }\n  hideSelection() {\n    if (this.selectionArea) {\n      this.selectionArea.clear(this);\n      this.selectionArea = null;\n    }\n  }\n  drawNode(nodeUI) {\n    if (!nodeUI.$el) {\n      registerElement(this, nodeUI);\n    }\n    const { uid } = nodeUI;\n    const nodeEl = dom.findOne(this.$holder, `[data-uid=\"${uid}\"]`);\n    const renderingContext = this.config.getNodeRenderer();\n\n    const { model } = nodeUI;\n    const type = model.type || \"text\";\n    const nodeRenderer = renderingContext.getRenderer(type);\n    nodeRenderer.render(nodeUI.model, this.getNodeBody(nodeUI), nodeUI);\n  }\n  showNodeEditor(nodeUI, $editorEl) {\n    const { uid } = nodeUI;\n    const nodeEl = this.$holder.querySelector(`[data-uid=${uid}]`);\n    nodeEl.append($editorEl);\n    // mark editor element for focus management\n    // see installFocusHandler();\n    $editorEl.dataset.editorElement = \"\";\n    return new Promise((ok) => {\n      setTimeout(ok);\n    });\n  }\n  hideNodeEditor(nodeUI) {\n    const { uid } = nodeUI;\n    const nodeEl = this.$holder.querySelector(`[data-uid=${uid}]`);\n    const editBox = dom.findOne(nodeEl, \"[data-editor-element]\");\n    if (editBox) {\n      editBox.remove();\n    }\n    dom.findOne(nodeEl, \".mwd-body\").focus();\n  }\n  regsiterNode(nodeUI) {\n    registerElement(this, nodeUI);\n    // nodeUI.repaint();\n  }\n  unregisterNode(nodeUI) {\n    unregisterElement(this, nodeUI);\n    this.hideSelection();\n  }\n  updateFoldingNodes(nodeUI) {\n    const display = nodeUI.isFolded() ? \"none\" : \"\";\n    nodeUI.subs.forEach((childNode) => {\n      updateFolding(childNode, display);\n    });\n    const nodeEl = dom.findOne(this.$holder, `[data-uid=\"${nodeUI.uid}\"]`);\n    if (nodeUI.isFolded()) {\n      const rect = dom.domRect(nodeUI.$bodyEl);\n      const foldingEl = dom.parseTemplate(template.foldingControl, {});\n      dom.css(foldingEl, {\n        width: 20,\n        height: 20,\n        transform: `translate(${rect.width / 2}px, -50%)`,\n        zIndex: 0,\n      });\n      nodeEl.append(foldingEl);\n      dom.event.click(foldingEl, (e) => {\n        e.stopPropagation();\n        nodeUI.setFolding(false);\n      });\n    } else {\n      dom.findOne(nodeEl, ':scope > [data-cmd=\"unfolding\"]').remove();\n    }\n  }\n  getNodeBody(nodeUI) {\n    let nodeEl = nodeUI.$el;\n    // let bodyEl = this.$holder.querySelector(`[data-uid=${nodeUI.uid}] .mwd-body`);\n    if (!nodeEl) {\n      nodeEl = registerElement(this, nodeUI);\n    }\n    return nodeEl.querySelector(`.mwd-body`);\n  }\n}\nexport default CanvasUI;\n","/**\n * edge style calculator\n *\n * supported style\n * - name:string\n * - option:object(edge dependant)\n * - color:string(name of color, #aaccss, etc)\n * - width:number(line width)\n */\nconst DEFAULT_EDGE_STYLE = {\n  name: \"line\",\n  option: {},\n  color: \"#000000\",\n  width: 1,\n};\nconst findProp = (node, prop) => {\n  let nodeRef = node;\n  let style = nodeRef.getStyle(\"edge\");\n  while (!style[prop] && !nodeRef.isRoot()) {\n    nodeRef = nodeRef.parent;\n    style = nodeRef.getStyle(\"edge\");\n  }\n  return style[prop] || DEFAULT_EDGE_STYLE[prop];\n};\nclass EdgeStyle {\n  constructor(nodeUI) {\n    this.nodeUI = nodeUI;\n  }\n  get name() {\n    return findProp(this.nodeUI, \"name\");\n  }\n  get option() {\n    return findProp(this.nodeUI, \"option\");\n  }\n  get color() {\n    return findProp(this.nodeUI, \"color\");\n  }\n  get width() {\n    return findProp(this.nodeUI, \"width\");\n  }\n}\n\nexport default EdgeStyle;\n","import { dom } from \"../../service\";\n\nconst widthOf = (node) => {\n  const { width } = node.$style;\n  return typeof width === \"function\" ? width(node) : width;\n};\nconst valignOf = (node) => {\n  const { option } = node.$style;\n  const valign = option && option.valign;\n  return valign || \"center\";\n};\nconst renderUnderline = (canvas, node, rect, padding) => {\n  const width = widthOf(node);\n  // const { scale } = canvas;\n  canvas.drawPath(\n    [\n      { x: rect.left - padding.hor, y: rect.bottom + padding.ver },\n      { x: rect.right + padding.hor, y: rect.bottom + padding.ver },\n    ],\n    { lineWidth: width, strokeStyle: node.$style.color }\n  );\n};\nconst renderCurve = (canvas, srcNode, s, dstNode, e, dx) => {\n  // const { scale } = canvas;\n  const srcWidth = widthOf(srcNode);\n  const dstWidth = widthOf(dstNode);\n  const width = Math.min(srcWidth, dstWidth);\n  const offset = Math.abs(srcWidth - dstWidth);\n  s.y -= offset / 2;\n  const props = { lineWidth: width, strokeStyle: dstNode.$style.color };\n  canvas.drawBeizeCurve(s, e, {\n    cpoints: [\n      { x: s.x + dx / 2, y: s.y },\n      { x: e.x - dx / 2, y: e.y },\n    ],\n    props,\n  });\n  if (offset > 0) {\n    s.y += offset;\n    canvas.drawBeizeCurve(s, e, {\n      cpoints: [\n        { x: s.x + dx / 2, y: s.y },\n        { x: e.x - dx / 2, y: e.y },\n      ],\n      props,\n    });\n  }\n};\nconst renderByMustache = (canvas, srcNode, dstNode) => {\n  const { scale } = canvas;\n  const [s, e] = [srcNode, dstNode].map((node) => {\n    const offset = node.offset(); // pure logical value\n    offset.x *= scale;\n    offset.y *= scale;\n    const rect = dom.domRect(node.$bodyEl);\n    const { width, height } = rect; // with scale applied\n    offset.left = offset.x - width / 2;\n    offset.right = offset.x + width / 2;\n    offset.top = offset.y - height / 2;\n    offset.bottom = offset.y + height / 2;\n    offset.width = width;\n    offset.height = height;\n    return offset;\n  });\n  const padding = { hor: 0, ver: 0 };\n\n  if (valignOf(srcNode) === \"bottom\") {\n    padding.ver = 5;\n  }\n\n  let min, max;\n  if (s.x <= e.x) {\n    min = s;\n    max = e;\n  } else {\n    min = e;\n    max = s;\n  }\n\n  min.x = min.right + padding.hor;\n  max.x = max.left - padding.hor;\n  if (padding.ver > 0) {\n    min.y = min.bottom + padding.ver;\n    max.y = max.bottom + padding.ver;\n  }\n  const dx = max.x - min.x;\n  const dy = max.y - min.y;\n  const w = widthOf(srcNode);\n  if (padding.ver > 0 && srcNode.isRoot() && srcNode.firstChild() === dstNode) {\n    renderUnderline(canvas, srcNode, s, padding);\n  }\n  renderCurve(canvas, srcNode, s, dstNode, e, s === min ? dx : -dx);\n  if (padding.ver > 0) {\n    renderUnderline(canvas, dstNode, e, padding);\n  }\n  // renderUnderline(canvas, dstNode, e, padding);\n  // if (dstNode.isLeaf() && padding.ver > 0) {\n  // }\n};\n\nexport default renderByMustache;\n","import { dom } from \"../../service\";\n\nconst widthOf = (node) => {\n  const { width } = node.$style;\n  return typeof width === \"function\" ? width(node) : width;\n};\nconst valignOf = (node) => {\n  const { option } = node.$style;\n  const valign = option && option.valign;\n  return valign || \"center\";\n};\nconst renderCurve = (canvas, srcNode, s, dstNode, e, dy) => {\n  const { scale } = canvas;\n  const srcWidth = widthOf(srcNode);\n  const dstWidth = widthOf(dstNode);\n  const width = Math.min(srcWidth, dstWidth);\n  const offset = Math.abs(srcWidth - dstWidth);\n  s.x -= offset / 2;\n  const props = { lineWidth: width * scale, strokeStyle: dstNode.$style.color };\n  canvas.drawBeizeCurve(s, e, {\n    cpoints: [\n      { x: s.x, y: s.y + dy / 2 },\n      { x: e.x, y: e.y - dy / 2 },\n    ],\n    props,\n  });\n  if (offset > 0) {\n    s.y += offset;\n    canvas.drawBeizeCurve(s, e, {\n      cpoints: [\n        { x: s.x, y: s.y + dy / 2 },\n        { x: e.x, y: e.y - dy / 2 },\n      ],\n      props,\n    });\n  }\n};\nconst renderByMustache = (canvas, srcNode, dstNode) => {\n  const { scale } = canvas;\n  const [s, e] = [srcNode, dstNode].map((node) => {\n    const offset = node.offset(scale);\n    const rect = dom.domRect(node.$bodyEl);\n    const { width, height } = rect;\n    offset.left = offset.x - width / 2;\n    offset.right = offset.x + width / 2;\n    offset.top = offset.y - height / 2;\n    offset.bottom = offset.y + height / 2;\n    offset.width = width;\n    offset.height = height;\n    return offset;\n  });\n  const padding = { hor: 0, ver: 5 };\n\n  let min, max;\n  if (s.y <= e.y) {\n    min = s;\n    max = e;\n  } else {\n    min = e;\n    max = s;\n  }\n\n  min.y = min.bottom + padding.ver;\n  max.y = max.top - padding.ver;\n\n  // const dx = max.x - min.x;\n  const dy = max.y - min.y;\n  // const w = widthOf(srcNode);\n  renderCurve(canvas, srcNode, s, dstNode, e, s === min ? dy : -dy);\n};\n\nexport default renderByMustache;\n","import { EVENT } from \"../service/event-bus\";\nimport EdgeStyle from \"./edge/edge-style\";\nimport line_edge from \"./edge/line-edge-renderer\";\nimport curve_edge from \"./edge/natural-curve-renderer\";\nimport mustache_edge_lr from \"./edge/mustache-lr-renderer\";\nimport mustache_edge_tb from \"./edge/mustache-tb-renderer\";\n\nconst rendering = {\n  LINE: line_edge,\n  NATURAL_CURVE: curve_edge,\n  MUSTACHE_LR: mustache_edge_lr,\n  MUSTACHE_TB: mustache_edge_tb,\n};\nconst createEdges = (srcNode, edges) => {\n  srcNode.children((child) => {\n    const e = new Edge(srcNode, child);\n    edges.push(e);\n    createEdges(child, edges);\n  });\n};\nconst filterIndex = (edges, callback) => {\n  const pos = [];\n  edges.forEach((e, index) => {\n    if (callback(e)) {\n      pos.push(index);\n    }\n  });\n  return pos;\n};\nconst updateHiddenState = (edgeUI, edge, folded) => {\n  const childEdges = edgeUI.filterEdges(\n    (e) => e.src === edge.dst && !e.src.isFolded()\n  );\n  childEdges.forEach((edge) => {\n    edge.hidden = folded;\n    updateHiddenState(edgeUI, edge, folded);\n  });\n};\nclass Edge {\n  constructor(srcNode, dstNode) {\n    this.srcNode = srcNode;\n    this.dstNode = dstNode;\n    this.hidden = false;\n  }\n  get src() {\n    return this.srcNode;\n  }\n  get dst() {\n    return this.dstNode;\n  }\n  matched(node) {\n    return this.srcNode === node || this.dstNode === node;\n  }\n  matchedDst(node) {\n    return this.dstNode === node;\n  }\n}\nclass EdgeUI {\n  constructor(config, rootNode, canvas) {\n    this.config = config;\n    this.canvas = canvas;\n    this.edges = [];\n    createEdges(rootNode, this.edges);\n    this.config\n      .listen(EVENT.NODE.CREATED, ({ nodes }) => {\n        nodes.forEach((nodeUI) => {\n          const e = new Edge(nodeUI.parent, nodeUI);\n          this.edges.push(e);\n        });\n        this.repaint();\n      })\n      .listen(EVENT.VIEWPORT.RESIZED, () => {\n        this.repaint();\n      })\n      .listen(EVENT.NODE.DELETED, (node) => {\n        const pos = filterIndex(this.edges, (e) => e.matched(node));\n        if (pos.length === 0) {\n          // MEMO invalid state: the deleted node does not exist.\n        } else {\n          pos.reverse().forEach((index) => this.edges.splice(index, 1));\n          // this.edges.splice(pos, 1);\n          this.repaint();\n        }\n      })\n      .listen(EVENT.NODE.MOVED, ({ node, prevParent }) => {\n        const pos = filterIndex(\n          this.edges,\n          (e) => e.src === prevParent && e.dst === node\n        );\n        if (pos.length > 0) {\n          pos.reverse().forEach((index) => this.edges.splice(index, 1));\n        }\n        const e = new Edge(node.parent, node);\n        this.edges.push(e);\n        this.repaint();\n      })\n      .listen(EVENT.NODE.FOLDED, ({ node }) => {\n        const edges = this.edges.filter((edge) => edge.src === node);\n        const folded = node.isFolded();\n        edges.forEach((edge) => {\n          edge.hidden = folded;\n          updateHiddenState(this, edge, folded);\n        });\n\n        this.repaint();\n      });\n  }\n  filterEdges(predicate) {\n    return this.edges.filter(predicate);\n  }\n  repaint(clearCanvas = true) {\n    if (clearCanvas) {\n      this.canvas.clear();\n    }\n    this.edges.forEach((e) => {\n      const { src, dst } = e;\n      const style = dst.$cachedStyle || new EdgeStyle(dst);\n      dst.$cachedStyle = style;\n      if (!e.hidden) {\n        rendering[style.name.toUpperCase()](this.canvas, src, dst);\n      }\n    });\n  }\n}\n\nexport default EdgeUI;\n","import { dom } from \"../../service\";\n/**\n * @param {CanvasUI} canvas\n * @param {NodeUI} srcNode\n * @param {NodeUI} dstNode\n */\nconst renderByLine = (canvas, srcNode, dstNode) => {\n  const { scale } = canvas;\n  const [s, e] = [srcNode, dstNode].map((node) => {\n    const offset = node.offset(); // pure logical value\n    offset.x *= scale;\n    offset.y *= scale;\n    const rect = dom.domRect(node.$bodyEl);\n    const { width, height } = rect; // with scale applied\n    offset.left = offset.x - width / 2;\n    offset.right = offset.x + width / 2;\n    offset.top = offset.y - height / 2;\n    offset.bottom = offset.y + height / 2;\n    offset.width = width;\n    offset.height = height;\n    return offset;\n  });\n  const style = dstNode.$style;\n  canvas.drawPath([s, e], {\n    lineWidth: style.width * scale,\n    strokeStyle: style.color,\n  });\n};\n\nexport default renderByLine;\n","/**\n * natural curve\n */\n/**\n * @param {CanvasUI} canvas\n * @param {NodeUI} srcNode\n * @param {NodeUI} dstNode\n */\nconst renderByCurve = (canvas, srcNode, dstNode) => {\n  const { scale } = canvas;\n  const [s, e] = [srcNode, dstNode].map((node) => node.offset(scale));\n  const style = srcNode.$style;\n  canvas.drawCurve(s, e, {\n    degree: style.option.deg || 20,\n    ratio: style.option.ratio || 0.4,\n    props: {\n      lineWidth: style.width * scale,\n      strokeStyle: style.color,\n    },\n  });\n};\n\nexport default renderByCurve;\n","import { dom } from \"../service\";\nimport { EVENT } from \"../service/event-bus\";\nimport EdgeStyle from \"./edge/edge-style\";\n\nconst parseSubs = (nodeUi) => {\n  const { subs } = nodeUi.config;\n  if (!subs || subs.length === 0) {\n    return [];\n  }\n  return subs.map((elem) => {\n    const node = new NodeUI(elem, nodeUi.sharedConfig);\n    node.parent = nodeUi;\n    return node;\n  });\n};\nlet uid = 100;\nlet zIndex = 1;\nclass NodeUI {\n  constructor(config, sharedConfig, parentNode) {\n    this.config = config;\n    this.sharedConfig = sharedConfig;\n    this.$el = null;\n    this.selected = false;\n    this.editing = false;\n    this.uid = `uuid-${uid++}`;\n    this.zIndex = 0;\n    this.subs = parseSubs(this);\n    this.parent = parentNode;\n    this.$style = new EdgeStyle(this);\n    this.folding = false;\n    this.$dim = null;\n  }\n  get model() {\n    return { ...this.config.model };\n  }\n  get $bodyEl() {\n    const canvas = this.sharedConfig.getCanvas();\n    return canvas.getNodeBody(this);\n  }\n  get x() {\n    return this.config.view.x;\n  }\n  get y() {\n    return this.config.view.y;\n  }\n  get layout() {\n    let { layout } = this.config.view;\n    if (layout) {\n      return { ...layout };\n    } else return this.parent && this.parent.layout;\n  }\n  get active() {\n    return !!this.$el;\n  }\n  get childNodes() {\n    return [...this.subs];\n  }\n  dimension() {\n    const scale = this.sharedConfig.scale;\n    const el = this.$bodyEl;\n    const offset = this.offset();\n    offset.x *= scale;\n    offset.y *= scale;\n    const w = (el.offsetWidth * scale) / 2;\n    const h = (el.offsetHeight * scale) / 2;\n    return (this.$dim = {\n      x: offset.x - w,\n      y: offset.y - h,\n      width: 2 * w,\n      height: 2 * h,\n      cx: offset.x,\n      cy: offset.y,\n      r: offset.x + w,\n      b: offset.y + h,\n    });\n  }\n  level() {\n    return this.isRoot() ? 0 : this.parent.level() + 1;\n  }\n  getStyle(type) {\n    // type: 'edge', 'node'\n    return Object.assign({}, this.config.view[type]);\n  }\n  isSelected() {\n    return this.selected;\n  }\n  setSelected(selected) {\n    this.selected = selected;\n    this.zIndex = ++zIndex;\n    if (this.active) {\n      this.repaint();\n    }\n  }\n  isDescendantOf(dstNode) {\n    let ref = this;\n    while (ref) {\n      if (ref === dstNode) {\n        return true;\n      } else {\n        ref = ref.parent;\n      }\n    }\n    return false;\n  }\n  updateModel(callback) {\n    const { model } = this.config;\n    if (callback(model)) {\n      this.$dim = null;\n      // this.repaint();\n      this.sharedConfig.emit(EVENT.NODE.UPDATED, [this]);\n    }\n  }\n  offset() {\n    let ref = this;\n    const p = { x: 0, y: 0 };\n    while (ref) {\n      const dir = 1; // ref.isRoot() ? -1 : 1;\n      p.x += dir * ref.x;\n      p.y += dir * ref.y;\n      ref = ref.parent;\n    }\n    return p;\n  }\n  setOffset({ x, y }) {\n    if (this.isRoot()) {\n      return;\n    }\n    const poff = this.parent.offset();\n    this.setPos(x - poff.x, y - poff.y);\n  }\n  /**\n   * relative pos from the direct parent\n   * @returns (x, y) from the direct parent\n   */\n  getPos() {\n    return { x: this.x, y: this.y };\n  }\n  setPos(x, y, update = true) {\n    this.config.view.x = x;\n    this.config.view.y = y;\n    if (update) {\n      this.repaint();\n    }\n  }\n  isEditingState() {\n    return this.editing;\n  }\n  setEditingState(editing) {\n    this.editing = editing;\n    this.repaint();\n  }\n  isRoot() {\n    return this.config.root;\n  }\n  isLeaf() {\n    return this.subs.length === 0;\n  }\n  children(callback) {\n    this.subs.forEach((child) => callback(child, this));\n  }\n  find(predicate) {\n    let found = predicate(this);\n    if (found) {\n      return this;\n    }\n    for (let i = 0; i < this.subs.length; i++) {\n      found = this.subs[i].find(predicate);\n      if (found) {\n        break;\n      }\n    }\n    return found;\n  }\n  /**\n   *\n   * @param {NodeUI} childUI\n   * @returns prev parentUI\n   */\n  addChild(childUI) {\n    const prevParent = childUI.parent;\n    if (prevParent && prevParent !== this) {\n      prevParent.removeChild(childUI);\n    }\n    childUI.parent = this;\n    this.subs.push(childUI);\n    const canvasUI = this.sharedConfig.getCanvas();\n    canvasUI.moveNode(childUI);\n    return prevParent;\n  }\n  removeChild(childUI) {\n    if (childUI.parent !== this) {\n      // not a child node\n      return null;\n    }\n    const pos = this.subs.findIndex((node) => node.uid === childUI.uid);\n    if (pos === -1) {\n      // not a child node\n      return null;\n    }\n    const deletedNodes = this.subs.splice(pos, 1);\n    deletedNodes.forEach((node) => (node.parent = null)); // clear ref to parent(this)\n    return deletedNodes[0];\n  }\n  firstChild() {\n    return this.subs[0];\n  }\n  lastChild() {\n    if (this.subs.length === 0) {\n      return null;\n    }\n    return this.subs[this.subs.length - 1];\n  }\n  setFolding(folding) {\n    if (this.folding === folding) {\n      return;\n    }\n    this.folding = folding;\n    this.repaint();\n    this.sharedConfig.emit(EVENT.NODE.FOLDED, {\n      node: this,\n      folded: this.folding,\n    });\n  }\n  isFolded() {\n    return this.folding;\n  }\n  repaint() {\n    const canvasUI = this.sharedConfig.getCanvas();\n    canvasUI.drawNode(this);\n    const { $el } = this;\n    const body = $el.querySelector(\".mwd-body\");\n\n    const pos = this.getPos();\n    dom.css($el, { top: pos.y, left: pos.x, zIndex: this.zIndex });\n\n    const methodName = this.isSelected() ? \"add\" : \"remove\";\n    const className = this.sharedConfig.activeClassName(\"node\");\n    dom.clazz[methodName](body, className);\n\n    const levelClassName = this.sharedConfig.nodeLevelClassName(this);\n    dom.clazz.add(body, levelClassName);\n  }\n}\n\nNodeUI.build = (elem, config) => {\n  elem.root = true;\n  return new NodeUI(elem, config);\n};\nexport default NodeUI;\n","/**\n * Default layout manager\n * It does nothing, keeping all nodes in their position.\n */\n\nconst doLayout = (nodeUI) => {};\nconst setPosition = () => {};\nexport default { doLayout, setPosition };\n","/**\n * reflective layout manager relative to parent\n *\n */\nconst reverseXPos = (node, context) => {\n  const { x, y } = node;\n  node.setPos(-x, y);\n  const manager = context.layoutManager.getLayoutManager(node.layout);\n  manager.doLayout(node, context);\n};\nconst doLayout = (nodeUI, context) => {\n  const { dir } = context;\n  if (!dir) {\n    return;\n  }\n  if (dir.updated(\"LR\") || dir.updated(\"RL\")) {\n    nodeUI.children((childUI) => {\n      reverseXPos(childUI, context);\n    });\n  }\n};\nconst setPosition = (nodeUI, context) => {\n  const { baseNode, rect } = context;\n  const x = baseNode.x;\n  const y = baseNode.y + rect.height + 10;\n  nodeUI.setPos(x, y);\n};\nexport default { doLayout, setPosition };\n","/**\n * reflective layout manager relative to parent\n *\n */\nconst reverseYPos = (node, context) => {\n  const { x, y } = node;\n  node.setPos(x, -y);\n  const manager = context.layoutManager.getLayoutManager(node.layout);\n  manager.doLayout(node, context);\n};\nconst doLayout = (nodeUI, context) => {\n  const { dir } = context;\n  if (!dir) {\n    return;\n  }\n  if (dir.updated(\"TB\") || dir.updated(\"BT\")) {\n    nodeUI.children((childUI) => {\n      reverseYPos(childUI, context);\n    });\n  }\n};\nconst setPosition = (nodeUI, context) => {\n  const { baseNode, rect } = context;\n  const x = baseNode.x + rect.width + 10;\n  const y = baseNode.y;\n  nodeUI.setPos(x, y);\n};\nexport default { doLayout, setPosition };\n","import xLayout from \"./axis-x-layout\";\nimport yLayout from \"./axis-y-layout\";\n\nconst doLayout = (nodeUI, context) => {\n  const { dir } = context;\n  if (!dir) {\n    return;\n  }\n  xLayout.doLayout(nodeUI, context);\n  yLayout.doLayout(nodeUI, context);\n};\nconst setPosition = (nodeUI, context) => {\n  xLayout.setPosition(nodeUI, context);\n};\nexport default {\n  doLayout,\n  setPosition,\n};\n","/**\n * list of layout managers to assign the positions\n */\nimport defaultLayout from \"./node/default-layout\";\nimport xAxisLayout from \"./node/axis-x-layout\";\nimport yAxisLayout from \"./node/axis-y-layout\";\nimport xyAxisLayout from \"./node/axis-xy-layout\";\n\nconst layoutMap = new Map();\nlayoutMap.set(\"DEFAULT\", defaultLayout);\nlayoutMap.set(\"X-AXIS\", xAxisLayout);\nlayoutMap.set(\"Y-AXIS\", yAxisLayout);\nlayoutMap.set(\"XY-AXIS\", xyAxisLayout);\n\nconst getLayoutManager = (layout) => {\n  let fn = layout ? layoutMap.get(layout.type) : defaultLayout;\n  return fn;\n};\nconst setPosition = (nodeUI, context) => {\n  const { layout } = nodeUI;\n  const manager = getLayoutManager(layout);\n  manager.setPosition(nodeUI, context);\n};\nconst layout = (nodeUI, context) => {\n  const { layout } = nodeUI;\n  const manager = getLayoutManager(layout);\n  manager.doLayout(nodeUI, context);\n};\nexport default {\n  getLayoutManager,\n  setPosition,\n  layout,\n};\n","/**\n *\n */\nimport { dom } from \"../../service\";\nimport { EVENT } from \"../../service/event-bus\";\nconst clearSelection = (nodeMap) => {\n  for (let nodeUI of nodeMap.values()) {\n    nodeUI.setSelected(false);\n  }\n  nodeMap.clear();\n};\nconst skipStateForInsert = (nodes) => {\n  if (nodes.length !== 1) {\n    return true;\n  }\n  if (nodes[0].isEditingState()) {\n    return true;\n  }\n  return false;\n};\nconst skipStateForDelete = (nodes) => {\n  if (nodes.length === 0) {\n    return true;\n  }\n  // root node cannot be deleted\n  const rootNode = nodes.find((node) => node.root);\n  return !!rootNode;\n};\nconst appendNode = (selectionModel, parent, sibling) => {\n  const mwd = selectionModel.config.mindWired();\n  mwd.addNode(parent, {\n    model: { text: \"TITLE\" },\n    siblingNode: sibling,\n  });\n};\nconst deleteNodes = (selectionModel, nodesToDel) => {\n  const mwd = selectionModel.config.mindWired();\n  mwd.deleteNodes(nodesToDel);\n};\nconst notifySelection = (selectionModel) => {\n  const { config } = selectionModel;\n  const nodes = selectionModel.getNodes();\n  setTimeout(() => config.emit(EVENT.NODE.SELECTED.CLIENT, { nodes }));\n};\nclass NodeSelectionModel {\n  /**\n   *\n   * @param {Configuration} config (see config.js)\n   */\n  constructor(config) {\n    this.config = config;\n    this.nodeMap = new Map(); // [uid:strng, NodeUI]\n\n    const canvasUI = this.config.getCanvas();\n    this.config.listen(EVENT.NODE.SELECTED, ({ node, append }) => {\n      const selected = this.nodeMap.has(node.uid);\n      if (append) {\n        this.nodeMap.set(node.uid, node);\n        node.setSelected(true);\n        notifySelection(this);\n      } else if (!selected) {\n        clearSelection(this.nodeMap);\n        this.nodeMap.set(node.uid, node);\n        node.setSelected(true); // toggling\n        notifySelection(this);\n      } else {\n      }\n    });\n    this.config.listen(EVENT.VIEWPORT.CLICKED, () => {\n      clearSelection(this.nodeMap);\n      canvasUI.hideSelection();\n      notifySelection(this);\n    });\n\n    dom.event.keyup(canvasUI.$viewport, (e) => {\n      if (this.isEmpty()) {\n        return;\n      }\n      const { code } = e;\n      const [nodeUI] = [...this.nodeMap.values()];\n      const editing = nodeUI.isEditingState();\n      if (\"Space\" === code && !editing) {\n        e.stopPropagation();\n        canvasUI.hideSelection();\n        this.config.emit(EVENT.NODE.EDITING, { editing: true, nodeUI });\n      } else if (\"Escape\" === code) {\n        this.config.emit(EVENT.NODE.EDITING, { editing: false, nodeUI });\n      }\n    });\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForInsert(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        appendNode(this, nodes[0].parent, nodes[0]);\n      },\n      \"enter\"\n    );\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForInsert(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        appendNode(this, nodes[0], nodes[0].lastChild());\n      },\n      \"shift@enter\"\n    );\n\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForDelete(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        deleteNodes(this, nodes);\n        clearSelection(this.nodeMap);\n        notifySelection(this);\n      },\n      \"delete\"\n    );\n  }\n  isEmpty() {\n    return this.nodeMap.size === 0;\n  }\n  getNodes() {\n    return [...this.nodeMap.values()];\n  }\n}\nexport default NodeSelectionModel;\n","import NodeSelectionModel from \"./node-selection-model\";\nconst createSelectionModel = (type, configuration) => {\n  return new NodeSelectionModel(configuration);\n};\nexport default {\n  createSelectionModel,\n};\n","import { EVENT } from \"../../service/event-bus\";\n\nexport default class NodeEditing {\n  constructor(config) {\n    this.config = config;\n    this.node = null;\n    this.config.listen(EVENT.VIEWPORT.CLICKED, () => {\n      this.close();\n    });\n    this.config.listen(EVENT.NODE.SELECTED, ({ node }) => {\n      if (this.node !== node) {\n        this.close(this.node);\n      }\n    });\n  }\n  isEditing() {\n    return !!this.node;\n  }\n  edit(nodeUI) {\n    if (this.node) {\n      this.close();\n      this.node = null;\n    }\n    const renderingContext = this.config.getNodeRenderer();\n    const nodeRenderer = renderingContext.getRenderer(nodeUI.model.type);\n    nodeRenderer.editor(nodeUI);\n    this.node = nodeUI;\n    this.node.setEditingState(true);\n  }\n  close() {\n    if (this.node) {\n      this.node.setEditingState(false);\n      const canvasUI = this.config.getCanvas();\n      canvasUI.hideNodeEditor(this.node);\n    }\n    this.node = null;\n  }\n}\n","const template = {\n  text: '<span class=\"mwd-node-text\"></span>',\n  editor: `<div class=\"mwd-node-editor plain-text-editbox\">\n    <textarea value=\"\"></textarea>\n    <button data-cmd=\"save\">SAVE</button>\n  </div>`,\n};\nclass PlainTextRenderer {\n  constructor(renderingContext) {\n    this.ctx = renderingContext;\n  }\n  install(nodeUI, bodyEl) {\n    // const bodyEl = this.ctx.getNodeBody(nodeUI);\n    const $titleEl = this.ctx.parse(template.text);\n    bodyEl.append($titleEl);\n  }\n  render(model, bodyEl) {\n    const $titleEl = this.ctx.query(bodyEl, \".mwd-node-text\");\n    // const { model } = nodeUI;\n    const lines = model.text\n      .split(\"\\n\")\n      .map((text) => `<p>${text}</p>`)\n      .join(\"\");\n    $titleEl.innerHTML = lines;\n  }\n  editor(nodeUI) {\n    const $editorEl = this.ctx.parse(template.editor, true);\n\n    const textArea = this.ctx.query($editorEl, \"textarea\");\n\n    const { model } = nodeUI;\n    textArea.value = model.text;\n    this.ctx.css(textArea, { width: 120, height: 40 });\n    this.ctx.event.click($editorEl, (e) => {\n      if (e.target.dataset.cmd === \"save\") {\n        nodeUI.updateModel((model) => {\n          model.text = textArea.value.trim();\n          return true;\n        });\n        this.ctx.endEditing();\n      }\n    });\n    this.ctx.installEditor(nodeUI, $editorEl).then(() => {\n      textArea.focus();\n    });\n    return $editorEl;\n  }\n  get name() {\n    return \"text\";\n  }\n}\nexport default PlainTextRenderer;\n","const template = {\n  viewer: `<div class=\"icon-badge-node\">\n    <img>\n    <span class=\"mwd-node-text\"></span>\n  </div>`,\n  editor: `<div class=\"\"></div>`,\n};\n/**\n *  ```\n *  icon-badge renderer\n *  +------+--------------+\n *  | IMG  |    T E X T   |\n *  +------+--------------+\n *\n *  [configuration]\n *  node: {\n *    model: {\n *      type: 'icon-badge',\n *      'icon-badge': {\n *        icon: 'https://image.url.value',\n *        text: 'text value'\n *      }\n *    },\n *    view: { ... }\n *  }\n * ```\n *\n */\nclass IconBadgeRenderer {\n  constructor(renderingContext) {\n    this.ctx = renderingContext;\n  }\n  get name() {\n    return \"icon-badge\";\n  }\n  install(nodeUI, bodyEl) {\n    // const bodyEl = this.ctx.getNodeBody(nodeUI);\n    const $iconBadgeEl = this.ctx.parse(template.viewer);\n    bodyEl.append($iconBadgeEl);\n  }\n  render(model, bodyEl) {\n    // const { model } = nodeUI;\n    const { icon, text } = model[\"icon-badge\"];\n    const $img = this.ctx.query(bodyEl, \"img\");\n    $img.src = icon;\n    const $span = this.ctx.query(bodyEl, \".mwd-node-text\");\n    $span.innerText = text;\n  }\n  startEditing(nodeUI) {\n    console.log(nodeUI);\n  }\n}\nexport default IconBadgeRenderer;\n","const template = {\n  viewer: `<div class=\"mwd-thumbnail-node\"><img draggable=\"false\"></div>`,\n  editor: `\n  <div class=\"mwd-node-editor thumnail-editor\">\n    <div class=\"inline-mwd-form\">\n      <input type=\"text\" data-form-size>\n    </div>\n    <div class=\"preview\">\n      <img class=\"img\"></img>\n    </div>\n    <div class=\"path-form\">\n        <textarea></textarea>\n      </div>\n  </div>`,\n};\n/**\n * ```\n * [configuration]\n * node: {\n *   model: {\n *     type: 'thumnail',\n *     thunmail: {\n *       path: 'https://image.url.value',\n *       size: 40,\n *     }\n *   }\n * }\n * ```\n */\nconst renderThumnail = (el, ctx, model) => {\n  const { path, size } = model;\n  ctx.css(el, {\n    width: size,\n    height: size,\n    backgroundImage: `url(${path})`,\n  });\n};\nclass ThumbnailRenderer {\n  constructor(renderingContext) {\n    this.ctx = renderingContext;\n  }\n  get name() {\n    return \"thumbnail\";\n  }\n  install(nodeUI, bodyEl) {\n    // const bodyEl = this.ctx.getNodeBody(nodeUI);\n    const $thumnailEl = this.ctx.parse(template.viewer);\n    bodyEl.append($thumnailEl);\n  }\n  render(model, bodyEl) {\n    const $div = this.ctx.query(bodyEl, \".mwd-thumbnail-node img\");\n    this.ctx.css($div, { width: model.thumbnail.size, height: \"auto\" });\n    $div.src = model.thumbnail.path;\n  }\n  editor(nodeUI) {\n    const { model } = nodeUI;\n    if (model.type !== \"thumbnail\") {\n      throw new Error(\"EDITOR_ERROR:not a thumbnail node\");\n    }\n    const { path, size } = model.thumbnail;\n\n    const $editorEl = this.ctx.parse(template.editor, true);\n    const $inputEl = this.ctx.query($editorEl, \"input\");\n    $inputEl.value = size;\n    this.ctx.event.keyup(\n      $inputEl,\n      (e) => {\n        const value = e.target.value.trim();\n        this.ctx.valid.number(value).then((num) => {\n          nodeUI.updateModel((model) => {\n            model.thumbnail.size = num;\n            this.ctx.css($imgEl, { width: num });\n            return true;\n          });\n        });\n      },\n      \"enter\"\n    );\n    const $textArea = this.ctx.query($editorEl, \"textarea\");\n    this.ctx.event.keydown(\n      $textArea,\n      (e) => {\n        const url = e.target.value.trim();\n        this.ctx.valid.path(url).then((url) => {\n          nodeUI.updateModel((model) => {\n            model.thumbnail.path = url;\n            $imgEl.src = url;\n            return true;\n          });\n        });\n      },\n      \"enter\"\n    );\n    const $imgEl = this.ctx.query($editorEl, \".preview .img\");\n    this.ctx.css($imgEl, {\n      width: size,\n      height: \"auto\",\n    });\n    $imgEl.src = path;\n    let visible = false;\n    this.ctx.event.click($imgEl, (e) => {\n      visible = !visible;\n      const display = visible ? \"flex\" : \"none\";\n      const pathForm = this.ctx.query($editorEl, \".path-form\");\n      this.ctx.css(pathForm, { display });\n      if (visible) {\n        $textArea.value = model.thumbnail.path;\n      }\n    });\n    // renderThumnail($imgEl, this.ctx, model.thumbnail);\n    this.ctx.installEditor(nodeUI, $editorEl).then(() => {\n      console.log(\"done\");\n    });\n  }\n}\nexport default ThumbnailRenderer;\n","import { dom, uuid } from \"../../service\";\nimport { EVENT } from \"../../service/event-bus\";\n\nconst renderings = new Map();\n\nclass NodeRenderingContext {\n  constructor(canvasUI) {\n    this.canvas = canvasUI;\n    this.uid = `node-rctx-${uuid()}`;\n    renderings.set(this.uid, new Map());\n    this.editingNode = null;\n  }\n  get event() {\n    return dom.event;\n  }\n  get valid() {\n    return dom.valid;\n  }\n  parse(htmlTemplate, fitToCenter) {\n    const $el = dom.parseTemplate(htmlTemplate);\n    if (fitToCenter) {\n      dom.css($el, {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      });\n    }\n    return $el;\n  }\n  register(renderer) {\n    renderings.get(this.uid).set(renderer.name, renderer);\n  }\n  getNodeBody(nodeUI) {\n    return this.canvas.getNodeBody(nodeUI);\n  }\n  getRenderer(type) {\n    const renderer = renderings.get(this.uid).get(type || \"text\");\n    if (!renderer) {\n      throw new Error(`[No Renderer] no such renderer, (type:${type})`);\n    }\n    return renderer;\n  }\n  select(nodeUI, cssSelector) {\n    return nodeUI.$bodyEl.querySelector(cssSelector);\n  }\n  installEditor(nodeUI, $editorEl) {\n    this.editingNode = nodeUI;\n    return this.canvas.showNodeEditor(nodeUI, $editorEl);\n  }\n  css(el, styles) {\n    dom.css(el, styles);\n  }\n  query(el, cssSelector) {\n    return dom.findOne(el, cssSelector);\n  }\n  endEditing() {\n    this.canvas.hideNodeEditor(this.editingNode);\n    this.canvas.config.emit(EVENT.NODE.EDITING, {\n      editing: false,\n      nodeUI: this.editingNode,\n    });\n    this.editingNode = null;\n  }\n}\nexport default NodeRenderingContext;\n","const template = {\n  anchor: `<a href=\"#\" target=\"_\"></a>`,\n};\n\nexport default class LinkRenderer {\n  constructor(renderingContext) {\n    this.ctx = renderingContext;\n  }\n  get name() {\n    return \"link\";\n  }\n  install(nodeUI, bodyEl) {\n    const anchorEl = this.ctx.parse(template.anchor);\n    const { model } = nodeUI;\n    const { body } = model[\"link\"];\n    const renderer = this.ctx.getRenderer(body.type || \"text\");\n    renderer.install(nodeUI, anchorEl);\n    bodyEl.append(anchorEl);\n  }\n  render(model, bodyEl) {\n    // const { model } = nodeUI;\n    const { url, body } = model[\"link\"];\n    const $a = this.ctx.query(bodyEl, \"a\");\n    $a.href = url;\n    const renderer = this.ctx.getRenderer(body.type || \"text\");\n    renderer.render(body, $a);\n  }\n}\n","import PlainTextRenderer from \"./renderer/plain-text-renderer\";\nimport IconBadgeRenderer from \"./renderer/icon-badge-renderer\";\nimport ThumbnailRenderer from \"./renderer/thumbnail-renderer\";\nimport NodeRenderingContext from \"./node-rendering-context\";\nimport LinkRenderer from \"./renderer/link-renderer\";\n\nconst createRenderingContext = (canvasUI) => new NodeRenderingContext(canvasUI);\n\nconst getRenderer = (type) => {\n  return renderings.get(type);\n};\n\nconst install = (canvasUI) => {\n  const ctx = createRenderingContext(canvasUI);\n  const plainTextRenderer = new PlainTextRenderer(ctx);\n  ctx.register(plainTextRenderer);\n  const iconBadgeRenderer = new IconBadgeRenderer(ctx);\n  ctx.register(iconBadgeRenderer);\n  const thumnailRenderer = new ThumbnailRenderer(ctx);\n  ctx.register(thumnailRenderer);\n  const linkRenderer = new LinkRenderer(ctx);\n  ctx.register(linkRenderer);\n  return ctx;\n};\nexport default {\n  install,\n  getRenderer,\n};\n","import dom from \"./dom\";\nimport clone from \"./clone\";\nconst uuid = (len) => {\n  len = len || 16;\n  let id = \"\";\n  while (id.length < len) {\n    id += Math.random().toString(36).substring(2);\n  }\n  return id.substring(0, len);\n};\nexport { dom, clone, uuid };\nexport default {\n  dom,\n  clone,\n  uuid,\n};\n","const captureSnapLines = (nodes, node, hSnaps, vSnaps) => {\n  if (nodes.includes(node)) {\n    return;\n  }\n  const dim = node.dimension();\n  // top, center, bottom\n  hSnaps.add(dim.y);\n  hSnaps.add(dim.cy);\n  hSnaps.add(dim.b);\n  // left, center, right\n  vSnaps.add(dim.x);\n  vSnaps.add(dim.cx);\n  vSnaps.add(dim.r);\n  if (node.isFolded()) {\n    return;\n  }\n  node.subs.forEach((child) => {\n    captureSnapLines(nodes, child, hSnaps, vSnaps);\n  });\n};\nconst abs = (a) => Math.abs(a);\nconst adj = (points, dim, dir) => {\n  return points.reduce((adj, p) => {\n    const a = dim[dir] - adj;\n    const b = dim[dir] - p;\n    return abs(a) <= abs(b) ? adj : p;\n  }, points[0]);\n};\nconst minGapIndex = (gaps) =>\n  gaps.reduce(\n    (minIdx, gap, idx) => (abs(gap) < abs(gaps[minIdx]) ? idx : minIdx),\n    0\n  );\nconst lineStyling = (ctx, ui, dir) => {\n  ctx.strokeStyle = ui.snap.color[dir];\n  ctx.lineWidth = ui.snap.width || 0.4;\n  if (ui.snap.dash) {\n    ctx.setLineDash(ui.snap.dash);\n  }\n};\nexport default class AligmentUI {\n  /**\n   *\n   * @param {Configuration} config (see config.js)\n   */\n  constructor(config) {\n    this.config = config;\n  }\n  turnOn(rootNode, nodes) {\n    if (!nodes || nodes.length === 0 || !this.config.snapEnabled) {\n      return;\n    }\n    const vLines = new Set(); // [x in (x,0), (x,H)]\n    const hLines = new Set(); // [y in (0,y), (W,y)]\n    this.activeNodes = [...nodes];\n    captureSnapLines(nodes, rootNode, hLines, vLines, this.config.scale);\n    this.snaps = { hLines, vLines };\n  }\n  turnOff() {\n    this.callback = null;\n    this.snaps = null;\n    this.node = null;\n  }\n  doAlign() {\n    if (!this.snaps || this.snaps.length === 0) {\n      return;\n    }\n    const { ui } = this.config;\n    const node = this.activeNodes[0];\n    const limit = ui.snap.limit;\n    const snap = ui.snap.limit;\n    const canvas = this.config.getCanvas();\n    canvas.clear();\n\n    const dim = node.dimension();\n    const vLines = [...this.snaps.vLines.values()].filter(\n      (x) =>\n        Math.abs(dim.x - x) <= limit ||\n        Math.abs(dim.r - x) <= limit ||\n        abs(dim.cx - x) <= limit\n    );\n    const hLines = [...this.snaps.hLines.values()].filter(\n      (y) =>\n        Math.abs(dim.y - y) <= limit ||\n        Math.abs(dim.b - y) <= limit ||\n        Math.abs(dim.cy - y) <= limit\n    );\n\n    const delta = { x: 0, y: 0 };\n    if (vLines.length > 0) {\n      const adjL = adj(vLines, dim, \"x\");\n      const adjC = adj(vLines, dim, \"cx\");\n      const adjR = adj(vLines, dim, \"r\");\n      const gaps = [adjC - dim.cx, adjL - dim.x, adjR - dim.r];\n      const idx = minGapIndex(gaps);\n      if (abs(gaps[idx]) <= snap) {\n        delta.x = gaps[idx];\n      }\n      if (this.config.snapEnabled) {\n        canvas.drawVLines([adjL, adjC, adjR], (ctx) =>\n          lineStyling(ctx, ui, \"vertical\")\n        );\n      }\n    }\n\n    if (hLines.length > 0) {\n      const adjT = adj(hLines, dim, \"y\");\n      const adjC = adj(hLines, dim, \"cy\");\n      const adjB = adj(hLines, dim, \"b\");\n\n      const gaps = [adjC - dim.cy, adjT - dim.y, adjB - dim.b];\n      const idx = minGapIndex(gaps);\n      if (abs(gaps[idx]) <= snap) {\n        delta.y = gaps[idx];\n      }\n      if (this.config.snapEnabled) {\n        canvas.drawHLines([adjT, adjC, adjB], (ctx) =>\n          lineStyling(ctx, ui, \"horizontal\")\n        );\n      }\n    }\n\n    this.activeNodes.forEach((each) => {\n      const off = each.offset();\n      off.x += delta.x;\n      off.y += delta.y;\n      each.setOffset(off);\n    });\n    // node.setOffset(pos);\n  }\n}\n","import { clone } from \"../../service\";\n\nconst NO_OP = (_) => _;\nconst buildTree = (dataSource, dataSet, parentSet) => {\n  const nodeConfigs = dataSet.toNodeConfigs(parentSet, dataSource);\n  const childSets = dataSource.childSetOf(dataSet.name);\n  childSets.forEach((childSet) => {\n    buildTree(dataSource, childSet, dataSet);\n  });\n  return nodeConfigs;\n};\n/**\n * datasource for tree structure\n */\nclass DataSet {\n  constructor(name, userDataList, parentType, callbacks) {\n    this.name = name;\n    this.userDataList = userDataList;\n    this.parentType = parentType;\n    this.callbacks = callbacks;\n  }\n  toNodeConfigs(parentSet, dataSource) {\n    let relation = parentSet ? this.callbacks.relation : null;\n    return this.userDataList.map((userData, index) => {\n      const config = { userData, subs: [] };\n      const { model } = this.callbacks;\n      config.model =\n        typeof model === \"function\" ? model(userData) : clone.deepCopy(model);\n\n      if (relation) {\n        const parent = relation(userData, parentSet.userDataList);\n        const parentConfig = dataSource.$ref.get(parent);\n        config.idx = parentConfig.subs.length;\n        parentConfig.subs.push(config);\n      }\n      const { view } = this.callbacks;\n      if (typeof view === \"function\") {\n        config.view = view(userData, config.idx);\n      } else if (typeof view === \"object\") {\n        config.view = clone.deepCopy(view);\n      } else {\n        config.view = { x: 0, y: 0 };\n      }\n      // config.view =\n      //   typeof view === \"function\"\n      //     ? view(userData, config.idx)\n      //     : { x: 0, y: 0 };\n      // how to determine config.view = {x, y}\n      // config.view = {x:0, y:0}\n      dataSource.$ref.set(userData, config);\n      return config;\n    });\n  }\n}\nexport default class TreeDataSource {\n  constructor() {\n    this.dataSets = new Map();\n    this.rootType = null;\n    this.$ref = new Map(); // [{userData, nodeConfig}]\n  }\n  root(dataType, userData, option) {\n    const dataList = [];\n    if (!option) {\n      option = userData;\n      dataList.push({});\n    } else {\n      dataList.push(userData);\n    }\n    const virtualRoot = !option.virtual;\n    this.rootType = dataType;\n    option.relation = NO_OP;\n    return this.dataSet(dataType, dataList, option);\n  }\n  childSetOf(parentType) {\n    return [...this.dataSets.values()].filter(\n      (dset) => dset.parentType === parentType\n    );\n  }\n  dataSet(dataType, userDataList, option) {\n    const callbacks = {};\n    callbacks.relation = option.relation || NO_OP;\n    callbacks.model = option.model || NO_OP;\n    callbacks.view = option.view;\n    const type = dataType.trim();\n    if (this.dataSets.has(type)) {\n      throw new Error(`[MIND WIRED] existing data type: [${dataType}]`);\n    }\n    const dataSet = new DataSet(type, userDataList, option.parent, callbacks);\n    this.dataSets.set(type, dataSet);\n    return this;\n  }\n  build() {\n    const rootSet = this.dataSets.get(this.rootType);\n    const rootDataSet = buildTree(this, rootSet);\n    return rootDataSet[0];\n  }\n}\n","/**\n * direction relative to parent node\n */\n\nconst resolve = (format) => {\n  if (\"LR\" === format) {\n    return { dir: \"horizontal\", pos: [-1, 1] };\n  } else if (\"RL\" === format) {\n    return { dir: \"horizontal\", pos: [1, -1] };\n  } else if (\"TB\" === format) {\n    return { dir: \"vertical\", pos: [-1, 1] };\n  } else if (\"BT\" === format) {\n    return { dir: \"vertical\", pos: [1, -1] };\n  }\n};\nclass Direction {\n  constructor(nodeUI) {\n    this.node = nodeUI;\n    this.prev = null;\n    this.capture();\n  }\n  get horizontal() {\n    const { x } = this.node;\n    return x <= 0 ? -1 : 1;\n  }\n  get vertical() {\n    const { y } = this.node;\n    return y <= 0 ? -1 : 1;\n  }\n  updated(format) {\n    const { dir, pos } = resolve(format);\n    const cur = this[dir];\n    return this.prev[dir] === pos[0] && cur === pos[1];\n  }\n  capture() {\n    const { x, y } = this.node;\n    this.prev = {\n      horizontal: x <= 0 ? -1 : 1,\n      vertical: y <= 0 ? -1 : 1,\n    };\n  }\n}\n\nexport default Direction;\n","import Direction from \"./direction\";\n\nconst capturePos = (posMap, nodeUI) => {\n  posMap.set(nodeUI, nodeUI.getPos());\n  nodeUI.subs.forEach((childUI) => capturePos(posMap, childUI));\n};\n\nclass Capture {\n  constructor(nodeUI, posMap) {\n    this.node = nodeUI;\n    this.pos = nodeUI.getPos();\n    this.dir = new Direction(nodeUI);\n    capturePos(posMap, nodeUI);\n  }\n}\nexport default class DragContext {\n  constructor() {\n    this.capture = new Map(); //<NodeUI, Capture>\n    this.posMap = new Map();\n  }\n  prepareDnd(nodes) {\n    nodes\n      .filter((node) => !node.isRoot())\n      .forEach((node) => {\n        this.capture.set(node, new Capture(node, this.posMap));\n      });\n  }\n  eachCapture(callback) {\n    for (let capture of this.capture.values()) {\n      callback(capture);\n    }\n  }\n  getUpdatedNodes() {\n    let updated = [];\n    this.posMap.forEach((pos, nodeUI) => {\n      if (pos.x !== nodeUI.x || pos.y !== nodeUI.y) {\n        updated.push(nodeUI);\n      }\n    });\n    return updated;\n  }\n  clear() {\n    this.capture.clear();\n    this.posMap.clear();\n  }\n}\n","import { EVENT } from \"../service/event-bus\";\nimport CanvasUI from \"./canvas-ui\";\nimport EdgeUI from \"./edge-ui\";\nimport NodeUI from \"./node-ui\";\nimport layoutManager from \"./layout\";\nimport selection from \"./selection\";\nimport { NodeEditing } from \"./editing\";\nimport nodeRenderer from \"./node\";\nimport AlignmentUI from \"./alignment/alignment-ui\";\nimport { dom } from \"../service\";\nimport TreeDataSource from \"./datasource/tree-ds\";\nimport DragContext from \"./drag-context\";\n\nconst exportTree = (config, nodeUI) => {\n  const v = nodeUI.config.view;\n  const view = {\n    x: v.x,\n    y: v.y,\n  };\n  if (nodeUI.isRoot()) {\n    view.x = config.ui.offset.x;\n    view.y = config.ui.offset.y;\n  }\n  if (v.layout) {\n    view.layout = v.layout;\n  }\n  if (v.edge) {\n    view.edge = v.edge;\n  }\n  const subs = [];\n  nodeUI.subs.forEach((childUI) => {\n    subs.push(exportTree(config, childUI));\n  });\n  return {\n    model: nodeUI.model,\n    view,\n    subs,\n  };\n};\nconst repaintTree = (mwd, node, propagate = true) => {\n  node.repaint();\n  if (propagate) {\n    node.subs.forEach((childNode) => {\n      repaintTree(mwd, childNode);\n    });\n  }\n};\nconst updateLevelClass = (nodeUI, method, config) => {\n  const className = config.nodeLevelClassName(nodeUI);\n  dom.clazz[method](nodeUI.$bodyEl, className);\n  nodeUI.subs.forEach((childUI) => updateLevelClass(childUI, method, config));\n};\nclass MindWired {\n  /**\n   *\n   * @param {Configuration} configuration (config.js)\n   */\n  constructor(config) {\n    this.config = config;\n    config.mindWired = () => this;\n\n    this.canvas = new CanvasUI(config);\n    config.getCanvas = () => this.canvas;\n\n    this.nodeRenderingContext = nodeRenderer.install(this.canvas);\n    config.getNodeRenderer = () => this.nodeRenderingContext;\n\n    this.nodeSelectionModel = selection.createSelectionModel(\"node\", config);\n    this.nodeEditor = new NodeEditing(config);\n    this.alignmentUI = new AlignmentUI(config);\n    this.dragContext = new DragContext();\n\n    this.config.listen(EVENT.DRAG.VIEWPORT, (e) => {\n      this.config.setOffset(e.offset);\n      // this.repaint();\n      this.canvas.repaintNodeHolder();\n      this.edgeUI.repaint();\n      if (e.state === \"DONE\") {\n        this.rootUI.setPos(e.offset.x, e.offset.y);\n        try {\n          this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n            nodes: [this.rootUI],\n            type: \"pos\",\n          });\n        } finally {\n          this.rootUI.setPos(0, 0);\n        }\n      }\n    });\n\n    this.config\n      .listen(EVENT.DRAG.NODE, (e) => {\n        if (e.state === \"READY\") {\n          const nodes = this.nodeSelectionModel.getNodes();\n          /*\n           * shift@click on nodes redirects dragging to their children\n           */\n          const dragTargets =\n            e.target === \"all\" ? nodes : nodes.flatMap((node) => node.subs);\n          // this.draggingNodes = capatureDragData(dragTargets);\n          this.dragContext.prepareDnd(dragTargets);\n          this.alignmentUI.turnOn(this.rootUI, dragTargets);\n          this.canvas.drawSelection(nodes);\n        } else if (e.state === \"DRAG\") {\n          const acceleration = e.target === \"all\" ? 1 : 2.5;\n          this.dragContext.eachCapture((dragging) => {\n            const { node, dir, pos } = dragging;\n            dir.capture();\n            node.setPos(\n              acceleration * e.x + pos.x,\n              acceleration * e.y + pos.y,\n              !this.config.snapEnabled\n            );\n          });\n          this.alignmentUI.doAlign();\n          this.dragContext.eachCapture((dragging) => {\n            const { node, dir } = dragging;\n            layoutManager.layout(node, { dir, layoutManager });\n          });\n          this.canvas.drawSelection(this.nodeSelectionModel.getNodes());\n          this.edgeUI.repaint(!this.config.snapEnabled, false);\n        } else if (e.state === \"DONE\") {\n          this.alignmentUI.turnOff();\n          this.edgeUI.repaint(true);\n          const nodes = this.dragContext.getUpdatedNodes();\n          if (nodes.length > 0) {\n            this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n              nodes,\n              type: \"pos\",\n            });\n          }\n          this.dragContext.clear();\n        }\n      })\n      .listen(EVENT.NODE.EDITING, ({ editing, nodeUI }) => {\n        // console.log(\"[edit]\", nodeUI);\n        if (editing) {\n          this.nodeEditor.edit(nodeUI);\n        } else {\n          this.nodeEditor.close();\n        }\n      })\n      .listen(EVENT.NODE.FOLDED, ({ node }) => {\n        this.canvas.updateFoldingNodes(node);\n      })\n      .listen(EVENT.NODE.UPDATED, (nodes) => {\n        nodes.forEach((node) => node.repaint());\n        this.edgeUI.repaint();\n        this.config.emit(EVENT.NODE.UPDATED.CLIENT, { nodes, type: \"model\" });\n      });\n  }\n  isEditing() {\n    return this.nodeEditor.isEditing();\n  }\n  nodes(elems) {\n    if (elems instanceof TreeDataSource) {\n      const root = elems.build();\n      this.rootUI = NodeUI.build(root, this.config);\n    } else {\n      this.rootUI = NodeUI.build(elems, this.config);\n    }\n    this.edgeUI = new EdgeUI(this.config, this.rootUI, this.canvas);\n    this.config.ui.offset.x = this.rootUI.config.view.x;\n    this.config.ui.offset.y = this.rootUI.config.view.y;\n    this.rootUI.config.view.x = 0;\n    this.rootUI.config.view.y = 0;\n\n    this.repaint();\n    return this;\n  }\n  findNode(predicate) {\n    return this.rootUI.find(predicate);\n  }\n  addNode(parentNode, nodeData, option) {\n    const data = {\n      model: nodeData.model,\n      view: nodeData.view,\n    };\n    if (!data.view) {\n      data.view = {\n        x: 100,\n        y: 0,\n      };\n    }\n    const nodeUI = new NodeUI(data, this.config, parentNode);\n    this.canvas.regsiterNode(nodeUI);\n    parentNode.addChild(nodeUI);\n    if (nodeData.siblingNode) {\n      const rect = dom.domRect(nodeData.siblingNode.$bodyEl);\n      layoutManager.setPosition(nodeUI, {\n        baseNode: nodeData.siblingNode,\n        rect,\n      });\n    }\n    nodeUI.repaint();\n    // this.canvas.repaint(nodeUI);\n\n    this.config.emit(EVENT.NODE.CREATED, { nodes: [nodeUI] }, true);\n    if (option && (option.editing || option.select)) {\n      this.config.emit(EVENT.NODE.SELECTED, { node: nodeUI });\n    }\n    if (option && option.editing) {\n      this.nodeEditor.edit(nodeUI);\n    }\n  }\n  moveNodes(parentNode, nodes, trigger) {\n    const childNodes = nodes.filter((node) => node.parent !== parentNode);\n    childNodes.forEach((child) => {\n      updateLevelClass(child, \"remove\", this.config);\n      const prevParent = parentNode.addChild(child);\n      updateLevelClass(child, \"add\", this.config);\n\n      this.config.emit(EVENT.NODE.MOVED, { node: child, prevParent });\n    });\n    parentNode.setFolding(false);\n    repaintTree(this, parentNode);\n    this.canvas.drawSelection(nodes);\n    if (trigger) {\n      this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n        nodes: childNodes,\n        type: \"path\",\n      });\n    }\n  }\n  deleteNodes(nodes) {\n    const updated = [];\n    const deleted = [];\n    nodes.forEach((node) => {\n      const { parent, childNodes } = node;\n      if (childNodes.length > 0) {\n        // 1. move node.children to node.parent\n        childNodes.forEach((child) => {\n          // keep position\n          child.setPos(child.x + node.x, child.y + node.y);\n        });\n        this.moveNodes(parent, childNodes);\n        // child node can be in deleted nodes\n        updated.push(...childNodes.filter((c) => !nodes.includes(c)));\n      }\n      // 2. delete node(which has no children)\n      const deletedChild = node.parent.removeChild(node);\n      if (deletedChild) {\n        this.canvas.unregisterNode(deletedChild);\n        this.config.emit(EVENT.NODE.DELETED, deletedChild);\n        deleted.push(node);\n      }\n    });\n    if (updated.length > 0) {\n      this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n        nodes: updated,\n        type: \"path\",\n      });\n    }\n    if (deleted.length > 0) {\n      this.config.emit(EVENT.NODE.DELETED.CLIENT, { nodes: deleted });\n    }\n  }\n  getSelectedNodes() {\n    return this.nodeSelectionModel.getNodes();\n  }\n  setLayout(layoutSpec, nodeUI) {\n    const targetNode = nodeUI || this.rootUI;\n    targetNode.config.view.layout = layoutSpec;\n    this.repaint();\n  }\n  setEdge(edgeSpec, nodeUI) {\n    const targetNode = nodeUI || this.rootUI;\n    targetNode.config.view.edge = edgeSpec;\n    this.repaint(nodeUI);\n  }\n  setScale(scale) {\n    this.config.ui.scale = scale;\n    console.log(this.config.ui.scale);\n    this.repaint();\n  }\n  repaint(nodeUI) {\n    nodeUI = nodeUI || this.rootUI;\n    repaintTree(this, nodeUI);\n    this.canvas.repaintNodeHolder();\n    layoutManager.layout(nodeUI, { dir: null });\n    this.edgeUI.repaint();\n\n    this.canvas.hideSelection();\n    this.canvas.drawSelection(this.getSelectedNodes());\n  }\n  listen(event, callback) {\n    this.config.ebus.listen(`${event}.client`, callback);\n    return this;\n  }\n  export() {\n    const node = exportTree(this.config, this.rootUI);\n    return Promise.resolve(JSON.stringify(node));\n  }\n}\n\nexport { MindWired };\n","import { dom } from \"../../service\";\n\nconst changeParentDndHandler = (canvasUI) => ({\n  beforeDrag: (e) => {\n    const { target } = e.originalEvent;\n    const iconEl = target;\n    const mrd = canvasUI.config.mindWired();\n    const { scale } = canvasUI.config;\n    canvasUI.dndContext.capture(\"iconEl\", iconEl);\n  },\n  dragging: (e) => {\n    const { dx, dy } = e;\n    const iconEl = canvasUI.dndContext.getData(\"iconEl\");\n    dom.css(iconEl, {\n      transform: `translate(calc(-50% + ${dx}px), ${dy}px)`,\n    });\n  },\n  afterDrag: () => {\n    const iconEl = canvasUI.dndContext.getData(\"iconEl\");\n    const rect = dom.domRect(iconEl);\n    const cx = rect.x + rect.width / 2;\n    const cy = rect.y + rect.height / 2;\n    dom.css(iconEl, {\n      transform: `translate(-50%, 0)`,\n    });\n    const newParentNode = canvasUI.findNodeAt(cx, cy);\n    if (newParentNode) {\n      const mrd = canvasUI.config.mindWired();\n      const nodes = mrd.getSelectedNodes();\n      if (\n        nodes.filter((child) => newParentNode.isDescendantOf(child)).length > 0\n      ) {\n        // dropping parent on child\n      } else {\n        const mwd = canvasUI.config.mindWired();\n        mwd.moveNodes(newParentNode, nodes, true);\n      }\n    }\n  },\n});\nexport default changeParentDndHandler;\n","import { dom } from \"../../service\";\nimport { EVENT } from \"../../service/event-bus\";\n/**\n * handles viewport dragging\n */\n\nconst nodeDndHandler = (canvasUI) => ({\n  beforeDrag: (e) => {\n    const { target } = e.originalEvent;\n    const nodeEl = dom.closest(target, \".mwd-node\");\n    const nodeId = nodeEl.dataset.uid;\n    canvasUI.dndContext.capture(\"nodeId\", nodeId);\n    const mrd = canvasUI.config.mindWired();\n    const node = mrd.findNode((node) => node.uid === nodeId);\n    canvasUI.config.emit(EVENT.NODE.SELECTED, {\n      node,\n      append: e.originalEvent.shiftKey,\n    });\n    canvasUI.config.emit(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"READY\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: 0,\n      y: 0,\n    });\n  },\n  dragging: (e) => {\n    const { dx, dy } = e;\n    const nodeId = canvasUI.dndContext.getData(\"nodeId\");\n    const { scale } = canvasUI.config;\n    // const scale = 1;\n    canvasUI.config.emit(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"DRAG\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: dx / scale,\n      y: dy / scale,\n    });\n  },\n  afterDrag: (e) => {\n    // console.log(\"[DND AFTER]\", e);\n    const { dx, dy } = e;\n    // canvasUI.shiftBy(dx, dy);\n    const nodeId = canvasUI.dndContext.getData(\"nodeId\");\n    const { scale } = canvasUI.config;\n    // const scale = 1;\n    canvasUI.config.emit(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"DONE\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: dx / scale,\n      y: dy / scale,\n    });\n  },\n});\n\nexport default nodeDndHandler;\n","import { dom, clone } from \"../service\";\nimport { EventBus } from \"../service/event-bus\";\n\nconst DEFAULT_UI_CONFIG = {\n  width: 600,\n  height: 600,\n  scale: 1.0,\n  clazz: {\n    node: \"active-node\",\n    edge: \"active-edge\",\n    schema: (schemaName) => schemaName,\n    level: (level) => `level-${level}`,\n  },\n  offset: { x: 0, y: 0 },\n  snap: {\n    limit: 4,\n    width: 0.4,\n    dash: [6, 2],\n    color: { horizontal: \"orange\", vertical: \"#2bc490\" },\n  },\n  selection: {\n    padding: 5,\n    \"background-color\": \"#b3ddff6b\",\n    \"border-radius\": \"4px\",\n  },\n};\nclass Configuration {\n  constructor({ el, ui }) {\n    this.el = el;\n    this.ui = ui;\n    this.ebus = new EventBus();\n  }\n  get width() {\n    return this.ui.width;\n  }\n  get height() {\n    return this.ui.height;\n  }\n  get scale() {\n    return this.ui.scale;\n  }\n  get snapEnabled() {\n    return this.ui.snap.enabled;\n  }\n  getOffset() {\n    const offset = this.ui.offset;\n    return { ...offset };\n  }\n  setOffset(offset) {\n    this.ui.offset = { ...offset };\n  }\n  relativeOffset(offset) {\n    const baseOffset = this.ui.offset;\n    return { x: baseOffset.x + offset.x, y: baseOffset.y + offset.y };\n  }\n  activeClassName(type) {\n    const className = this.ui.clazz[type];\n    if (!className) {\n      throw new Error(`[MINDWIRED][ERROR] no classname of type : \"${type}\"`);\n    }\n    return className;\n  }\n  nodeLevelClassName(node) {\n    const method = this.ui.clazz.level;\n    if (!dom.types.method(method)) {\n      throw new Error(\n        `clazz.level should be function, but ${typeof method}. (level, node) => {} `\n      );\n    }\n    const className = method\n      ? method(node.level(), node)\n      : `level-${node.level()}`;\n\n    return className;\n  }\n  listen(eventName, callback) {\n    this.ebus.on(eventName, callback);\n    return this;\n  }\n  off(eventName, callback) {\n    this.ebus.off(eventName, callback);\n  }\n  emit(eventName, args, emitForClient) {\n    this.ebus.emit(eventName, args, !!emitForClient);\n    return this;\n  }\n}\n\nconst normalizeSnap = (ui) => {\n  const { snap } = ui;\n  if (snap === false) {\n    ui.snap = clone.deepCopy(DEFAULT_UI_CONFIG.snap);\n    ui.snap.enabled = false;\n  } else {\n    if (dom.valid.string(snap.color)) {\n      snap.color = {\n        horizontal: snap.color.trim(),\n        vertical: snap.color.trim(),\n      };\n    }\n    snap.limit = snap.limit || DEFAULT_UI_CONFIG.snap.limit;\n    snap.width = snap.width || DEFAULT_UI_CONFIG.snap.width;\n    if (snap.dash !== false) {\n      snap.dash = snap.dash || DEFAULT_UI_CONFIG.snap.dash;\n    }\n    snap.enabled = true;\n  }\n};\nConfiguration.parse = (config) => {\n  const cssSelector = config.el;\n  const ui = clone.mergeLeaf(\n    config.ui || {},\n    clone.deepCopy(DEFAULT_UI_CONFIG)\n  );\n\n  normalizeSnap(ui);\n\n  const el =\n    typeof config.el === \"string\"\n      ? document.querySelector(config.el)\n      : config.el;\n  return new Configuration({ el, ui });\n};\nexport default Configuration;\n","import { dom } from \"./service\";\nimport { MindWired } from \"./components/mind-wired\";\nimport Configuration from \"./components/config\";\nimport \"./assets/mind-wired.scss\";\nimport \"./assets/extra/mind-wired-editor.scss\";\nimport TreeDataSource from \"./components/datasource/tree-ds\";\n\nconst injectCanvas = (el) => {\n  const canvas = dom.tag.canvas();\n  el.append(canvas);\n};\nconst autoInstallation = () => {\n  const el = document.querySelector(\"[mind-wired-holder]\");\n  if (el) {\n    let canvasEl = dom.findOne(el, \"canvas\");\n    if (!canvasEl) {\n      canvasEl = injectCanvas(el);\n    }\n  }\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", (event) => {\n  autoInstallation();\n});\n\nconst init = (config) => {\n  const { el } = config;\n  return new Promise((success, failure) => {\n    if (el) {\n      const configObj = Configuration.parse(config);\n      const mrd = new MindWired(configObj);\n      success(mrd);\n    } else {\n      failure({ cause: \"no_css_selector\" });\n    }\n  });\n};\n\nconst createDataSource = () => new TreeDataSource();\n\nexport { init, createDataSource };\n\nexport default { init, createDataSource };\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","Attr","constructor","attrExpression","expression","isClass","charAt","isId","substring","setAttribute","el","classList","add","closest","elem","selector","nodeType","parentElement","nodeTye","nodeName","parseAttr","split","map","val","trim","filter","createEl","tagName","attributes","tag","createElement","forEach","span","attr","content","innerHTML","iconButton","attrs","button","img","imgUrl","Promise","resolve","reject","onload","width","naturalWidth","height","naturalHeight","onerror","console","log","crossOrigin","div","canvas","registerEvent","target","eventName","callback","options","addEventListener","registerKeyEvent","option","code","toLowerCase","keys","i","ctrlKey","shiftKey","altKey","metaKey","alt","meta","shift","ctrl","parseKeyOption","keyFormat","metaKeys","metas","includes","data","int","attrList","d","v","dataset","parseInt","stopPropagation","createEventBus","EventBus","consume","focus","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","click","keydown","keyup","resize","converters","attrName","attrValue","always","getAttribute","clazz","className","remove","imageSize","xhr","XMLHttpRequest","open","onreadystatechange","readyState","DONE","getResponseHeader","send","fileToImage","file","reader","FileReader","result","readAsDataURL","event","css","styles","style","parseTemplate","template","params","t","text","replaceAll","virtualElem","firstElementChild","findOne","cssSelector","querySelector","is","searchParent","found","matches","domRect","getBoundingClientRect","types","method","valid","path","yes","no","number","n","parseFloat","Number","isNaN","string","isPrimitive","isFunction","deepCopy","dst","Array","isArray","mergeLeaf","undefined","EVENT","DRAG","VIEWPORT","name","desc","NODE","SELECTION","EDIT","CREATED","CLIENT","DELETED","UPDATED","SELECTED","EDITING","FOLDED","RESIZED","CLICKED","EMPTY_SET","Set","callbacks","Map","on","callbackList","set","off","eventObj","idx","findIndex","cb","splice","listen","pathes","toUpperCase","parseEvent","emit","payload","emitForClient","setTimeout","beforeDrag","dragging","afterDrag","convToMouseEvent","te","touch","touches","type","changedTouches","clientX","clientY","layerX","layerY","offsetX","offsetY","pageX","pageY","screenX","screenY","clearTouchTimer","ctx","clearTimeout","touchTimer","handler","accept","originalEvent","sx","sy","dx","dy","ghost","once","preventDefault","cursor","clear","DndContext","passive","install","capture","getData","base","degree","scale","x","y","rad","Math","PI","cos","sin","pixelRatio","devicePixelRatio","viewport","node","foldingControl","NodeRect","offset","rect","dom","$bodyEl","top","right","bottom","left","cx","cy","icon","merge","other","min","max","draw","selection","config","ui","getHolderOffset","$viewport","padding","display","captureContext2D","canvasUI","$canvas","offsetWidth","offsetHeight","getContext","alpha","$ctx","selectionArea","registerElement","nodeUI","$el","uid","renderingContext","getNodeRenderer","model","getNodeBody","getRenderer","schema","registerSchema","placeHolder","elemOf","isRoot","append","parent","updateFolding","isFolded","subs","child","DEFAULT_EDGE_STYLE","color","findProp","nodeRef","getStyle","widthOf","$style","renderUnderline","drawPath","hor","ver","lineWidth","strokeStyle","rendering","LINE","srcNode","dstNode","s","NATURAL_CURVE","drawCurve","deg","ratio","props","MUSTACHE_LR","valign","valignOf","firstChild","srcWidth","dstWidth","abs","drawBeizeCurve","cpoints","renderCurve","MUSTACHE_TB","createEdges","edges","children","Edge","push","filterIndex","pos","index","updateHiddenState","edgeUI","edge","folded","filterEdges","hidden","matched","matchedDst","zIndex","NodeUI","sharedConfig","parentNode","selected","editing","nodeUi","parseSubs","folding","$dim","getCanvas","view","layout","active","childNodes","dimension","w","h","b","level","assign","isSelected","setSelected","repaint","isDescendantOf","ref","updateModel","dir","setOffset","poff","setPos","getPos","update","isEditingState","setEditingState","isLeaf","find","predicate","addChild","childUI","prevParent","removeChild","moveNode","deletedNodes","lastChild","setFolding","drawNode","body","methodName","activeClassName","levelClassName","nodeLevelClassName","build","doLayout","setPosition","context","updated","layoutManager","getLayoutManager","reverseXPos","baseNode","reverseYPos","layoutMap","clearSelection","nodeMap","values","skipStateForInsert","nodes","appendNode","selectionModel","sibling","mindWired","addNode","siblingNode","notifySelection","getNodes","configuration","has","hideSelection","isEmpty","stopImmediatePropagation","nodesToDel","skipStateForDelete","deleteNodes","size","NodeEditing","close","isEditing","edit","editor","hideNodeEditor","LinkRenderer","bodyEl","anchorEl","parse","render","url","$a","query","href","len","id","random","toString","uuid","editingNode","htmlTemplate","fitToCenter","position","transform","register","renderer","select","installEditor","$editorEl","showNodeEditor","endEditing","createRenderingContext","plainTextRenderer","$titleEl","lines","join","textArea","cmd","then","iconBadgeRenderer","$iconBadgeEl","innerText","startEditing","thumnailRenderer","$thumnailEl","$div","thumbnail","$inputEl","num","$imgEl","$textArea","visible","pathForm","linkRenderer","captureSnapLines","hSnaps","vSnaps","dim","a","adj","points","reduce","minGapIndex","gaps","minIdx","gap","lineStyling","snap","dash","setLineDash","AligmentUI","turnOn","rootNode","snapEnabled","vLines","hLines","activeNodes","snaps","turnOff","doAlign","limit","delta","adjL","adjC","adjR","drawVLines","adjT","adjB","drawHLines","each","NO_OP","_","buildTree","dataSource","dataSet","parentSet","nodeConfigs","toNodeConfigs","childSetOf","childSet","DataSet","userDataList","parentType","relation","userData","clone","parentConfig","$ref","TreeDataSource","dataSets","rootType","dataType","dataList","virtual","dset","rootSet","capturePos","posMap","Capture","prev","horizontal","vertical","format","cur","DragContext","prepareDnd","eachCapture","getUpdatedNodes","exportTree","repaintTree","mwd","propagate","childNode","updateLevelClass","MindWired","installCanvasElem","dndContext","iconEl","newParentNode","findNodeAt","getSelectedNodes","moveNodes","getOffset","state","nodeId","findNode","timer","resizeObserver","ResizeObserver","observe","$holder","offsetLeft","offsetTop","getDimension","shiftBy","repaintNodeHolder","nodeBodies","querySelectorAll","nodeEl","slice","beginPath","moveTo","lineTo","stroke","lenSE","sqrt","cp1","geom","cp2","bezierCurveTo","xPoints","H","save","closePath","restore","yPoints","W","fillStyle","fillRect","baseOffset","drawSelection","rects","acc","editorElement","ok","editBox","regsiterNode","unregisterNode","unregisterElement","updateFoldingNodes","foldingEl","nodeRenderingContext","nodeSelectionModel","nodeEditor","alignmentUI","dragContext","rootUI","dragTargets","flatMap","acceleration","elems","reverse","MOVED","clearCanvas","$cachedStyle","nodeData","trigger","deleted","c","deletedChild","setLayout","layoutSpec","setEdge","edgeSpec","setScale","ebus","export","JSON","stringify","DEFAULT_UI_CONFIG","schemaName","Configuration","enabled","relativeOffset","args","normalizeSnap","canvasEl","injectCanvas","autoInstallation","init","success","failure","configObj","cause","createDataSource"],"sourceRoot":""}